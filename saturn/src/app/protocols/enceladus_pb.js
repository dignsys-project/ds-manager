// source: enceladus.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.protocols.enceladus.PostAdminRequest', null, global);
goog.exportSymbol('proto.protocols.enceladus.PostAdminResponse', null, global);
goog.exportSymbol('proto.protocols.enceladus.PostPreviewResourceRequest', null, global);
goog.exportSymbol('proto.protocols.enceladus.PostPreviewResourceResponse', null, global);
goog.exportSymbol('proto.protocols.enceladus.PostResourceResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocols.enceladus.PostResourceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocols.enceladus.PostResourceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocols.enceladus.PostResourceResponse.displayName = 'proto.protocols.enceladus.PostResourceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocols.enceladus.PostPreviewResourceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocols.enceladus.PostPreviewResourceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocols.enceladus.PostPreviewResourceRequest.displayName = 'proto.protocols.enceladus.PostPreviewResourceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocols.enceladus.PostPreviewResourceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocols.enceladus.PostPreviewResourceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocols.enceladus.PostPreviewResourceResponse.displayName = 'proto.protocols.enceladus.PostPreviewResourceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocols.enceladus.PostAdminRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocols.enceladus.PostAdminRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocols.enceladus.PostAdminRequest.displayName = 'proto.protocols.enceladus.PostAdminRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protocols.enceladus.PostAdminResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protocols.enceladus.PostAdminResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.protocols.enceladus.PostAdminResponse.displayName = 'proto.protocols.enceladus.PostAdminResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocols.enceladus.PostResourceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protocols.enceladus.PostResourceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocols.enceladus.PostResourceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocols.enceladus.PostResourceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    common: (f = msg.getCommon()) && common_pb.CommonStatus.toObject(includeInstance, f),
    resource: (f = msg.getResource()) && common_pb.Resource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocols.enceladus.PostResourceResponse}
 */
proto.protocols.enceladus.PostResourceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocols.enceladus.PostResourceResponse;
  return proto.protocols.enceladus.PostResourceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocols.enceladus.PostResourceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocols.enceladus.PostResourceResponse}
 */
proto.protocols.enceladus.PostResourceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonStatus;
      reader.readMessage(value,common_pb.CommonStatus.deserializeBinaryFromReader);
      msg.setCommon(value);
      break;
    case 2:
      var value = new common_pb.Resource;
      reader.readMessage(value,common_pb.Resource.deserializeBinaryFromReader);
      msg.setResource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocols.enceladus.PostResourceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocols.enceladus.PostResourceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocols.enceladus.PostResourceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocols.enceladus.PostResourceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommon();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonStatus.serializeBinaryToWriter
    );
  }
  f = message.getResource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Resource.serializeBinaryToWriter
    );
  }
};


/**
 * optional protocols.common.CommonStatus common = 1;
 * @return {?proto.protocols.common.CommonStatus}
 */
proto.protocols.enceladus.PostResourceResponse.prototype.getCommon = function() {
  return /** @type{?proto.protocols.common.CommonStatus} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonStatus, 1));
};


/**
 * @param {?proto.protocols.common.CommonStatus|undefined} value
 * @return {!proto.protocols.enceladus.PostResourceResponse} returns this
*/
proto.protocols.enceladus.PostResourceResponse.prototype.setCommon = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protocols.enceladus.PostResourceResponse} returns this
 */
proto.protocols.enceladus.PostResourceResponse.prototype.clearCommon = function() {
  return this.setCommon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protocols.enceladus.PostResourceResponse.prototype.hasCommon = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protocols.common.Resource resource = 2;
 * @return {?proto.protocols.common.Resource}
 */
proto.protocols.enceladus.PostResourceResponse.prototype.getResource = function() {
  return /** @type{?proto.protocols.common.Resource} */ (
    jspb.Message.getWrapperField(this, common_pb.Resource, 2));
};


/**
 * @param {?proto.protocols.common.Resource|undefined} value
 * @return {!proto.protocols.enceladus.PostResourceResponse} returns this
*/
proto.protocols.enceladus.PostResourceResponse.prototype.setResource = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protocols.enceladus.PostResourceResponse} returns this
 */
proto.protocols.enceladus.PostResourceResponse.prototype.clearResource = function() {
  return this.setResource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protocols.enceladus.PostResourceResponse.prototype.hasResource = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocols.enceladus.PostPreviewResourceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocols.enceladus.PostPreviewResourceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocols.enceladus.PostPreviewResourceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocols.enceladus.PostPreviewResourceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    encodedimage: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocols.enceladus.PostPreviewResourceRequest}
 */
proto.protocols.enceladus.PostPreviewResourceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocols.enceladus.PostPreviewResourceRequest;
  return proto.protocols.enceladus.PostPreviewResourceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocols.enceladus.PostPreviewResourceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocols.enceladus.PostPreviewResourceRequest}
 */
proto.protocols.enceladus.PostPreviewResourceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEncodedimage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocols.enceladus.PostPreviewResourceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocols.enceladus.PostPreviewResourceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocols.enceladus.PostPreviewResourceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocols.enceladus.PostPreviewResourceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEncodedimage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string encodedImage = 1;
 * @return {string}
 */
proto.protocols.enceladus.PostPreviewResourceRequest.prototype.getEncodedimage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protocols.enceladus.PostPreviewResourceRequest} returns this
 */
proto.protocols.enceladus.PostPreviewResourceRequest.prototype.setEncodedimage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocols.enceladus.PostPreviewResourceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protocols.enceladus.PostPreviewResourceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocols.enceladus.PostPreviewResourceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocols.enceladus.PostPreviewResourceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    common: (f = msg.getCommon()) && common_pb.CommonStatus.toObject(includeInstance, f),
    previewresource: (f = msg.getPreviewresource()) && common_pb.PreviewResource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocols.enceladus.PostPreviewResourceResponse}
 */
proto.protocols.enceladus.PostPreviewResourceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocols.enceladus.PostPreviewResourceResponse;
  return proto.protocols.enceladus.PostPreviewResourceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocols.enceladus.PostPreviewResourceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocols.enceladus.PostPreviewResourceResponse}
 */
proto.protocols.enceladus.PostPreviewResourceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonStatus;
      reader.readMessage(value,common_pb.CommonStatus.deserializeBinaryFromReader);
      msg.setCommon(value);
      break;
    case 2:
      var value = new common_pb.PreviewResource;
      reader.readMessage(value,common_pb.PreviewResource.deserializeBinaryFromReader);
      msg.setPreviewresource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocols.enceladus.PostPreviewResourceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocols.enceladus.PostPreviewResourceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocols.enceladus.PostPreviewResourceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocols.enceladus.PostPreviewResourceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommon();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonStatus.serializeBinaryToWriter
    );
  }
  f = message.getPreviewresource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.PreviewResource.serializeBinaryToWriter
    );
  }
};


/**
 * optional protocols.common.CommonStatus common = 1;
 * @return {?proto.protocols.common.CommonStatus}
 */
proto.protocols.enceladus.PostPreviewResourceResponse.prototype.getCommon = function() {
  return /** @type{?proto.protocols.common.CommonStatus} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonStatus, 1));
};


/**
 * @param {?proto.protocols.common.CommonStatus|undefined} value
 * @return {!proto.protocols.enceladus.PostPreviewResourceResponse} returns this
*/
proto.protocols.enceladus.PostPreviewResourceResponse.prototype.setCommon = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protocols.enceladus.PostPreviewResourceResponse} returns this
 */
proto.protocols.enceladus.PostPreviewResourceResponse.prototype.clearCommon = function() {
  return this.setCommon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protocols.enceladus.PostPreviewResourceResponse.prototype.hasCommon = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional protocols.common.PreviewResource previewResource = 2;
 * @return {?proto.protocols.common.PreviewResource}
 */
proto.protocols.enceladus.PostPreviewResourceResponse.prototype.getPreviewresource = function() {
  return /** @type{?proto.protocols.common.PreviewResource} */ (
    jspb.Message.getWrapperField(this, common_pb.PreviewResource, 2));
};


/**
 * @param {?proto.protocols.common.PreviewResource|undefined} value
 * @return {!proto.protocols.enceladus.PostPreviewResourceResponse} returns this
*/
proto.protocols.enceladus.PostPreviewResourceResponse.prototype.setPreviewresource = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protocols.enceladus.PostPreviewResourceResponse} returns this
 */
proto.protocols.enceladus.PostPreviewResourceResponse.prototype.clearPreviewresource = function() {
  return this.setPreviewresource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protocols.enceladus.PostPreviewResourceResponse.prototype.hasPreviewresource = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocols.enceladus.PostAdminRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.protocols.enceladus.PostAdminRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocols.enceladus.PostAdminRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocols.enceladus.PostAdminRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    password: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocols.enceladus.PostAdminRequest}
 */
proto.protocols.enceladus.PostAdminRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocols.enceladus.PostAdminRequest;
  return proto.protocols.enceladus.PostAdminRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocols.enceladus.PostAdminRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocols.enceladus.PostAdminRequest}
 */
proto.protocols.enceladus.PostAdminRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocols.enceladus.PostAdminRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocols.enceladus.PostAdminRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocols.enceladus.PostAdminRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocols.enceladus.PostAdminRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.protocols.enceladus.PostAdminRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.protocols.enceladus.PostAdminRequest} returns this
 */
proto.protocols.enceladus.PostAdminRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.protocols.enceladus.PostAdminRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.protocols.enceladus.PostAdminRequest} returns this
 */
proto.protocols.enceladus.PostAdminRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protocols.enceladus.PostAdminResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.protocols.enceladus.PostAdminResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protocols.enceladus.PostAdminResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocols.enceladus.PostAdminResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    common: (f = msg.getCommon()) && common_pb.CommonStatus.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protocols.enceladus.PostAdminResponse}
 */
proto.protocols.enceladus.PostAdminResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protocols.enceladus.PostAdminResponse;
  return proto.protocols.enceladus.PostAdminResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protocols.enceladus.PostAdminResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protocols.enceladus.PostAdminResponse}
 */
proto.protocols.enceladus.PostAdminResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.CommonStatus;
      reader.readMessage(value,common_pb.CommonStatus.deserializeBinaryFromReader);
      msg.setCommon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protocols.enceladus.PostAdminResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protocols.enceladus.PostAdminResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protocols.enceladus.PostAdminResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protocols.enceladus.PostAdminResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommon();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.CommonStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional protocols.common.CommonStatus common = 1;
 * @return {?proto.protocols.common.CommonStatus}
 */
proto.protocols.enceladus.PostAdminResponse.prototype.getCommon = function() {
  return /** @type{?proto.protocols.common.CommonStatus} */ (
    jspb.Message.getWrapperField(this, common_pb.CommonStatus, 1));
};


/**
 * @param {?proto.protocols.common.CommonStatus|undefined} value
 * @return {!proto.protocols.enceladus.PostAdminResponse} returns this
*/
proto.protocols.enceladus.PostAdminResponse.prototype.setCommon = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.protocols.enceladus.PostAdminResponse} returns this
 */
proto.protocols.enceladus.PostAdminResponse.prototype.clearCommon = function() {
  return this.setCommon(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.protocols.enceladus.PostAdminResponse.prototype.hasCommon = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.protocols.enceladus);
