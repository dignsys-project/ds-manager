// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: prometheus.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Saturn.Backends.Protocols.Prometheus {

  /// <summary>Holder for reflection information generated from prometheus.proto</summary>
  public static partial class PrometheusReflection {

    #region Descriptor
    /// <summary>File descriptor for prometheus.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PrometheusReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBwcm9tZXRoZXVzLnByb3RvEhRwcm90b2NvbHMucHJvbWV0aGV1cxoMY29t",
            "bW9uLnByb3RvIo8BChpHZXRWZXJzaW9uUmVxdWlyZWRSZXNwb25zZRIuCgZj",
            "b21tb24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1vblN0YXR1cxIu",
            "Cgd2ZXJzaW9uGAIgASgLMh0ucHJvdG9jb2xzLmNvbW1vbi5Nb29uVmVyc2lv",
            "bhIRCgloYXZlQWRtaW4YAyABKAgidgoRR2V0TWVtYmVyUmVzcG9uc2USLgoG",
            "Y29tbW9uGAEgASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5Db21tb25TdGF0dXMS",
            "MQoLbWVtYmVyQmFzZXMYAiADKAsyHC5wcm90b2NvbHMuY29tbW9uLk1lbWJl",
            "ckJhc2UicQoVR2V0TWVtYmVyQnlJZFJlc3BvbnNlEi4KBmNvbW1vbhgBIAEo",
            "CzIeLnByb3RvY29scy5jb21tb24uQ29tbW9uU3RhdHVzEigKBm1lbWJlchgC",
            "IAEoCzIYLnByb3RvY29scy5jb21tb24uTWVtYmVyIocBChFQdXRNZW1iZXJS",
            "ZXNwb25zZRIuCgZjb21tb24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNv",
            "bW1vblN0YXR1cxIoCgZtZW1iZXIYAiABKAsyGC5wcm90b2NvbHMuY29tbW9u",
            "Lk1lbWJlchIYChBFbmNlbGFkdXNBZGRyZXNzGAMgASgJIkYKFERlbGV0ZU1l",
            "bWJlclJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIeLnByb3RvY29scy5jb21t",
            "b24uQ29tbW9uU3RhdHVzInkKFVB1dE1lbWJlcktpbmRSZXNwb25zZRIuCgZj",
            "b21tb24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1vblN0YXR1cxIw",
            "CgptZW1iZXJCYXNlGAIgASgLMhwucHJvdG9jb2xzLmNvbW1vbi5NZW1iZXJC",
            "YXNlIlsKG1Bvc3RNZW1iZXJQZXJtaXNzaW9uUmVxdWVzdBI8CgpwZXJtaXNz",
            "aW9uGAEgASgOMigucHJvdG9jb2xzLmNvbW1vbi5NRU1CRVJfUEVSTUlTU0lP",
            "Tl9LSU5EIngKHFBvc3RNZW1iZXJQZXJtaXNzaW9uUmVzcG9uc2USLgoGY29t",
            "bW9uGAEgASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5Db21tb25TdGF0dXMSKAoG",
            "bWVtYmVyGAIgASgLMhgucHJvdG9jb2xzLmNvbW1vbi5NZW1iZXIiWwoaUHV0",
            "TWVtYmVyUGVybWlzc2lvblJlcXVlc3QSPQoLcGVybWlzc2lvbnMYASADKA4y",
            "KC5wcm90b2NvbHMuY29tbW9uLk1FTUJFUl9QRVJNSVNTSU9OX0tJTkQidwob",
            "UHV0TWVtYmVyUGVybWlzc2lvblJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIe",
            "LnByb3RvY29scy5jb21tb24uQ29tbW9uU3RhdHVzEigKBm1lbWJlchgCIAEo",
            "CzIYLnByb3RvY29scy5jb21tb24uTWVtYmVyIk0KHURlbGV0ZU1lbWJlclBl",
            "cm1pc3Npb25SZXF1ZXN0EhAKCG1lbWJlcklkGAEgASgDEhoKEm1lbWJlclBl",
            "cm1pc3Npb25JZBgCIAEoAyJ6Ch5EZWxldGVNZW1iZXJQZXJtaXNzaW9uUmVz",
            "cG9uc2USLgoGY29tbW9uGAEgASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5Db21t",
            "b25TdGF0dXMSKAoGbWVtYmVyGAIgASgLMhgucHJvdG9jb2xzLmNvbW1vbi5N",
            "ZW1iZXIixwEKEkdldEFjY291bnRSZXNwb25zZRIuCgZjb21tb24YASABKAsy",
            "Hi5wcm90b2NvbHMuY29tbW9uLkNvbW1vblN0YXR1cxIrCgRraW5kGAIgASgO",
            "Mh0ucHJvdG9jb2xzLmNvbW1vbi5NRU1CRVJfS0lORBI9CgtwZXJtaXNzaW9u",
            "cxgDIAMoDjIoLnByb3RvY29scy5jb21tb24uTUVNQkVSX1BFUk1JU1NJT05f",
            "S0lORBIVCg1kZXBhcnRtZW50SWRzGAQgAygDImgKElBvc3RBY2NvdW50UmVx",
            "dWVzdBINCgVlbWFpbBgBIAEoCRIQCghwYXNzd29yZBgCIAEoCRIxCgptZW1i",
            "ZXJLaW5kGAMgASgOMh0ucHJvdG9jb2xzLmNvbW1vbi5NRU1CRVJfS0lORCJF",
            "ChNQb3N0QWNjb3VudFJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIeLnByb3Rv",
            "Y29scy5jb21tb24uQ29tbW9uU3RhdHVzIjQKEVB1dEFjY291bnRSZXF1ZXN0",
            "Eg0KBWVtYWlsGAEgASgJEhAKCHBhc3N3b3JkGAIgASgJIlMKElB1dEFjY291",
            "bnRSZXNwb25zZRIuCgZjb21tb24YASABKAsyHi5wcm90b2NvbHMuY29tbW9u",
            "LkNvbW1vblN0YXR1cxINCgV0b2tlbhgCIAEoCSJ9ChlHZXREZXBhcnRtZW50",
            "QnlJZFJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIeLnByb3RvY29scy5jb21t",
            "b24uQ29tbW9uU3RhdHVzEjAKCmRlcGFydG1lbnQYAiABKAsyHC5wcm90b2Nv",
            "bHMuY29tbW9uLkRlcGFydG1lbnQiSAoUUHV0RGVwYXJ0bWVudFJlcXVlc3QS",
            "MAoKZGVwYXJ0bWVudBgBIAEoCzIcLnByb3RvY29scy5jb21tb24uRGVwYXJ0",
            "bWVudCJ5ChVQdXREZXBhcnRtZW50UmVzcG9uc2USLgoGY29tbW9uGAEgASgL",
            "Mh4ucHJvdG9jb2xzLmNvbW1vbi5Db21tb25TdGF0dXMSMAoKZGVwYXJ0bWVu",
            "dBgCIAEoCzIcLnByb3RvY29scy5jb21tb24uRGVwYXJ0bWVudCJ8ChlHZXRE",
            "ZXBhcnRtZW50Tm9kZVJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIeLnByb3Rv",
            "Y29scy5jb21tb24uQ29tbW9uU3RhdHVzEi8KBW5vZGVzGAIgAygLMiAucHJv",
            "dG9jb2xzLmNvbW1vbi5EZXBhcnRtZW50Tm9kZSJiChlQb3N0RGVwYXJ0bWVu",
            "dE5vZGVSZXF1ZXN0Eh4KFnBhcmVudERlcGFydG1lbnROb2RlSWQYASABKAMS",
            "DQoFb3JkZXIYAiABKAMSFgoOZGVwYXJ0bWVudE5hbWUYAyABKAkifAoaUG9z",
            "dERlcGFydG1lbnROb2RlUmVzcG9uc2USLgoGY29tbW9uGAEgASgLMh4ucHJv",
            "dG9jb2xzLmNvbW1vbi5Db21tb25TdGF0dXMSLgoEbm9kZRgCIAEoCzIgLnBy",
            "b3RvY29scy5jb21tb24uRGVwYXJ0bWVudE5vZGUiOgoYUHV0RGVwYXJ0bWVu",
            "dE5vZGVSZXF1ZXN0Eh4KFnBhcmVudERlcGFydG1lbnROb2RlSWQYASABKAMi",
            "ewoZUHV0RGVwYXJ0bWVudE5vZGVSZXNwb25zZRIuCgZjb21tb24YASABKAsy",
            "Hi5wcm90b2NvbHMuY29tbW9uLkNvbW1vblN0YXR1cxIuCgRub2RlGAIgASgL",
            "MiAucHJvdG9jb2xzLmNvbW1vbi5EZXBhcnRtZW50Tm9kZSJOChxEZWxldGVE",
            "ZXBhcnRtZW50Tm9kZVJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIeLnByb3Rv",
            "Y29scy5jb21tb24uQ29tbW9uU3RhdHVzIpQBChdHZXRNZW1iZXJSZWNvcmRS",
            "ZXNwb25zZRIuCgZjb21tb24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNv",
            "bW1vblN0YXR1cxI1Cg1tZW1iZXJSZWNvcmRzGAIgAygLMh4ucHJvdG9jb2xz",
            "LmNvbW1vbi5NZW1iZXJSZWNvcmQSEgoKaXRlbXNDb3VudBgDIAEoBSKeAQoh",
            "R2V0TWVtYmVyUmVjb3JkQnlNZW1iZXJJZFJlc3BvbnNlEi4KBmNvbW1vbhgB",
            "IAEoCzIeLnByb3RvY29scy5jb21tb24uQ29tbW9uU3RhdHVzEjUKDW1lbWJl",
            "clJlY29yZHMYAiADKAsyHi5wcm90b2NvbHMuY29tbW9uLk1lbWJlclJlY29y",
            "ZBISCgppdGVtc0NvdW50GAMgASgFIocBChBHZXRTY2VuZVJlc3BvbnNlEi4K",
            "BmNvbW1vbhgBIAEoCzIeLnByb3RvY29scy5jb21tb24uQ29tbW9uU3RhdHVz",
            "Ei8KCnNjZW5lQmFzZXMYAiADKAsyGy5wcm90b2NvbHMuY29tbW9uLlNjZW5l",
            "QmFzZRISCgppdGVtc0NvdW50GAMgASgFIm4KFEdldFNjZW5lQnlJZFJlc3Bv",
            "bnNlEi4KBmNvbW1vbhgBIAEoCzIeLnByb3RvY29scy5jb21tb24uQ29tbW9u",
            "U3RhdHVzEiYKBXNjZW5lGAIgASgLMhcucHJvdG9jb2xzLmNvbW1vbi5TY2Vu",
            "ZSKsAQodR2V0U2NlbmVCeUlkQmx1ZXByaW50UmVzcG9uc2USLgoGY29tbW9u",
            "GAEgASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5Db21tb25TdGF0dXMSJgoFc2Nl",
            "bmUYAiABKAsyFy5wcm90b2NvbHMuY29tbW9uLlNjZW5lEjMKCWJsdWVwcmlu",
            "dBgDIAEoCzIgLnByb3RvY29scy5jb21tb24uU2NlbmVCbHVlcHJpbnQiqwEK",
            "EFBvc3RTY2VuZVJlcXVlc3QSDAoEbmFtZRgBIAEoCRI4Cg5zY2VuZUJsdWVw",
            "cmludBgCIAEoCzIgLnByb3RvY29scy5jb21tb24uU2NlbmVCbHVlcHJpbnQS",
            "OgoPcHJldmlld1Jlc291cmNlGAMgASgLMiEucHJvdG9jb2xzLmNvbW1vbi5Q",
            "cmV2aWV3UmVzb3VyY2USEwoLaXNUZW1wb3JhcnkYBCABKAgioAEKEVBvc3RT",
            "Y2VuZVJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIeLnByb3RvY29scy5jb21t",
            "b24uQ29tbW9uU3RhdHVzEiYKBXNjZW5lGAIgASgLMhcucHJvdG9jb2xzLmNv",
            "bW1vbi5TY2VuZRIzCg5vdmVyd3JpdGVTY2VuZRgDIAEoCzIbLnByb3RvY29s",
            "cy5jb21tb24uU2NlbmVCYXNlIqYBCg9QdXRTY2VuZVJlcXVlc3QSDwoHc2Nl",
            "bmVJZBgBIAEoAxIMCgRuYW1lGAIgASgJEjgKDnNjZW5lQmx1ZXByaW50GAMg",
            "ASgLMiAucHJvdG9jb2xzLmNvbW1vbi5TY2VuZUJsdWVwcmludBI6Cg9wcmV2",
            "aWV3UmVzb3VyY2UYBCABKAsyIS5wcm90b2NvbHMuY29tbW9uLlByZXZpZXdS",
            "ZXNvdXJjZSJqChBQdXRTY2VuZVJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIe",
            "LnByb3RvY29scy5jb21tb24uQ29tbW9uU3RhdHVzEiYKBXNjZW5lGAIgASgL",
            "MhcucHJvdG9jb2xzLmNvbW1vbi5TY2VuZSJFChNEZWxldGVTY2VuZVJlc3Bv",
            "bnNlEi4KBmNvbW1vbhgBIAEoCzIeLnByb3RvY29scy5jb21tb24uQ29tbW9u",
            "U3RhdHVzIrIBChtHZXREZXBhcnRtZW50TWVtYmVyUmVzcG9uc2USLgoGY29t",
            "bW9uGAEgASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5Db21tb25TdGF0dXMSMAoK",
            "ZGVwYXJ0bWVudBgCIAEoCzIcLnByb3RvY29scy5jb21tb24uRGVwYXJ0bWVu",
            "dBIxCgttZW1iZXJCYXNlcxgDIAMoCzIcLnByb3RvY29scy5jb21tb24uTWVt",
            "YmVyQmFzZSKjAQokR2V0RGVwYXJ0bWVudENvbm5lY3Rvckxvd2Vyc1Jlc3Bv",
            "bnNlEi4KBmNvbW1vbhgBIAEoCzIeLnByb3RvY29scy5jb21tb24uQ29tbW9u",
            "U3RhdHVzEksKGGNvbm5lY3RvckRlcGFydG1lbnRCYXNlcxgCIAMoCzIpLnBy",
            "b3RvY29scy5jb21tb24uQ29ubmVjdG9yRGVwYXJ0bWVudEJhc2UiRQobUG9z",
            "dERlcGFydG1lbnRNZW1iZXJSZXF1ZXN0EhQKDGRlcGFydG1lbnRJZBgBIAEo",
            "AxIQCghtZW1iZXJJZBgCIAEoAyKzAQocUG9zdERlcGFydG1lbnRNZW1iZXJS",
            "ZXNwb25zZRIuCgZjb21tb24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNv",
            "bW1vblN0YXR1cxIwCgpkZXBhcnRtZW50GAIgASgLMhwucHJvdG9jb2xzLmNv",
            "bW1vbi5EZXBhcnRtZW50EjEKC21lbWJlckJhc2VzGAMgAygLMhwucHJvdG9j",
            "b2xzLmNvbW1vbi5NZW1iZXJCYXNlIkYKHURlbGV0ZURlcGFydG1lbnRNZW1i",
            "ZXJSZXF1ZXN0EhMKC2RlcGFybWVudElkGAEgASgDEhAKCG1lbWJlcklkGAIg",
            "ASgDIrUBCh5EZWxldGVEZXBhcnRtZW50TWVtYmVyUmVzcG9uc2USLgoGY29t",
            "bW9uGAEgASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5Db21tb25TdGF0dXMSMAoK",
            "ZGVwYXJ0bWVudBgCIAEoCzIcLnByb3RvY29scy5jb21tb24uRGVwYXJ0bWVu",
            "dBIxCgttZW1iZXJCYXNlcxgDIAMoCzIcLnByb3RvY29scy5jb21tb24uTWVt",
            "YmVyQmFzZSK8AQofR2V0RGVwYXJ0bWVudENvbm5lY3RvcnNSZXNwb25zZRIu",
            "CgZjb21tb24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1vblN0YXR1",
            "cxIwCgpkZXBhcnRtZW50GAIgASgLMhwucHJvdG9jb2xzLmNvbW1vbi5EZXBh",
            "cnRtZW50EjcKDmNvbm5lY3RvckJhc2VzGAMgAygLMh8ucHJvdG9jb2xzLmNv",
            "bW1vbi5Db25uZWN0b3JCYXNlIksKHlBvc3REZXBhcnRtZW50Q29ubmVjdG9y",
            "UmVxdWVzdBIUCgxkZXBhcnRtZW50SWQYASABKAMSEwoLY29ubmVjdG9ySWQY",
            "AiABKAMivAEKH1Bvc3REZXBhcnRtZW50Q29ubmVjdG9yUmVzcG9uc2USLgoG",
            "Y29tbW9uGAEgASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5Db21tb25TdGF0dXMS",
            "MAoKZGVwYXJ0bWVudBgCIAEoCzIcLnByb3RvY29scy5jb21tb24uRGVwYXJ0",
            "bWVudBI3Cg5jb25uZWN0b3JCYXNlcxgDIAMoCzIfLnByb3RvY29scy5jb21t",
            "b24uQ29ubmVjdG9yQmFzZSK+AQohRGVsZXRlRGVwYXJ0bWVudENvbm5lY3Rv",
            "clJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIeLnByb3RvY29scy5jb21tb24u",
            "Q29tbW9uU3RhdHVzEjAKCmRlcGFydG1lbnQYAiABKAsyHC5wcm90b2NvbHMu",
            "Y29tbW9uLkRlcGFydG1lbnQSNwoOY29ubmVjdG9yQmFzZXMYAyADKAsyHy5w",
            "cm90b2NvbHMuY29tbW9uLkNvbm5lY3RvckJhc2UidgoUR2V0Q29ubmVjdG9y",
            "UmVzcG9uc2USLgoGY29tbW9uGAEgASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5D",
            "b21tb25TdGF0dXMSLgoJY29ubmVjdG9yGAIgASgLMhsucHJvdG9jb2xzLmNv",
            "bW1vbi5Db25uZWN0b3IigAEKFUdldENvbm5lY3RvcnNSZXNwb25zZRIuCgZj",
            "b21tb24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1vblN0YXR1cxI3",
            "Cg5jb25uZWN0b3JCYXNlcxgCIAMoCzIfLnByb3RvY29scy5jb21tb24uQ29u",
            "bmVjdG9yQmFzZSJ7ChlQb3N0Q29ubmVjdG9yQnlJZFJlc3BvbnNlEi4KBmNv",
            "bW1vbhgBIAEoCzIeLnByb3RvY29scy5jb21tb24uQ29tbW9uU3RhdHVzEi4K",
            "CWNvbm5lY3RvchgCIAEoCzIbLnByb3RvY29scy5jb21tb24uQ29ubmVjdG9y",
            "IjYKFFBvc3RDb25uZWN0b3JSZXF1ZXN0EgwKBG5hbWUYASABKAkSEAoIZGV2",
            "aWNlSWQYAiABKAkitwIKFVBvc3RDb25uZWN0b3JSZXNwb25zZRIuCgZjb21t",
            "b24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1vblN0YXR1cxJDCgRr",
            "aW5kGAIgASgOMjUucHJvdG9jb2xzLnByb21ldGhldXMuUG9zdENvbm5lY3Rv",
            "clJlc3BvbnNlLlBPU1RfS0lORBIuCgljb25uZWN0b3IYAyABKAsyGy5wcm90",
            "b2NvbHMuY29tbW9uLkNvbm5lY3RvciJ5CglQT1NUX0tJTkQSFQoRUE9TVF9L",
            "SU5EX0RFRkFVTFQQABIVChFQT1NUX0tJTkRfQ1JFQVRFRBABEh0KGVBPU1Rf",
            "S0lORF9EVVBMSUNBVEVEX05BTUUQAhIfChtQT1NUX0tJTkRfRFVQTElDQVRF",
            "RF9ERVZJQ0UQAyInChdQdXRDb25uZWN0b3JOYW1lUmVxdWVzdBIMCgRuYW1l",
            "GAEgASgJInoKGFB1dENvbm5lY3Rvck5hbWVSZXNwb25zZRIuCgZjb21tb24Y",
            "ASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1vblN0YXR1cxIuCgljb25u",
            "ZWN0b3IYAiABKAsyGy5wcm90b2NvbHMuY29tbW9uLkNvbm5lY3RvciJOChNQ",
            "dXRDb25uZWN0b3JSZXF1ZXN0EjcKBGtpbmQYASABKA4yKS5wcm90b2NvbHMu",
            "Y29tbW9uLkNPTk5FQ1RPUl9SRUdJU1RFUl9LSU5EInYKFFB1dENvbm5lY3Rv",
            "clJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIeLnByb3RvY29scy5jb21tb24u",
            "Q29tbW9uU3RhdHVzEi4KCWNvbm5lY3RvchgCIAEoCzIbLnByb3RvY29scy5j",
            "b21tb24uQ29ubmVjdG9yIkkKF0RlbGV0ZUNvbm5lY3RvclJlc3BvbnNlEi4K",
            "BmNvbW1vbhgBIAEoCzIeLnByb3RvY29scy5jb21tb24uQ29tbW9uU3RhdHVz",
            "InMKGVB1dENvbm5lY3RvclNjZW5lUmVzcG9uc2USLgoGY29tbW9uGAEgASgL",
            "Mh4ucHJvdG9jb2xzLmNvbW1vbi5Db21tb25TdGF0dXMSJgoFc2NlbmUYAiAB",
            "KAsyFy5wcm90b2NvbHMuY29tbW9uLlNjZW5lIk4KHERlbGV0ZUNvbm5lY3Rv",
            "clNjZW5lUmVzcG9uc2USLgoGY29tbW9uGAEgASgLMh4ucHJvdG9jb2xzLmNv",
            "bW1vbi5Db21tb25TdGF0dXMifAoiUHV0Q29ubmVjdG9yU2NlbmVFbWVyZ2Vu",
            "Y3lSZXNwb25zZRIuCgZjb21tb24YASABKAsyHi5wcm90b2NvbHMuY29tbW9u",
            "LkNvbW1vblN0YXR1cxImCgVzY2VuZRgCIAEoCzIXLnByb3RvY29scy5jb21t",
            "b24uU2NlbmUiVwolRGVsZXRlQ29ubmVjdG9yU2NlbmVFbWVyZ2VuY3lSZXNw",
            "b25zZRIuCgZjb21tb24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1v",
            "blN0YXR1cyJIChxQdXRDb25uZWN0b3JFbWVyZ2VuY3lSZXF1ZXN0EhMKC2Nv",
            "bm5lY3RvcklkGAEgASgDEhMKC2lzRW1lcmdlbmN5GAIgASgIIk8KHVB1dENv",
            "bm5lY3RvckVtZXJnZW5jeVJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIeLnBy",
            "b3RvY29scy5jb21tb24uQ29tbW9uU3RhdHVzIkkKIVB1dENvbm5lY3RvckVt",
            "ZXJnZW5jeVNjZW5lUmVxdWVzdBIPCgdzY2VuZUlkGAEgASgDEhMKC2lzRW1l",
            "cmdlbmN5GAIgASgIIowBCiJQdXRDb25uZWN0b3JFbWVyZ2VuY3lTY2VuZVJl",
            "c3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIeLnByb3RvY29scy5jb21tb24uQ29t",
            "bW9uU3RhdHVzEjYKDWNvbm5lY3RvckJhc2UYAiABKAsyHy5wcm90b2NvbHMu",
            "Y29tbW9uLkNvbm5lY3RvckJhc2UipAEKE0dldFNjaGVkdWxlUmVzcG9uc2US",
            "LgoGY29tbW9uGAEgASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5Db21tb25TdGF0",
            "dXMSLQoJc2NoZWR1bGVzGAIgAygLMhoucHJvdG9jb2xzLmNvbW1vbi5TY2hl",
            "ZHVsZRIuCglwYWdpbmF0b3IYAyABKAsyGy5wcm90b2NvbHMuY29tbW9uLlBh",
            "Z2luYXRvciJ3ChdHZXRTY2hlZHVsZUJ5SWRSZXNwb25zZRIuCgZjb21tb24Y",
            "ASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1vblN0YXR1cxIsCghzY2hl",
            "ZHVsZRgCIAEoCzIaLnByb3RvY29scy5jb21tb24uU2NoZWR1bGUiQwoTUG9z",
            "dFNjaGVkdWxlUmVxdWVzdBIsCghzY2hlZHVsZRgBIAEoCzIaLnByb3RvY29s",
            "cy5jb21tb24uU2NoZWR1bGUidAoUUG9zdFNjaGVkdWxlUmVzcG9uc2USLgoG",
            "Y29tbW9uGAEgASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5Db21tb25TdGF0dXMS",
            "LAoIc2NoZWR1bGUYAiABKAsyGi5wcm90b2NvbHMuY29tbW9uLlNjaGVkdWxl",
            "IjkKGFBvc3RTY2hlZHVsZVNjZW5lUmVxdWVzdBIMCgRuYW1lGAEgASgJEg8K",
            "B3NjZW5lSWQYAiABKAMigwEKGVBvc3RTY2hlZHVsZVNjZW5lUmVzcG9uc2US",
            "LgoGY29tbW9uGAEgASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5Db21tb25TdGF0",
            "dXMSNgoNc2NoZWR1bGVTY2VuZRgCIAEoCzIfLnByb3RvY29scy5jb21tb24u",
            "U2NoZWR1bGVTY2VuZSJCChJQdXRTY2hlZHVsZVJlcXVlc3QSLAoIc2NoZWR1",
            "bGUYASABKAsyGi5wcm90b2NvbHMuY29tbW9uLlNjaGVkdWxlInMKE1B1dFNj",
            "aGVkdWxlUmVzcG9uc2USLgoGY29tbW9uGAEgASgLMh4ucHJvdG9jb2xzLmNv",
            "bW1vbi5Db21tb25TdGF0dXMSLAoIc2NoZWR1bGUYAiABKAsyGi5wcm90b2Nv",
            "bHMuY29tbW9uLlNjaGVkdWxlIkgKFkRlbGV0ZVNjaGVkdWxlUmVzcG9uc2US",
            "LgoGY29tbW9uGAEgASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5Db21tb25TdGF0",
            "dXMiswEKGEdldFNjaGVkdWxlU2NlbmVSZXNwb25zZRIuCgZjb21tb24YASAB",
            "KAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1vblN0YXR1cxI3Cg5zY2hlZHVs",
            "ZVNjZW5lcxgCIAMoCzIfLnByb3RvY29scy5jb21tb24uU2NoZWR1bGVTY2Vu",
            "ZRIuCglwYWdpbmF0b3IYAyABKAsyGy5wcm90b2NvbHMuY29tbW9uLlBhZ2lu",
            "YXRvciKGAQocR2V0U2NoZWR1bGVTY2VuZUJ5SWRSZXNwb25zZRIuCgZjb21t",
            "b24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1vblN0YXR1cxI2Cg1z",
            "Y2hlZHVsZVNjZW5lGAIgASgLMh8ucHJvdG9jb2xzLmNvbW1vbi5TY2hlZHVs",
            "ZVNjZW5lIkwKF1B1dFNjaGVkdWxlU2NlbmVSZXF1ZXN0EgwKBG5hbWUYASAB",
            "KAkSEgoKc2NoZWR1bGVJZBgCIAEoAxIPCgdzY2VuZUlkGAMgASgDIoIBChhQ",
            "dXRTY2hlZHVsZVNjZW5lUmVzcG9uc2USLgoGY29tbW9uGAEgASgLMh4ucHJv",
            "dG9jb2xzLmNvbW1vbi5Db21tb25TdGF0dXMSNgoNc2NoZWR1bGVTY2VuZRgC",
            "IAEoCzIfLnByb3RvY29scy5jb21tb24uU2NoZWR1bGVTY2VuZSJNChtEZWxl",
            "dGVTY2hlZHVsZVNjZW5lUmVzcG9uc2USLgoGY29tbW9uGAEgASgLMh4ucHJv",
            "dG9jb2xzLmNvbW1vbi5Db21tb25TdGF0dXMiNwocUG9zdENvbm5lY3RvclNj",
            "aGVkdWxlUmVxdWVzdBIXCg9zY2hlZHVsZVNjZW5lSWQYASABKAMimQEKHVBv",
            "c3RDb25uZWN0b3JTY2hlZHVsZVJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIe",
            "LnByb3RvY29scy5jb21tb24uQ29tbW9uU3RhdHVzEkgKFmNvbm5lY3RvclNj",
            "aGVkdWxlU2NlbmUYAiABKAsyKC5wcm90b2NvbHMuY29tbW9uLkNvbm5lY3Rv",
            "clNjaGVkdWxlU2NlbmUiewobUHV0Q29ubmVjdG9yU2NoZWR1bGVSZXF1ZXN0",
            "Ei4KCXNjZW5lQmFzZRgBIAEoCzIbLnByb3RvY29scy5jb21tb24uU2NlbmVC",
            "YXNlEiwKCHNjaGVkdWxlGAIgASgLMhoucHJvdG9jb2xzLmNvbW1vbi5TY2hl",
            "ZHVsZSKYAQocUHV0Q29ubmVjdG9yU2NoZWR1bGVSZXNwb25zZRIuCgZjb21t",
            "b24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1vblN0YXR1cxJIChZj",
            "b25uZWN0b3JTY2hlZHVsZVNjZW5lGAIgASgLMigucHJvdG9jb2xzLmNvbW1v",
            "bi5Db25uZWN0b3JTY2hlZHVsZVNjZW5lIlEKH0RlbGV0ZUNvbm5lY3RvclNj",
            "aGVkdWxlUmVzcG9uc2USLgoGY29tbW9uGAEgASgLMh4ucHJvdG9jb2xzLmNv",
            "bW1vbi5Db21tb25TdGF0dXMiiQEKEkdldFdlYXRoZXJSZXNwb25zZRIuCgZj",
            "b21tb24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1vblN0YXR1cxIq",
            "Cgd3ZWF0aGVyGAIgASgLMhkucHJvdG9jb2xzLmNvbW1vbi5XZWF0aGVyEhcK",
            "D2RhdGVUaW1lU2Vjb25kcxgDIAEoAyLuAgojR2V0RGVwYXJ0bWVudFJlc291",
            "cmNlRm9sZGVyUmVzcG9uc2USLgoGY29tbW9uGAEgASgLMh4ucHJvdG9jb2xz",
            "LmNvbW1vbi5Db21tb25TdGF0dXMSTQoFaXRlbXMYAiADKAsyPi5wcm90b2Nv",
            "bHMucHJvbWV0aGV1cy5HZXREZXBhcnRtZW50UmVzb3VyY2VGb2xkZXJSZXNw",
            "b25zZS5JdGVtGscBCgRJdGVtEkAKEmRlcGFydG1lbnROb2RlQmFzZRgBIAEo",
            "CzIkLnByb3RvY29scy5jb21tb24uRGVwYXJ0bWVudE5vZGVCYXNlEjgKDmRl",
            "cGFydG1lbnRCYXNlGAIgASgLMiAucHJvdG9jb2xzLmNvbW1vbi5EZXBhcnRt",
            "ZW50QmFzZRJDCg9yZXNvdXJjZUZvbGRlcnMYAyADKAsyKi5wcm90b2NvbHMu",
            "Y29tbW9uLkRlcGFydG1lbnRSZXNvdXJjZUZvbGRlciJdCiNQb3N0RGVwYXJ0",
            "bWVudFJlc291cmNlRm9sZGVyUmVxdWVzdBIMCgRuYW1lGAEgASgJEigKIHBh",
            "cmVudERlcGFydG1lbnRSZXNvdXJjZUZvbGRlcklkGAIgASgDIqQBCiRQb3N0",
            "RGVwYXJ0bWVudFJlc291cmNlRm9sZGVyUmVzcG9uc2USLgoGY29tbW9uGAEg",
            "ASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5Db21tb25TdGF0dXMSTAoYZGVwYXJ0",
            "bWVudFJlc291cmNlRm9sZGVyGAIgASgLMioucHJvdG9jb2xzLmNvbW1vbi5E",
            "ZXBhcnRtZW50UmVzb3VyY2VGb2xkZXIiOQoiUHV0RGVwYXJ0bWVudFJlc291",
            "cmNlRm9sZGVyUmVxdWVzdBITCgtyZXNvdXJjZUlkcxgBIAMoAyJqCiNQdXRE",
            "ZXBhcnRtZW50UmVzb3VyY2VGb2xkZXJSZXNwb25zZRIuCgZjb21tb24YASAB",
            "KAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1vblN0YXR1cxITCgtyZXNvdXJj",
            "ZUlkcxgCIAMoAyI0CiRQYXRjaERlcGFydG1lbnRSZXNvdXJjZUZvbGRlclJl",
            "cXVlc3QSDAoEbmFtZRgBIAEoCSKlAQolUGF0Y2hEZXBhcnRtZW50UmVzb3Vy",
            "Y2VGb2xkZXJSZXNwb25zZRIuCgZjb21tb24YASABKAsyHi5wcm90b2NvbHMu",
            "Y29tbW9uLkNvbW1vblN0YXR1cxJMChhkZXBhcnRtZW50UmVzb3VyY2VGb2xk",
            "ZXIYAiABKAsyKi5wcm90b2NvbHMuY29tbW9uLkRlcGFydG1lbnRSZXNvdXJj",
            "ZUZvbGRlciJYCiZEZWxldGVEZXBhcnRtZW50UmVzb3VyY2VGb2xkZXJSZXNw",
            "b25zZRIuCgZjb21tb24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1v",
            "blN0YXR1cyJgCi5EZWxldGVEZXBhcnRtZW50UmVzb3VyY2VGb2xkZXJSZXNv",
            "dXJjZVJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIeLnByb3RvY29scy5jb21t",
            "b24uQ29tbW9uU3RhdHVzIuICCiBHZXREZXBhcnRtZW50U2NlbmVGb2xkZXJS",
            "ZXNwb25zZRIuCgZjb21tb24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNv",
            "bW1vblN0YXR1cxJKCgVpdGVtcxgCIAMoCzI7LnByb3RvY29scy5wcm9tZXRo",
            "ZXVzLkdldERlcGFydG1lbnRTY2VuZUZvbGRlclJlc3BvbnNlLkl0ZW0awQEK",
            "BEl0ZW0SQAoSZGVwYXJ0bWVudE5vZGVCYXNlGAEgASgLMiQucHJvdG9jb2xz",
            "LmNvbW1vbi5EZXBhcnRtZW50Tm9kZUJhc2USOAoOZGVwYXJ0bWVudEJhc2UY",
            "AiABKAsyIC5wcm90b2NvbHMuY29tbW9uLkRlcGFydG1lbnRCYXNlEj0KDHNj",
            "ZW5lRm9sZGVycxgDIAMoCzInLnByb3RvY29scy5jb21tb24uRGVwYXJ0bWVu",
            "dFNjZW5lRm9sZGVyIlcKIFBvc3REZXBhcnRtZW50U2NlbmVGb2xkZXJSZXF1",
            "ZXN0EgwKBG5hbWUYASABKAkSJQodcGFyZW50RGVwYXJ0bWVudFNjZW5lRm9s",
            "ZGVySWQYAiABKAMimwEKIVBvc3REZXBhcnRtZW50U2NlbmVGb2xkZXJSZXNw",
            "b25zZRIuCgZjb21tb24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1v",
            "blN0YXR1cxJGChVkZXBhcnRtZW50U2NlbmVGb2xkZXIYAiABKAsyJy5wcm90",
            "b2NvbHMuY29tbW9uLkRlcGFydG1lbnRTY2VuZUZvbGRlciIzCh9QdXREZXBh",
            "cnRtZW50U2NlbmVGb2xkZXJSZXF1ZXN0EhAKCHNjZW5lSWRzGAEgAygDImQK",
            "IFB1dERlcGFydG1lbnRTY2VuZUZvbGRlclJlc3BvbnNlEi4KBmNvbW1vbhgB",
            "IAEoCzIeLnByb3RvY29scy5jb21tb24uQ29tbW9uU3RhdHVzEhAKCHNjZW5l",
            "SWRzGAIgAygDIjEKIVBhdGNoRGVwYXJ0bWVudFNjZW5lRm9sZGVyUmVxdWVz",
            "dBIMCgRuYW1lGAEgASgJIpwBCiJQYXRjaERlcGFydG1lbnRTY2VuZUZvbGRl",
            "clJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIeLnByb3RvY29scy5jb21tb24u",
            "Q29tbW9uU3RhdHVzEkYKFWRlcGFydG1lbnRTY2VuZUZvbGRlchgCIAEoCzIn",
            "LnByb3RvY29scy5jb21tb24uRGVwYXJ0bWVudFNjZW5lRm9sZGVyIlUKI0Rl",
            "bGV0ZURlcGFydG1lbnRTY2VuZUZvbGRlclJlc3BvbnNlEi4KBmNvbW1vbhgB",
            "IAEoCzIeLnByb3RvY29scy5jb21tb24uQ29tbW9uU3RhdHVzIpMBChxHZXRT",
            "Y2VuZUZvbGRlclNjZW5lc1Jlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIeLnBy",
            "b3RvY29scy5jb21tb24uQ29tbW9uU3RhdHVzEi8KCnNjZW5lQmFzZXMYAiAD",
            "KAsyGy5wcm90b2NvbHMuY29tbW9uLlNjZW5lQmFzZRISCgppdGVtc0NvdW50",
            "GAMgASgFIpYBCiJHZXRSZXNvdXJjZUZvbGRlclJlc291cmNlc1Jlc3BvbnNl",
            "Ei4KBmNvbW1vbhgBIAEoCzIeLnByb3RvY29scy5jb21tb24uQ29tbW9uU3Rh",
            "dHVzEi0KCXJlc291cmNlcxgCIAMoCzIaLnByb3RvY29scy5jb21tb24uUmVz",
            "b3VyY2USEQoJaXRlbUNvdW50GAMgASgFIm4KFkdldFN1YnRpdGxlUnNzUmVz",
            "cG9uc2USLgoGY29tbW9uGAEgASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5Db21t",
            "b25TdGF0dXMSJAoEZmVlZBgCIAEoCzIWLnByb3RvY29scy5jb21tb24uRmVl",
            "ZCKrAQoaR2V0U2NlbmVOYXZpZ2F0aW9uUmVzcG9uc2USLgoGY29tbW9uGAEg",
            "ASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5Db21tb25TdGF0dXMSJgoFc2NlbmUY",
            "AiABKAsyFy5wcm90b2NvbHMuY29tbW9uLlNjZW5lEjUKEHNvdXJjZVNjZW5l",
            "QmFzZXMYAyADKAsyGy5wcm90b2NvbHMuY29tbW9uLlNjZW5lQmFzZSKPAQoY",
            "R2V0VmFsaWRhdGVTY2VuZVJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIeLnBy",
            "b3RvY29scy5jb21tb24uQ29tbW9uU3RhdHVzEi8KCnNjZW5lQmFzZXMYAiAD",
            "KAsyGy5wcm90b2NvbHMuY29tbW9uLlNjZW5lQmFzZRISCgppdGVtc0NvdW50",
            "GAMgASgFIpABChtHZXRWYWxpZGF0ZVJlc291cmNlUmVzcG9uc2USLgoGY29t",
            "bW9uGAEgASgLMh4ucHJvdG9jb2xzLmNvbW1vbi5Db21tb25TdGF0dXMSLQoJ",
            "cmVzb3VyY2VzGAIgAygLMhoucHJvdG9jb2xzLmNvbW1vbi5SZXNvdXJjZRIS",
            "CgppdGVtc0NvdW50GAMgASgFIssBCidHZXRWYWxpZGF0ZVJlc291cmNlQnlS",
            "ZXNvdXJjZUlkUmVzcG9uc2USLgoGY29tbW9uGAEgASgLMh4ucHJvdG9jb2xz",
            "LmNvbW1vbi5Db21tb25TdGF0dXMSLAoIcmVzb3VyY2UYAiABKAsyGi5wcm90",
            "b2NvbHMuY29tbW9uLlJlc291cmNlEi8KCnNjZW5lQmFzZXMYAyADKAsyGy5w",
            "cm90b2NvbHMuY29tbW9uLlNjZW5lQmFzZRIRCglpdGVtQ291bnQYBCABKAUi",
            "cwoTUHV0UmVzb3VyY2VSZXNwb25zZRIuCgZjb21tb24YASABKAsyHi5wcm90",
            "b2NvbHMuY29tbW9uLkNvbW1vblN0YXR1cxIsCghyZXNvdXJjZRgCIAEoCzIa",
            "LnByb3RvY29scy5jb21tb24uUmVzb3VyY2UicwoTR2V0UmVzb3VyY2VSZXNw",
            "b25zZRIuCgZjb21tb24YASABKAsyHi5wcm90b2NvbHMuY29tbW9uLkNvbW1v",
            "blN0YXR1cxIsCghyZXNvdXJjZRgCIAEoCzIaLnByb3RvY29scy5jb21tb24u",
            "UmVzb3VyY2UinQEKFEdldFJlc291cmNlc1Jlc3BvbnNlEi4KBmNvbW1vbhgB",
            "IAEoCzIeLnByb3RvY29scy5jb21tb24uQ29tbW9uU3RhdHVzEi0KCXJlc291",
            "cmNlcxgCIAMoCzIaLnByb3RvY29scy5jb21tb24uUmVzb3VyY2USEgoKcGFn",
            "ZXNDb3VudBgDIAEoBRISCgppdGVtc0NvdW50GAQgASgFIpYCCh9HZXRTY2Vu",
            "ZUJ5SWRCbHVlcHJpbnRWMlJlc3BvbnNlEi4KBmNvbW1vbhgBIAEoCzIeLnBy",
            "b3RvY29scy5jb21tb24uQ29tbW9uU3RhdHVzEjMKCWJsdWVwcmludBgCIAEo",
            "CzIgLnByb3RvY29scy5jb21tb24uU2NlbmVCbHVlcHJpbnQSLgoJc2NlbmVC",
            "YXNlGAMgASgLMhsucHJvdG9jb2xzLmNvbW1vbi5TY2VuZUJhc2USLwoKc2Nl",
            "bmVCYXNlcxgEIAMoCzIbLnByb3RvY29scy5jb21tb24uU2NlbmVCYXNlEi0K",
            "CXJlc291cmNlcxgFIAMoCzIaLnByb3RvY29scy5jb21tb24uUmVzb3VyY2VC",
            "J6oCJFNhdHVybi5CYWNrZW5kcy5Qcm90b2NvbHMuUHJvbWV0aGV1c2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Saturn.Backends.Protocols.Common.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetVersionRequiredResponse), global::Saturn.Backends.Protocols.Prometheus.GetVersionRequiredResponse.Parser, new[]{ "Common", "Version", "HaveAdmin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetMemberResponse), global::Saturn.Backends.Protocols.Prometheus.GetMemberResponse.Parser, new[]{ "Common", "MemberBases" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetMemberByIdResponse), global::Saturn.Backends.Protocols.Prometheus.GetMemberByIdResponse.Parser, new[]{ "Common", "Member" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutMemberResponse), global::Saturn.Backends.Protocols.Prometheus.PutMemberResponse.Parser, new[]{ "Common", "Member", "EnceladusAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteMemberResponse), global::Saturn.Backends.Protocols.Prometheus.DeleteMemberResponse.Parser, new[]{ "Common" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutMemberKindResponse), global::Saturn.Backends.Protocols.Prometheus.PutMemberKindResponse.Parser, new[]{ "Common", "MemberBase" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostMemberPermissionRequest), global::Saturn.Backends.Protocols.Prometheus.PostMemberPermissionRequest.Parser, new[]{ "Permission" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostMemberPermissionResponse), global::Saturn.Backends.Protocols.Prometheus.PostMemberPermissionResponse.Parser, new[]{ "Common", "Member" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutMemberPermissionRequest), global::Saturn.Backends.Protocols.Prometheus.PutMemberPermissionRequest.Parser, new[]{ "Permissions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutMemberPermissionResponse), global::Saturn.Backends.Protocols.Prometheus.PutMemberPermissionResponse.Parser, new[]{ "Common", "Member" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteMemberPermissionRequest), global::Saturn.Backends.Protocols.Prometheus.DeleteMemberPermissionRequest.Parser, new[]{ "MemberId", "MemberPermissionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteMemberPermissionResponse), global::Saturn.Backends.Protocols.Prometheus.DeleteMemberPermissionResponse.Parser, new[]{ "Common", "Member" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetAccountResponse), global::Saturn.Backends.Protocols.Prometheus.GetAccountResponse.Parser, new[]{ "Common", "Kind", "Permissions", "DepartmentIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostAccountRequest), global::Saturn.Backends.Protocols.Prometheus.PostAccountRequest.Parser, new[]{ "Email", "Password", "MemberKind" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostAccountResponse), global::Saturn.Backends.Protocols.Prometheus.PostAccountResponse.Parser, new[]{ "Common" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutAccountRequest), global::Saturn.Backends.Protocols.Prometheus.PutAccountRequest.Parser, new[]{ "Email", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutAccountResponse), global::Saturn.Backends.Protocols.Prometheus.PutAccountResponse.Parser, new[]{ "Common", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetDepartmentByIdResponse), global::Saturn.Backends.Protocols.Prometheus.GetDepartmentByIdResponse.Parser, new[]{ "Common", "Department" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutDepartmentRequest), global::Saturn.Backends.Protocols.Prometheus.PutDepartmentRequest.Parser, new[]{ "Department" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutDepartmentResponse), global::Saturn.Backends.Protocols.Prometheus.PutDepartmentResponse.Parser, new[]{ "Common", "Department" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetDepartmentNodeResponse), global::Saturn.Backends.Protocols.Prometheus.GetDepartmentNodeResponse.Parser, new[]{ "Common", "Nodes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostDepartmentNodeRequest), global::Saturn.Backends.Protocols.Prometheus.PostDepartmentNodeRequest.Parser, new[]{ "ParentDepartmentNodeId", "Order", "DepartmentName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostDepartmentNodeResponse), global::Saturn.Backends.Protocols.Prometheus.PostDepartmentNodeResponse.Parser, new[]{ "Common", "Node" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutDepartmentNodeRequest), global::Saturn.Backends.Protocols.Prometheus.PutDepartmentNodeRequest.Parser, new[]{ "ParentDepartmentNodeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutDepartmentNodeResponse), global::Saturn.Backends.Protocols.Prometheus.PutDepartmentNodeResponse.Parser, new[]{ "Common", "Node" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteDepartmentNodeResponse), global::Saturn.Backends.Protocols.Prometheus.DeleteDepartmentNodeResponse.Parser, new[]{ "Common" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetMemberRecordResponse), global::Saturn.Backends.Protocols.Prometheus.GetMemberRecordResponse.Parser, new[]{ "Common", "MemberRecords", "ItemsCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetMemberRecordByMemberIdResponse), global::Saturn.Backends.Protocols.Prometheus.GetMemberRecordByMemberIdResponse.Parser, new[]{ "Common", "MemberRecords", "ItemsCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetSceneResponse), global::Saturn.Backends.Protocols.Prometheus.GetSceneResponse.Parser, new[]{ "Common", "SceneBases", "ItemsCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetSceneByIdResponse), global::Saturn.Backends.Protocols.Prometheus.GetSceneByIdResponse.Parser, new[]{ "Common", "Scene" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetSceneByIdBlueprintResponse), global::Saturn.Backends.Protocols.Prometheus.GetSceneByIdBlueprintResponse.Parser, new[]{ "Common", "Scene", "Blueprint" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostSceneRequest), global::Saturn.Backends.Protocols.Prometheus.PostSceneRequest.Parser, new[]{ "Name", "SceneBlueprint", "PreviewResource", "IsTemporary" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostSceneResponse), global::Saturn.Backends.Protocols.Prometheus.PostSceneResponse.Parser, new[]{ "Common", "Scene", "OverwriteScene" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutSceneRequest), global::Saturn.Backends.Protocols.Prometheus.PutSceneRequest.Parser, new[]{ "SceneId", "Name", "SceneBlueprint", "PreviewResource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutSceneResponse), global::Saturn.Backends.Protocols.Prometheus.PutSceneResponse.Parser, new[]{ "Common", "Scene" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteSceneResponse), global::Saturn.Backends.Protocols.Prometheus.DeleteSceneResponse.Parser, new[]{ "Common" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetDepartmentMemberResponse), global::Saturn.Backends.Protocols.Prometheus.GetDepartmentMemberResponse.Parser, new[]{ "Common", "Department", "MemberBases" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetDepartmentConnectorLowersResponse), global::Saturn.Backends.Protocols.Prometheus.GetDepartmentConnectorLowersResponse.Parser, new[]{ "Common", "ConnectorDepartmentBases" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostDepartmentMemberRequest), global::Saturn.Backends.Protocols.Prometheus.PostDepartmentMemberRequest.Parser, new[]{ "DepartmentId", "MemberId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostDepartmentMemberResponse), global::Saturn.Backends.Protocols.Prometheus.PostDepartmentMemberResponse.Parser, new[]{ "Common", "Department", "MemberBases" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteDepartmentMemberRequest), global::Saturn.Backends.Protocols.Prometheus.DeleteDepartmentMemberRequest.Parser, new[]{ "DeparmentId", "MemberId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteDepartmentMemberResponse), global::Saturn.Backends.Protocols.Prometheus.DeleteDepartmentMemberResponse.Parser, new[]{ "Common", "Department", "MemberBases" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetDepartmentConnectorsResponse), global::Saturn.Backends.Protocols.Prometheus.GetDepartmentConnectorsResponse.Parser, new[]{ "Common", "Department", "ConnectorBases" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostDepartmentConnectorRequest), global::Saturn.Backends.Protocols.Prometheus.PostDepartmentConnectorRequest.Parser, new[]{ "DepartmentId", "ConnectorId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostDepartmentConnectorResponse), global::Saturn.Backends.Protocols.Prometheus.PostDepartmentConnectorResponse.Parser, new[]{ "Common", "Department", "ConnectorBases" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteDepartmentConnectorResponse), global::Saturn.Backends.Protocols.Prometheus.DeleteDepartmentConnectorResponse.Parser, new[]{ "Common", "Department", "ConnectorBases" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetConnectorResponse), global::Saturn.Backends.Protocols.Prometheus.GetConnectorResponse.Parser, new[]{ "Common", "Connector" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetConnectorsResponse), global::Saturn.Backends.Protocols.Prometheus.GetConnectorsResponse.Parser, new[]{ "Common", "ConnectorBases" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostConnectorByIdResponse), global::Saturn.Backends.Protocols.Prometheus.PostConnectorByIdResponse.Parser, new[]{ "Common", "Connector" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostConnectorRequest), global::Saturn.Backends.Protocols.Prometheus.PostConnectorRequest.Parser, new[]{ "Name", "DeviceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostConnectorResponse), global::Saturn.Backends.Protocols.Prometheus.PostConnectorResponse.Parser, new[]{ "Common", "Kind", "Connector" }, null, new[]{ typeof(global::Saturn.Backends.Protocols.Prometheus.PostConnectorResponse.Types.POST_KIND) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutConnectorNameRequest), global::Saturn.Backends.Protocols.Prometheus.PutConnectorNameRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutConnectorNameResponse), global::Saturn.Backends.Protocols.Prometheus.PutConnectorNameResponse.Parser, new[]{ "Common", "Connector" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutConnectorRequest), global::Saturn.Backends.Protocols.Prometheus.PutConnectorRequest.Parser, new[]{ "Kind" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutConnectorResponse), global::Saturn.Backends.Protocols.Prometheus.PutConnectorResponse.Parser, new[]{ "Common", "Connector" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteConnectorResponse), global::Saturn.Backends.Protocols.Prometheus.DeleteConnectorResponse.Parser, new[]{ "Common" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutConnectorSceneResponse), global::Saturn.Backends.Protocols.Prometheus.PutConnectorSceneResponse.Parser, new[]{ "Common", "Scene" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteConnectorSceneResponse), global::Saturn.Backends.Protocols.Prometheus.DeleteConnectorSceneResponse.Parser, new[]{ "Common" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutConnectorSceneEmergencyResponse), global::Saturn.Backends.Protocols.Prometheus.PutConnectorSceneEmergencyResponse.Parser, new[]{ "Common", "Scene" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteConnectorSceneEmergencyResponse), global::Saturn.Backends.Protocols.Prometheus.DeleteConnectorSceneEmergencyResponse.Parser, new[]{ "Common" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutConnectorEmergencyRequest), global::Saturn.Backends.Protocols.Prometheus.PutConnectorEmergencyRequest.Parser, new[]{ "ConnectorId", "IsEmergency" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutConnectorEmergencyResponse), global::Saturn.Backends.Protocols.Prometheus.PutConnectorEmergencyResponse.Parser, new[]{ "Common" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutConnectorEmergencySceneRequest), global::Saturn.Backends.Protocols.Prometheus.PutConnectorEmergencySceneRequest.Parser, new[]{ "SceneId", "IsEmergency" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutConnectorEmergencySceneResponse), global::Saturn.Backends.Protocols.Prometheus.PutConnectorEmergencySceneResponse.Parser, new[]{ "Common", "ConnectorBase" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetScheduleResponse), global::Saturn.Backends.Protocols.Prometheus.GetScheduleResponse.Parser, new[]{ "Common", "Schedules", "Paginator" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetScheduleByIdResponse), global::Saturn.Backends.Protocols.Prometheus.GetScheduleByIdResponse.Parser, new[]{ "Common", "Schedule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostScheduleRequest), global::Saturn.Backends.Protocols.Prometheus.PostScheduleRequest.Parser, new[]{ "Schedule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostScheduleResponse), global::Saturn.Backends.Protocols.Prometheus.PostScheduleResponse.Parser, new[]{ "Common", "Schedule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostScheduleSceneRequest), global::Saturn.Backends.Protocols.Prometheus.PostScheduleSceneRequest.Parser, new[]{ "Name", "SceneId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostScheduleSceneResponse), global::Saturn.Backends.Protocols.Prometheus.PostScheduleSceneResponse.Parser, new[]{ "Common", "ScheduleScene" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutScheduleRequest), global::Saturn.Backends.Protocols.Prometheus.PutScheduleRequest.Parser, new[]{ "Schedule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutScheduleResponse), global::Saturn.Backends.Protocols.Prometheus.PutScheduleResponse.Parser, new[]{ "Common", "Schedule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteScheduleResponse), global::Saturn.Backends.Protocols.Prometheus.DeleteScheduleResponse.Parser, new[]{ "Common" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetScheduleSceneResponse), global::Saturn.Backends.Protocols.Prometheus.GetScheduleSceneResponse.Parser, new[]{ "Common", "ScheduleScenes", "Paginator" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetScheduleSceneByIdResponse), global::Saturn.Backends.Protocols.Prometheus.GetScheduleSceneByIdResponse.Parser, new[]{ "Common", "ScheduleScene" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutScheduleSceneRequest), global::Saturn.Backends.Protocols.Prometheus.PutScheduleSceneRequest.Parser, new[]{ "Name", "ScheduleId", "SceneId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutScheduleSceneResponse), global::Saturn.Backends.Protocols.Prometheus.PutScheduleSceneResponse.Parser, new[]{ "Common", "ScheduleScene" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteScheduleSceneResponse), global::Saturn.Backends.Protocols.Prometheus.DeleteScheduleSceneResponse.Parser, new[]{ "Common" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostConnectorScheduleRequest), global::Saturn.Backends.Protocols.Prometheus.PostConnectorScheduleRequest.Parser, new[]{ "ScheduleSceneId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostConnectorScheduleResponse), global::Saturn.Backends.Protocols.Prometheus.PostConnectorScheduleResponse.Parser, new[]{ "Common", "ConnectorScheduleScene" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutConnectorScheduleRequest), global::Saturn.Backends.Protocols.Prometheus.PutConnectorScheduleRequest.Parser, new[]{ "SceneBase", "Schedule" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutConnectorScheduleResponse), global::Saturn.Backends.Protocols.Prometheus.PutConnectorScheduleResponse.Parser, new[]{ "Common", "ConnectorScheduleScene" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteConnectorScheduleResponse), global::Saturn.Backends.Protocols.Prometheus.DeleteConnectorScheduleResponse.Parser, new[]{ "Common" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetWeatherResponse), global::Saturn.Backends.Protocols.Prometheus.GetWeatherResponse.Parser, new[]{ "Common", "Weather", "DateTimeSeconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetDepartmentResourceFolderResponse), global::Saturn.Backends.Protocols.Prometheus.GetDepartmentResourceFolderResponse.Parser, new[]{ "Common", "Items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetDepartmentResourceFolderResponse.Types.Item), global::Saturn.Backends.Protocols.Prometheus.GetDepartmentResourceFolderResponse.Types.Item.Parser, new[]{ "DepartmentNodeBase", "DepartmentBase", "ResourceFolders" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostDepartmentResourceFolderRequest), global::Saturn.Backends.Protocols.Prometheus.PostDepartmentResourceFolderRequest.Parser, new[]{ "Name", "ParentDepartmentResourceFolderId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostDepartmentResourceFolderResponse), global::Saturn.Backends.Protocols.Prometheus.PostDepartmentResourceFolderResponse.Parser, new[]{ "Common", "DepartmentResourceFolder" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutDepartmentResourceFolderRequest), global::Saturn.Backends.Protocols.Prometheus.PutDepartmentResourceFolderRequest.Parser, new[]{ "ResourceIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutDepartmentResourceFolderResponse), global::Saturn.Backends.Protocols.Prometheus.PutDepartmentResourceFolderResponse.Parser, new[]{ "Common", "ResourceIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PatchDepartmentResourceFolderRequest), global::Saturn.Backends.Protocols.Prometheus.PatchDepartmentResourceFolderRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PatchDepartmentResourceFolderResponse), global::Saturn.Backends.Protocols.Prometheus.PatchDepartmentResourceFolderResponse.Parser, new[]{ "Common", "DepartmentResourceFolder" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteDepartmentResourceFolderResponse), global::Saturn.Backends.Protocols.Prometheus.DeleteDepartmentResourceFolderResponse.Parser, new[]{ "Common" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteDepartmentResourceFolderResourceResponse), global::Saturn.Backends.Protocols.Prometheus.DeleteDepartmentResourceFolderResourceResponse.Parser, new[]{ "Common" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetDepartmentSceneFolderResponse), global::Saturn.Backends.Protocols.Prometheus.GetDepartmentSceneFolderResponse.Parser, new[]{ "Common", "Items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetDepartmentSceneFolderResponse.Types.Item), global::Saturn.Backends.Protocols.Prometheus.GetDepartmentSceneFolderResponse.Types.Item.Parser, new[]{ "DepartmentNodeBase", "DepartmentBase", "SceneFolders" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostDepartmentSceneFolderRequest), global::Saturn.Backends.Protocols.Prometheus.PostDepartmentSceneFolderRequest.Parser, new[]{ "Name", "ParentDepartmentSceneFolderId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PostDepartmentSceneFolderResponse), global::Saturn.Backends.Protocols.Prometheus.PostDepartmentSceneFolderResponse.Parser, new[]{ "Common", "DepartmentSceneFolder" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutDepartmentSceneFolderRequest), global::Saturn.Backends.Protocols.Prometheus.PutDepartmentSceneFolderRequest.Parser, new[]{ "SceneIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutDepartmentSceneFolderResponse), global::Saturn.Backends.Protocols.Prometheus.PutDepartmentSceneFolderResponse.Parser, new[]{ "Common", "SceneIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PatchDepartmentSceneFolderRequest), global::Saturn.Backends.Protocols.Prometheus.PatchDepartmentSceneFolderRequest.Parser, new[]{ "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PatchDepartmentSceneFolderResponse), global::Saturn.Backends.Protocols.Prometheus.PatchDepartmentSceneFolderResponse.Parser, new[]{ "Common", "DepartmentSceneFolder" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.DeleteDepartmentSceneFolderResponse), global::Saturn.Backends.Protocols.Prometheus.DeleteDepartmentSceneFolderResponse.Parser, new[]{ "Common" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetSceneFolderScenesResponse), global::Saturn.Backends.Protocols.Prometheus.GetSceneFolderScenesResponse.Parser, new[]{ "Common", "SceneBases", "ItemsCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetResourceFolderResourcesResponse), global::Saturn.Backends.Protocols.Prometheus.GetResourceFolderResourcesResponse.Parser, new[]{ "Common", "Resources", "ItemCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetSubtitleRssResponse), global::Saturn.Backends.Protocols.Prometheus.GetSubtitleRssResponse.Parser, new[]{ "Common", "Feed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetSceneNavigationResponse), global::Saturn.Backends.Protocols.Prometheus.GetSceneNavigationResponse.Parser, new[]{ "Common", "Scene", "SourceSceneBases" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetValidateSceneResponse), global::Saturn.Backends.Protocols.Prometheus.GetValidateSceneResponse.Parser, new[]{ "Common", "SceneBases", "ItemsCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetValidateResourceResponse), global::Saturn.Backends.Protocols.Prometheus.GetValidateResourceResponse.Parser, new[]{ "Common", "Resources", "ItemsCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetValidateResourceByResourceIdResponse), global::Saturn.Backends.Protocols.Prometheus.GetValidateResourceByResourceIdResponse.Parser, new[]{ "Common", "Resource", "SceneBases", "ItemCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.PutResourceResponse), global::Saturn.Backends.Protocols.Prometheus.PutResourceResponse.Parser, new[]{ "Common", "Resource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetResourceResponse), global::Saturn.Backends.Protocols.Prometheus.GetResourceResponse.Parser, new[]{ "Common", "Resource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetResourcesResponse), global::Saturn.Backends.Protocols.Prometheus.GetResourcesResponse.Parser, new[]{ "Common", "Resources", "PagesCount", "ItemsCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Saturn.Backends.Protocols.Prometheus.GetSceneByIdBlueprintV2Response), global::Saturn.Backends.Protocols.Prometheus.GetSceneByIdBlueprintV2Response.Parser, new[]{ "Common", "Blueprint", "SceneBase", "SceneBases", "Resources" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetVersionRequiredResponse : pb::IMessage<GetVersionRequiredResponse> {
    private static readonly pb::MessageParser<GetVersionRequiredResponse> _parser = new pb::MessageParser<GetVersionRequiredResponse>(() => new GetVersionRequiredResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetVersionRequiredResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVersionRequiredResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVersionRequiredResponse(GetVersionRequiredResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      version_ = other.version_ != null ? other.version_.Clone() : null;
      haveAdmin_ = other.haveAdmin_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetVersionRequiredResponse Clone() {
      return new GetVersionRequiredResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.MoonVersion version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.MoonVersion Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "haveAdmin" field.</summary>
    public const int HaveAdminFieldNumber = 3;
    private bool haveAdmin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HaveAdmin {
      get { return haveAdmin_; }
      set {
        haveAdmin_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetVersionRequiredResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetVersionRequiredResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Version, other.Version)) return false;
      if (HaveAdmin != other.HaveAdmin) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (version_ != null) hash ^= Version.GetHashCode();
      if (HaveAdmin != false) hash ^= HaveAdmin.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (version_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Version);
      }
      if (HaveAdmin != false) {
        output.WriteRawTag(24);
        output.WriteBool(HaveAdmin);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (version_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Version);
      }
      if (HaveAdmin != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetVersionRequiredResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.version_ != null) {
        if (version_ == null) {
          Version = new global::Saturn.Backends.Protocols.Common.MoonVersion();
        }
        Version.MergeFrom(other.Version);
      }
      if (other.HaveAdmin != false) {
        HaveAdmin = other.HaveAdmin;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (version_ == null) {
              Version = new global::Saturn.Backends.Protocols.Common.MoonVersion();
            }
            input.ReadMessage(Version);
            break;
          }
          case 24: {
            HaveAdmin = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// REQUEST GET member/
  /// MESSAGE 
  /// RESPONSE GetMemberRequest
  /// </summary>
  public sealed partial class GetMemberResponse : pb::IMessage<GetMemberResponse> {
    private static readonly pb::MessageParser<GetMemberResponse> _parser = new pb::MessageParser<GetMemberResponse>(() => new GetMemberResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMemberResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberResponse(GetMemberResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      memberBases_ = other.memberBases_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberResponse Clone() {
      return new GetMemberResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "memberBases" field.</summary>
    public const int MemberBasesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.MemberBase> _repeated_memberBases_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Common.MemberBase.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberBase> memberBases_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberBase> MemberBases {
      get { return memberBases_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMemberResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMemberResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!memberBases_.Equals(other.memberBases_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= memberBases_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      memberBases_.WriteTo(output, _repeated_memberBases_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += memberBases_.CalculateSize(_repeated_memberBases_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMemberResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      memberBases_.Add(other.memberBases_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            memberBases_.AddEntriesFrom(input, _repeated_memberBases_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMemberByIdResponse : pb::IMessage<GetMemberByIdResponse> {
    private static readonly pb::MessageParser<GetMemberByIdResponse> _parser = new pb::MessageParser<GetMemberByIdResponse>(() => new GetMemberByIdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMemberByIdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberByIdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberByIdResponse(GetMemberByIdResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      member_ = other.member_ != null ? other.member_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberByIdResponse Clone() {
      return new GetMemberByIdResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "member" field.</summary>
    public const int MemberFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Member member_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Member Member {
      get { return member_; }
      set {
        member_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMemberByIdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMemberByIdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Member, other.Member)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (member_ != null) hash ^= Member.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (member_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Member);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (member_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Member);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMemberByIdResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.member_ != null) {
        if (member_ == null) {
          Member = new global::Saturn.Backends.Protocols.Common.Member();
        }
        Member.MergeFrom(other.Member);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (member_ == null) {
              Member = new global::Saturn.Backends.Protocols.Common.Member();
            }
            input.ReadMessage(Member);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutMemberResponse : pb::IMessage<PutMemberResponse> {
    private static readonly pb::MessageParser<PutMemberResponse> _parser = new pb::MessageParser<PutMemberResponse>(() => new PutMemberResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutMemberResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMemberResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMemberResponse(PutMemberResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      member_ = other.member_ != null ? other.member_.Clone() : null;
      enceladusAddress_ = other.enceladusAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMemberResponse Clone() {
      return new PutMemberResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "member" field.</summary>
    public const int MemberFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Member member_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Member Member {
      get { return member_; }
      set {
        member_ = value;
      }
    }

    /// <summary>Field number for the "EnceladusAddress" field.</summary>
    public const int EnceladusAddressFieldNumber = 3;
    private string enceladusAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EnceladusAddress {
      get { return enceladusAddress_; }
      set {
        enceladusAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutMemberResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutMemberResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Member, other.Member)) return false;
      if (EnceladusAddress != other.EnceladusAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (member_ != null) hash ^= Member.GetHashCode();
      if (EnceladusAddress.Length != 0) hash ^= EnceladusAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (member_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Member);
      }
      if (EnceladusAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EnceladusAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (member_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Member);
      }
      if (EnceladusAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnceladusAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutMemberResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.member_ != null) {
        if (member_ == null) {
          Member = new global::Saturn.Backends.Protocols.Common.Member();
        }
        Member.MergeFrom(other.Member);
      }
      if (other.EnceladusAddress.Length != 0) {
        EnceladusAddress = other.EnceladusAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (member_ == null) {
              Member = new global::Saturn.Backends.Protocols.Common.Member();
            }
            input.ReadMessage(Member);
            break;
          }
          case 26: {
            EnceladusAddress = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteMemberResponse : pb::IMessage<DeleteMemberResponse> {
    private static readonly pb::MessageParser<DeleteMemberResponse> _parser = new pb::MessageParser<DeleteMemberResponse>(() => new DeleteMemberResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteMemberResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMemberResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMemberResponse(DeleteMemberResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMemberResponse Clone() {
      return new DeleteMemberResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteMemberResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteMemberResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteMemberResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///////////////////////////////////////////////////
  ///
  /// REQUEST  : POST member/{MEMBER_Id}/kind/{MEMBER_KIND}
  /// MESSAGE  : PutMemberKindRequest
  /// RESPONSE : PutMemberKindResponse
  /// </summary>
  public sealed partial class PutMemberKindResponse : pb::IMessage<PutMemberKindResponse> {
    private static readonly pb::MessageParser<PutMemberKindResponse> _parser = new pb::MessageParser<PutMemberKindResponse>(() => new PutMemberKindResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutMemberKindResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMemberKindResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMemberKindResponse(PutMemberKindResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      memberBase_ = other.memberBase_ != null ? other.memberBase_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMemberKindResponse Clone() {
      return new PutMemberKindResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "memberBase" field.</summary>
    public const int MemberBaseFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.MemberBase memberBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.MemberBase MemberBase {
      get { return memberBase_; }
      set {
        memberBase_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutMemberKindResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutMemberKindResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(MemberBase, other.MemberBase)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (memberBase_ != null) hash ^= MemberBase.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (memberBase_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MemberBase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (memberBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MemberBase);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutMemberKindResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.memberBase_ != null) {
        if (memberBase_ == null) {
          MemberBase = new global::Saturn.Backends.Protocols.Common.MemberBase();
        }
        MemberBase.MergeFrom(other.MemberBase);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (memberBase_ == null) {
              MemberBase = new global::Saturn.Backends.Protocols.Common.MemberBase();
            }
            input.ReadMessage(MemberBase);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///////////////////////////////////////////////////
  /// obsolete
  /// POST         member/permission
  /// REQUEST  :   PostMemberPermissionRequest
  /// MESSAGE  : 
  /// RESPONSE :   PostMemberPermissionResponse
  /// </summary>
  public sealed partial class PostMemberPermissionRequest : pb::IMessage<PostMemberPermissionRequest> {
    private static readonly pb::MessageParser<PostMemberPermissionRequest> _parser = new pb::MessageParser<PostMemberPermissionRequest>(() => new PostMemberPermissionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostMemberPermissionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostMemberPermissionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostMemberPermissionRequest(PostMemberPermissionRequest other) : this() {
      permission_ = other.permission_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostMemberPermissionRequest Clone() {
      return new PostMemberPermissionRequest(this);
    }

    /// <summary>Field number for the "permission" field.</summary>
    public const int PermissionFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND permission_ = global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND.Default;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND Permission {
      get { return permission_; }
      set {
        permission_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostMemberPermissionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostMemberPermissionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Permission != other.Permission) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Permission != global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND.Default) hash ^= Permission.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Permission != global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND.Default) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Permission);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Permission != global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Permission);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostMemberPermissionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Permission != global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND.Default) {
        Permission = other.Permission;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Permission = (global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostMemberPermissionResponse : pb::IMessage<PostMemberPermissionResponse> {
    private static readonly pb::MessageParser<PostMemberPermissionResponse> _parser = new pb::MessageParser<PostMemberPermissionResponse>(() => new PostMemberPermissionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostMemberPermissionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostMemberPermissionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostMemberPermissionResponse(PostMemberPermissionResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      member_ = other.member_ != null ? other.member_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostMemberPermissionResponse Clone() {
      return new PostMemberPermissionResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "member" field.</summary>
    public const int MemberFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Member member_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Member Member {
      get { return member_; }
      set {
        member_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostMemberPermissionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostMemberPermissionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Member, other.Member)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (member_ != null) hash ^= Member.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (member_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Member);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (member_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Member);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostMemberPermissionResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.member_ != null) {
        if (member_ == null) {
          Member = new global::Saturn.Backends.Protocols.Common.Member();
        }
        Member.MergeFrom(other.Member);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (member_ == null) {
              Member = new global::Saturn.Backends.Protocols.Common.Member();
            }
            input.ReadMessage(Member);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///////////////////////////////////////////////////
  /// POST         member/{DEST_MEMBER_ID}/permission
  /// REQUEST  :   PutMemberPermissionRequest
  /// MESSAGE  : 
  /// RESPONSE :   PutMemberPermissionResponse
  /// </summary>
  public sealed partial class PutMemberPermissionRequest : pb::IMessage<PutMemberPermissionRequest> {
    private static readonly pb::MessageParser<PutMemberPermissionRequest> _parser = new pb::MessageParser<PutMemberPermissionRequest>(() => new PutMemberPermissionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutMemberPermissionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMemberPermissionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMemberPermissionRequest(PutMemberPermissionRequest other) : this() {
      permissions_ = other.permissions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMemberPermissionRequest Clone() {
      return new PutMemberPermissionRequest(this);
    }

    /// <summary>Field number for the "permissions" field.</summary>
    public const int PermissionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND> _repeated_permissions_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND) x);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND> permissions_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND> Permissions {
      get { return permissions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutMemberPermissionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutMemberPermissionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!permissions_.Equals(other.permissions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= permissions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      permissions_.WriteTo(output, _repeated_permissions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutMemberPermissionRequest other) {
      if (other == null) {
        return;
      }
      permissions_.Add(other.permissions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutMemberPermissionResponse : pb::IMessage<PutMemberPermissionResponse> {
    private static readonly pb::MessageParser<PutMemberPermissionResponse> _parser = new pb::MessageParser<PutMemberPermissionResponse>(() => new PutMemberPermissionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutMemberPermissionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMemberPermissionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMemberPermissionResponse(PutMemberPermissionResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      member_ = other.member_ != null ? other.member_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutMemberPermissionResponse Clone() {
      return new PutMemberPermissionResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "member" field.</summary>
    public const int MemberFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Member member_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Member Member {
      get { return member_; }
      set {
        member_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutMemberPermissionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutMemberPermissionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Member, other.Member)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (member_ != null) hash ^= Member.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (member_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Member);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (member_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Member);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutMemberPermissionResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.member_ != null) {
        if (member_ == null) {
          Member = new global::Saturn.Backends.Protocols.Common.Member();
        }
        Member.MergeFrom(other.Member);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (member_ == null) {
              Member = new global::Saturn.Backends.Protocols.Common.Member();
            }
            input.ReadMessage(Member);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// obsolete
  /// DELETE member/permission
  /// REQUEST : DeleteMemberPermissionRequest
  /// MESSAGE 
  /// RESPONSE : DeleteMemberPermissionResponse
  /// </summary>
  public sealed partial class DeleteMemberPermissionRequest : pb::IMessage<DeleteMemberPermissionRequest> {
    private static readonly pb::MessageParser<DeleteMemberPermissionRequest> _parser = new pb::MessageParser<DeleteMemberPermissionRequest>(() => new DeleteMemberPermissionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteMemberPermissionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMemberPermissionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMemberPermissionRequest(DeleteMemberPermissionRequest other) : this() {
      memberId_ = other.memberId_;
      memberPermissionId_ = other.memberPermissionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMemberPermissionRequest Clone() {
      return new DeleteMemberPermissionRequest(this);
    }

    /// <summary>Field number for the "memberId" field.</summary>
    public const int MemberIdFieldNumber = 1;
    private long memberId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MemberId {
      get { return memberId_; }
      set {
        memberId_ = value;
      }
    }

    /// <summary>Field number for the "memberPermissionId" field.</summary>
    public const int MemberPermissionIdFieldNumber = 2;
    private long memberPermissionId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MemberPermissionId {
      get { return memberPermissionId_; }
      set {
        memberPermissionId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteMemberPermissionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteMemberPermissionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemberId != other.MemberId) return false;
      if (MemberPermissionId != other.MemberPermissionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MemberId != 0L) hash ^= MemberId.GetHashCode();
      if (MemberPermissionId != 0L) hash ^= MemberPermissionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MemberId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MemberId);
      }
      if (MemberPermissionId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MemberPermissionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MemberId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MemberId);
      }
      if (MemberPermissionId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MemberPermissionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteMemberPermissionRequest other) {
      if (other == null) {
        return;
      }
      if (other.MemberId != 0L) {
        MemberId = other.MemberId;
      }
      if (other.MemberPermissionId != 0L) {
        MemberPermissionId = other.MemberPermissionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MemberId = input.ReadInt64();
            break;
          }
          case 16: {
            MemberPermissionId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteMemberPermissionResponse : pb::IMessage<DeleteMemberPermissionResponse> {
    private static readonly pb::MessageParser<DeleteMemberPermissionResponse> _parser = new pb::MessageParser<DeleteMemberPermissionResponse>(() => new DeleteMemberPermissionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteMemberPermissionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMemberPermissionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMemberPermissionResponse(DeleteMemberPermissionResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      member_ = other.member_ != null ? other.member_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteMemberPermissionResponse Clone() {
      return new DeleteMemberPermissionResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "member" field.</summary>
    public const int MemberFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Member member_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Member Member {
      get { return member_; }
      set {
        member_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteMemberPermissionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteMemberPermissionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Member, other.Member)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (member_ != null) hash ^= Member.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (member_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Member);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (member_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Member);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteMemberPermissionResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.member_ != null) {
        if (member_ == null) {
          Member = new global::Saturn.Backends.Protocols.Common.Member();
        }
        Member.MergeFrom(other.Member);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (member_ == null) {
              Member = new global::Saturn.Backends.Protocols.Common.Member();
            }
            input.ReadMessage(Member);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// REQUEST GET : /account
  /// </summary>
  public sealed partial class GetAccountResponse : pb::IMessage<GetAccountResponse> {
    private static readonly pb::MessageParser<GetAccountResponse> _parser = new pb::MessageParser<GetAccountResponse>(() => new GetAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountResponse(GetAccountResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      kind_ = other.kind_;
      permissions_ = other.permissions_.Clone();
      departmentIds_ = other.departmentIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccountResponse Clone() {
      return new GetAccountResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.MEMBER_KIND kind_ = global::Saturn.Backends.Protocols.Common.MEMBER_KIND.Default;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.MEMBER_KIND Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "permissions" field.</summary>
    public const int PermissionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND> _repeated_permissions_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND) x);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND> permissions_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MEMBER_PERMISSION_KIND> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "departmentIds" field.</summary>
    public const int DepartmentIdsFieldNumber = 4;
    private static readonly pb::FieldCodec<long> _repeated_departmentIds_codec
        = pb::FieldCodec.ForInt64(34);
    private readonly pbc::RepeatedField<long> departmentIds_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> DepartmentIds {
      get { return departmentIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (Kind != other.Kind) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if(!departmentIds_.Equals(other.departmentIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (Kind != global::Saturn.Backends.Protocols.Common.MEMBER_KIND.Default) hash ^= Kind.GetHashCode();
      hash ^= permissions_.GetHashCode();
      hash ^= departmentIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (Kind != global::Saturn.Backends.Protocols.Common.MEMBER_KIND.Default) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Kind);
      }
      permissions_.WriteTo(output, _repeated_permissions_codec);
      departmentIds_.WriteTo(output, _repeated_departmentIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (Kind != global::Saturn.Backends.Protocols.Common.MEMBER_KIND.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
      }
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      size += departmentIds_.CalculateSize(_repeated_departmentIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.Kind != global::Saturn.Backends.Protocols.Common.MEMBER_KIND.Default) {
        Kind = other.Kind;
      }
      permissions_.Add(other.permissions_);
      departmentIds_.Add(other.departmentIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 16: {
            Kind = (global::Saturn.Backends.Protocols.Common.MEMBER_KIND) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
          case 34:
          case 32: {
            departmentIds_.AddEntriesFrom(input, _repeated_departmentIds_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// &lt;AllowAnonymous>
  /// REQUEST : POST /account
  /// 
  /// RESPONSE : MESSAGE PostAccountResponse
  /// </summary>
  public sealed partial class PostAccountRequest : pb::IMessage<PostAccountRequest> {
    private static readonly pb::MessageParser<PostAccountRequest> _parser = new pb::MessageParser<PostAccountRequest>(() => new PostAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAccountRequest(PostAccountRequest other) : this() {
      email_ = other.email_;
      password_ = other.password_;
      memberKind_ = other.memberKind_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAccountRequest Clone() {
      return new PostAccountRequest(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memberKind" field.</summary>
    public const int MemberKindFieldNumber = 3;
    private global::Saturn.Backends.Protocols.Common.MEMBER_KIND memberKind_ = global::Saturn.Backends.Protocols.Common.MEMBER_KIND.Default;
    /// <summary>
    /// for
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.MEMBER_KIND MemberKind {
      get { return memberKind_; }
      set {
        memberKind_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (Password != other.Password) return false;
      if (MemberKind != other.MemberKind) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (MemberKind != global::Saturn.Backends.Protocols.Common.MEMBER_KIND.Default) hash ^= MemberKind.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (MemberKind != global::Saturn.Backends.Protocols.Common.MEMBER_KIND.Default) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MemberKind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (MemberKind != global::Saturn.Backends.Protocols.Common.MEMBER_KIND.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MemberKind);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.MemberKind != global::Saturn.Backends.Protocols.Common.MEMBER_KIND.Default) {
        MemberKind = other.MemberKind;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 24: {
            MemberKind = (global::Saturn.Backends.Protocols.Common.MEMBER_KIND) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostAccountResponse : pb::IMessage<PostAccountResponse> {
    private static readonly pb::MessageParser<PostAccountResponse> _parser = new pb::MessageParser<PostAccountResponse>(() => new PostAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAccountResponse(PostAccountResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAccountResponse Clone() {
      return new PostAccountResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutAccountRequest : pb::IMessage<PutAccountRequest> {
    private static readonly pb::MessageParser<PutAccountRequest> _parser = new pb::MessageParser<PutAccountRequest>(() => new PutAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutAccountRequest(PutAccountRequest other) : this() {
      email_ = other.email_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutAccountRequest Clone() {
      return new PutAccountRequest(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutAccountResponse : pb::IMessage<PutAccountResponse> {
    private static readonly pb::MessageParser<PutAccountResponse> _parser = new pb::MessageParser<PutAccountResponse>(() => new PutAccountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutAccountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutAccountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutAccountResponse(PutAccountResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutAccountResponse Clone() {
      return new PutAccountResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutAccountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutAccountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutAccountResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDepartmentByIdResponse : pb::IMessage<GetDepartmentByIdResponse> {
    private static readonly pb::MessageParser<GetDepartmentByIdResponse> _parser = new pb::MessageParser<GetDepartmentByIdResponse>(() => new GetDepartmentByIdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDepartmentByIdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentByIdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentByIdResponse(GetDepartmentByIdResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      department_ = other.department_ != null ? other.department_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentByIdResponse Clone() {
      return new GetDepartmentByIdResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "department" field.</summary>
    public const int DepartmentFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Department department_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Department Department {
      get { return department_; }
      set {
        department_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDepartmentByIdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDepartmentByIdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Department, other.Department)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (department_ != null) hash ^= Department.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (department_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Department);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (department_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Department);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDepartmentByIdResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.department_ != null) {
        if (department_ == null) {
          Department = new global::Saturn.Backends.Protocols.Common.Department();
        }
        Department.MergeFrom(other.Department);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (department_ == null) {
              Department = new global::Saturn.Backends.Protocols.Common.Department();
            }
            input.ReadMessage(Department);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// PUT department/
  /// REQUEST : PutDepartmentRequest
  /// MESSAGE
  /// RESPONSE : PutDepartmentResponse
  /// </summary>
  public sealed partial class PutDepartmentRequest : pb::IMessage<PutDepartmentRequest> {
    private static readonly pb::MessageParser<PutDepartmentRequest> _parser = new pb::MessageParser<PutDepartmentRequest>(() => new PutDepartmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutDepartmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentRequest(PutDepartmentRequest other) : this() {
      department_ = other.department_ != null ? other.department_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentRequest Clone() {
      return new PutDepartmentRequest(this);
    }

    /// <summary>Field number for the "department" field.</summary>
    public const int DepartmentFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.Department department_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Department Department {
      get { return department_; }
      set {
        department_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutDepartmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutDepartmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Department, other.Department)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (department_ != null) hash ^= Department.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (department_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Department);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (department_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Department);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutDepartmentRequest other) {
      if (other == null) {
        return;
      }
      if (other.department_ != null) {
        if (department_ == null) {
          Department = new global::Saturn.Backends.Protocols.Common.Department();
        }
        Department.MergeFrom(other.Department);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (department_ == null) {
              Department = new global::Saturn.Backends.Protocols.Common.Department();
            }
            input.ReadMessage(Department);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutDepartmentResponse : pb::IMessage<PutDepartmentResponse> {
    private static readonly pb::MessageParser<PutDepartmentResponse> _parser = new pb::MessageParser<PutDepartmentResponse>(() => new PutDepartmentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutDepartmentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentResponse(PutDepartmentResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      department_ = other.department_ != null ? other.department_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentResponse Clone() {
      return new PutDepartmentResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "department" field.</summary>
    public const int DepartmentFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Department department_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Department Department {
      get { return department_; }
      set {
        department_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutDepartmentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutDepartmentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Department, other.Department)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (department_ != null) hash ^= Department.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (department_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Department);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (department_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Department);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutDepartmentResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.department_ != null) {
        if (department_ == null) {
          Department = new global::Saturn.Backends.Protocols.Common.Department();
        }
        Department.MergeFrom(other.Department);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (department_ == null) {
              Department = new global::Saturn.Backends.Protocols.Common.Department();
            }
            input.ReadMessage(Department);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GET department/node
  /// REQUEST : department/node
  /// MESSAGE
  /// RESPONSE : GetDepartmentNodeResponse
  /// </summary>
  public sealed partial class GetDepartmentNodeResponse : pb::IMessage<GetDepartmentNodeResponse> {
    private static readonly pb::MessageParser<GetDepartmentNodeResponse> _parser = new pb::MessageParser<GetDepartmentNodeResponse>(() => new GetDepartmentNodeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDepartmentNodeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentNodeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentNodeResponse(GetDepartmentNodeResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      nodes_ = other.nodes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentNodeResponse Clone() {
      return new GetDepartmentNodeResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.DepartmentNode> _repeated_nodes_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Common.DepartmentNode.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.DepartmentNode> nodes_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.DepartmentNode>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.DepartmentNode> Nodes {
      get { return nodes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDepartmentNodeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDepartmentNodeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!nodes_.Equals(other.nodes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= nodes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      nodes_.WriteTo(output, _repeated_nodes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDepartmentNodeResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      nodes_.Add(other.nodes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// POST     : department/node
  /// REQUEST  : PostDepartmentNodeRequest
  /// MESSAGE
  /// RESPONSE : PostDepartmentNodeResponse
  /// </summary>
  public sealed partial class PostDepartmentNodeRequest : pb::IMessage<PostDepartmentNodeRequest> {
    private static readonly pb::MessageParser<PostDepartmentNodeRequest> _parser = new pb::MessageParser<PostDepartmentNodeRequest>(() => new PostDepartmentNodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostDepartmentNodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentNodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentNodeRequest(PostDepartmentNodeRequest other) : this() {
      parentDepartmentNodeId_ = other.parentDepartmentNodeId_;
      order_ = other.order_;
      departmentName_ = other.departmentName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentNodeRequest Clone() {
      return new PostDepartmentNodeRequest(this);
    }

    /// <summary>Field number for the "parentDepartmentNodeId" field.</summary>
    public const int ParentDepartmentNodeIdFieldNumber = 1;
    private long parentDepartmentNodeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ParentDepartmentNodeId {
      get { return parentDepartmentNodeId_; }
      set {
        parentDepartmentNodeId_ = value;
      }
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 2;
    private long order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "departmentName" field.</summary>
    public const int DepartmentNameFieldNumber = 3;
    private string departmentName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DepartmentName {
      get { return departmentName_; }
      set {
        departmentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostDepartmentNodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostDepartmentNodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParentDepartmentNodeId != other.ParentDepartmentNodeId) return false;
      if (Order != other.Order) return false;
      if (DepartmentName != other.DepartmentName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParentDepartmentNodeId != 0L) hash ^= ParentDepartmentNodeId.GetHashCode();
      if (Order != 0L) hash ^= Order.GetHashCode();
      if (DepartmentName.Length != 0) hash ^= DepartmentName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParentDepartmentNodeId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ParentDepartmentNodeId);
      }
      if (Order != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Order);
      }
      if (DepartmentName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DepartmentName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParentDepartmentNodeId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ParentDepartmentNodeId);
      }
      if (Order != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Order);
      }
      if (DepartmentName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DepartmentName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostDepartmentNodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.ParentDepartmentNodeId != 0L) {
        ParentDepartmentNodeId = other.ParentDepartmentNodeId;
      }
      if (other.Order != 0L) {
        Order = other.Order;
      }
      if (other.DepartmentName.Length != 0) {
        DepartmentName = other.DepartmentName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ParentDepartmentNodeId = input.ReadInt64();
            break;
          }
          case 16: {
            Order = input.ReadInt64();
            break;
          }
          case 26: {
            DepartmentName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostDepartmentNodeResponse : pb::IMessage<PostDepartmentNodeResponse> {
    private static readonly pb::MessageParser<PostDepartmentNodeResponse> _parser = new pb::MessageParser<PostDepartmentNodeResponse>(() => new PostDepartmentNodeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostDepartmentNodeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentNodeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentNodeResponse(PostDepartmentNodeResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      node_ = other.node_ != null ? other.node_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentNodeResponse Clone() {
      return new PostDepartmentNodeResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "node" field.</summary>
    public const int NodeFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.DepartmentNode node_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.DepartmentNode Node {
      get { return node_; }
      set {
        node_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostDepartmentNodeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostDepartmentNodeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Node, other.Node)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (node_ != null) hash ^= Node.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (node_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Node);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (node_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Node);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostDepartmentNodeResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.node_ != null) {
        if (node_ == null) {
          Node = new global::Saturn.Backends.Protocols.Common.DepartmentNode();
        }
        Node.MergeFrom(other.Node);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (node_ == null) {
              Node = new global::Saturn.Backends.Protocols.Common.DepartmentNode();
            }
            input.ReadMessage(Node);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// PUT department/node/{DEPARTMENT_NODE_ID}
  /// REQUEST : PutDepartmentNodeRequest
  /// MESSAGE
  /// RESPONSE : PutDepartmentNodeResponse
  /// </summary>
  public sealed partial class PutDepartmentNodeRequest : pb::IMessage<PutDepartmentNodeRequest> {
    private static readonly pb::MessageParser<PutDepartmentNodeRequest> _parser = new pb::MessageParser<PutDepartmentNodeRequest>(() => new PutDepartmentNodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutDepartmentNodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentNodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentNodeRequest(PutDepartmentNodeRequest other) : this() {
      parentDepartmentNodeId_ = other.parentDepartmentNodeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentNodeRequest Clone() {
      return new PutDepartmentNodeRequest(this);
    }

    /// <summary>Field number for the "parentDepartmentNodeId" field.</summary>
    public const int ParentDepartmentNodeIdFieldNumber = 1;
    private long parentDepartmentNodeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ParentDepartmentNodeId {
      get { return parentDepartmentNodeId_; }
      set {
        parentDepartmentNodeId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutDepartmentNodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutDepartmentNodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ParentDepartmentNodeId != other.ParentDepartmentNodeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ParentDepartmentNodeId != 0L) hash ^= ParentDepartmentNodeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ParentDepartmentNodeId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ParentDepartmentNodeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ParentDepartmentNodeId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ParentDepartmentNodeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutDepartmentNodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.ParentDepartmentNodeId != 0L) {
        ParentDepartmentNodeId = other.ParentDepartmentNodeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ParentDepartmentNodeId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutDepartmentNodeResponse : pb::IMessage<PutDepartmentNodeResponse> {
    private static readonly pb::MessageParser<PutDepartmentNodeResponse> _parser = new pb::MessageParser<PutDepartmentNodeResponse>(() => new PutDepartmentNodeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutDepartmentNodeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentNodeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentNodeResponse(PutDepartmentNodeResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      node_ = other.node_ != null ? other.node_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentNodeResponse Clone() {
      return new PutDepartmentNodeResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "node" field.</summary>
    public const int NodeFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.DepartmentNode node_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.DepartmentNode Node {
      get { return node_; }
      set {
        node_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutDepartmentNodeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutDepartmentNodeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Node, other.Node)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (node_ != null) hash ^= Node.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (node_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Node);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (node_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Node);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutDepartmentNodeResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.node_ != null) {
        if (node_ == null) {
          Node = new global::Saturn.Backends.Protocols.Common.DepartmentNode();
        }
        Node.MergeFrom(other.Node);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (node_ == null) {
              Node = new global::Saturn.Backends.Protocols.Common.DepartmentNode();
            }
            input.ReadMessage(Node);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DELETE department/node/{DEPARTMENT_NODE_ID}
  /// REQUEST : 
  /// MESSAGE
  /// RESPONSE : DeleteDepartmentNodeResponse
  /// </summary>
  public sealed partial class DeleteDepartmentNodeResponse : pb::IMessage<DeleteDepartmentNodeResponse> {
    private static readonly pb::MessageParser<DeleteDepartmentNodeResponse> _parser = new pb::MessageParser<DeleteDepartmentNodeResponse>(() => new DeleteDepartmentNodeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDepartmentNodeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentNodeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentNodeResponse(DeleteDepartmentNodeResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentNodeResponse Clone() {
      return new DeleteDepartmentNodeResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDepartmentNodeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDepartmentNodeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDepartmentNodeResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetMemberRecordResponse : pb::IMessage<GetMemberRecordResponse> {
    private static readonly pb::MessageParser<GetMemberRecordResponse> _parser = new pb::MessageParser<GetMemberRecordResponse>(() => new GetMemberRecordResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMemberRecordResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberRecordResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberRecordResponse(GetMemberRecordResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      memberRecords_ = other.memberRecords_.Clone();
      itemsCount_ = other.itemsCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberRecordResponse Clone() {
      return new GetMemberRecordResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "memberRecords" field.</summary>
    public const int MemberRecordsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.MemberRecord> _repeated_memberRecords_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Common.MemberRecord.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberRecord> memberRecords_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberRecord> MemberRecords {
      get { return memberRecords_; }
    }

    /// <summary>Field number for the "itemsCount" field.</summary>
    public const int ItemsCountFieldNumber = 3;
    private int itemsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemsCount {
      get { return itemsCount_; }
      set {
        itemsCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMemberRecordResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMemberRecordResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!memberRecords_.Equals(other.memberRecords_)) return false;
      if (ItemsCount != other.ItemsCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= memberRecords_.GetHashCode();
      if (ItemsCount != 0) hash ^= ItemsCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      memberRecords_.WriteTo(output, _repeated_memberRecords_codec);
      if (ItemsCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemsCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += memberRecords_.CalculateSize(_repeated_memberRecords_codec);
      if (ItemsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemsCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMemberRecordResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      memberRecords_.Add(other.memberRecords_);
      if (other.ItemsCount != 0) {
        ItemsCount = other.ItemsCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            memberRecords_.AddEntriesFrom(input, _repeated_memberRecords_codec);
            break;
          }
          case 24: {
            ItemsCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// REQUEST GET : member/{MEMBER_ID}/record?from={FROM_INDEX}&amp;size={SIZE_INDEX}
  /// </summary>
  public sealed partial class GetMemberRecordByMemberIdResponse : pb::IMessage<GetMemberRecordByMemberIdResponse> {
    private static readonly pb::MessageParser<GetMemberRecordByMemberIdResponse> _parser = new pb::MessageParser<GetMemberRecordByMemberIdResponse>(() => new GetMemberRecordByMemberIdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMemberRecordByMemberIdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberRecordByMemberIdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberRecordByMemberIdResponse(GetMemberRecordByMemberIdResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      memberRecords_ = other.memberRecords_.Clone();
      itemsCount_ = other.itemsCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMemberRecordByMemberIdResponse Clone() {
      return new GetMemberRecordByMemberIdResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "memberRecords" field.</summary>
    public const int MemberRecordsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.MemberRecord> _repeated_memberRecords_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Common.MemberRecord.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberRecord> memberRecords_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberRecord> MemberRecords {
      get { return memberRecords_; }
    }

    /// <summary>Field number for the "itemsCount" field.</summary>
    public const int ItemsCountFieldNumber = 3;
    private int itemsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemsCount {
      get { return itemsCount_; }
      set {
        itemsCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMemberRecordByMemberIdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMemberRecordByMemberIdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!memberRecords_.Equals(other.memberRecords_)) return false;
      if (ItemsCount != other.ItemsCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= memberRecords_.GetHashCode();
      if (ItemsCount != 0) hash ^= ItemsCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      memberRecords_.WriteTo(output, _repeated_memberRecords_codec);
      if (ItemsCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemsCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += memberRecords_.CalculateSize(_repeated_memberRecords_codec);
      if (ItemsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemsCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMemberRecordByMemberIdResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      memberRecords_.Add(other.memberRecords_);
      if (other.ItemsCount != 0) {
        ItemsCount = other.ItemsCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            memberRecords_.AddEntriesFrom(input, _repeated_memberRecords_codec);
            break;
          }
          case 24: {
            ItemsCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// REQUEST GET : scene 
  /// REQUEST : scene?from=0&amp;size=10
  /// </summary>
  public sealed partial class GetSceneResponse : pb::IMessage<GetSceneResponse> {
    private static readonly pb::MessageParser<GetSceneResponse> _parser = new pb::MessageParser<GetSceneResponse>(() => new GetSceneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSceneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneResponse(GetSceneResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      sceneBases_ = other.sceneBases_.Clone();
      itemsCount_ = other.itemsCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneResponse Clone() {
      return new GetSceneResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "sceneBases" field.</summary>
    public const int SceneBasesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.SceneBase> _repeated_sceneBases_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Common.SceneBase.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase> sceneBases_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase> SceneBases {
      get { return sceneBases_; }
    }

    /// <summary>Field number for the "itemsCount" field.</summary>
    public const int ItemsCountFieldNumber = 3;
    private int itemsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemsCount {
      get { return itemsCount_; }
      set {
        itemsCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSceneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSceneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!sceneBases_.Equals(other.sceneBases_)) return false;
      if (ItemsCount != other.ItemsCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= sceneBases_.GetHashCode();
      if (ItemsCount != 0) hash ^= ItemsCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      sceneBases_.WriteTo(output, _repeated_sceneBases_codec);
      if (ItemsCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemsCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += sceneBases_.CalculateSize(_repeated_sceneBases_codec);
      if (ItemsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemsCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSceneResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      sceneBases_.Add(other.sceneBases_);
      if (other.ItemsCount != 0) {
        ItemsCount = other.ItemsCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            sceneBases_.AddEntriesFrom(input, _repeated_sceneBases_codec);
            break;
          }
          case 24: {
            ItemsCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// REQUEST GET : scene 
  /// REQUEST : scene/{SCENE_ID}
  /// RESPONSE : GetSceneByIdResponse
  /// </summary>
  public sealed partial class GetSceneByIdResponse : pb::IMessage<GetSceneByIdResponse> {
    private static readonly pb::MessageParser<GetSceneByIdResponse> _parser = new pb::MessageParser<GetSceneByIdResponse>(() => new GetSceneByIdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSceneByIdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneByIdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneByIdResponse(GetSceneByIdResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      scene_ = other.scene_ != null ? other.scene_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneByIdResponse Clone() {
      return new GetSceneByIdResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "scene" field.</summary>
    public const int SceneFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Scene scene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Scene Scene {
      get { return scene_; }
      set {
        scene_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSceneByIdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSceneByIdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Scene, other.Scene)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (scene_ != null) hash ^= Scene.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (scene_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Scene);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (scene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scene);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSceneByIdResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.scene_ != null) {
        if (scene_ == null) {
          Scene = new global::Saturn.Backends.Protocols.Common.Scene();
        }
        Scene.MergeFrom(other.Scene);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (scene_ == null) {
              Scene = new global::Saturn.Backends.Protocols.Common.Scene();
            }
            input.ReadMessage(Scene);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSceneByIdBlueprintResponse : pb::IMessage<GetSceneByIdBlueprintResponse> {
    private static readonly pb::MessageParser<GetSceneByIdBlueprintResponse> _parser = new pb::MessageParser<GetSceneByIdBlueprintResponse>(() => new GetSceneByIdBlueprintResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSceneByIdBlueprintResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneByIdBlueprintResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneByIdBlueprintResponse(GetSceneByIdBlueprintResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      scene_ = other.scene_ != null ? other.scene_.Clone() : null;
      blueprint_ = other.blueprint_ != null ? other.blueprint_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneByIdBlueprintResponse Clone() {
      return new GetSceneByIdBlueprintResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "scene" field.</summary>
    public const int SceneFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Scene scene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Scene Scene {
      get { return scene_; }
      set {
        scene_ = value;
      }
    }

    /// <summary>Field number for the "blueprint" field.</summary>
    public const int BlueprintFieldNumber = 3;
    private global::Saturn.Backends.Protocols.Common.SceneBlueprint blueprint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.SceneBlueprint Blueprint {
      get { return blueprint_; }
      set {
        blueprint_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSceneByIdBlueprintResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSceneByIdBlueprintResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Scene, other.Scene)) return false;
      if (!object.Equals(Blueprint, other.Blueprint)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (scene_ != null) hash ^= Scene.GetHashCode();
      if (blueprint_ != null) hash ^= Blueprint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (scene_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Scene);
      }
      if (blueprint_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Blueprint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (scene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scene);
      }
      if (blueprint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blueprint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSceneByIdBlueprintResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.scene_ != null) {
        if (scene_ == null) {
          Scene = new global::Saturn.Backends.Protocols.Common.Scene();
        }
        Scene.MergeFrom(other.Scene);
      }
      if (other.blueprint_ != null) {
        if (blueprint_ == null) {
          Blueprint = new global::Saturn.Backends.Protocols.Common.SceneBlueprint();
        }
        Blueprint.MergeFrom(other.Blueprint);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (scene_ == null) {
              Scene = new global::Saturn.Backends.Protocols.Common.Scene();
            }
            input.ReadMessage(Scene);
            break;
          }
          case 26: {
            if (blueprint_ == null) {
              Blueprint = new global::Saturn.Backends.Protocols.Common.SceneBlueprint();
            }
            input.ReadMessage(Blueprint);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// REQUEST POST : scene
  /// MESSAGE  : PostSceneRequest
  /// RESPONSE : PostSceneResponse
  /// </summary>
  public sealed partial class PostSceneRequest : pb::IMessage<PostSceneRequest> {
    private static readonly pb::MessageParser<PostSceneRequest> _parser = new pb::MessageParser<PostSceneRequest>(() => new PostSceneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostSceneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSceneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSceneRequest(PostSceneRequest other) : this() {
      name_ = other.name_;
      sceneBlueprint_ = other.sceneBlueprint_ != null ? other.sceneBlueprint_.Clone() : null;
      previewResource_ = other.previewResource_ != null ? other.previewResource_.Clone() : null;
      isTemporary_ = other.isTemporary_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSceneRequest Clone() {
      return new PostSceneRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sceneBlueprint" field.</summary>
    public const int SceneBlueprintFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.SceneBlueprint sceneBlueprint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.SceneBlueprint SceneBlueprint {
      get { return sceneBlueprint_; }
      set {
        sceneBlueprint_ = value;
      }
    }

    /// <summary>Field number for the "previewResource" field.</summary>
    public const int PreviewResourceFieldNumber = 3;
    private global::Saturn.Backends.Protocols.Common.PreviewResource previewResource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.PreviewResource PreviewResource {
      get { return previewResource_; }
      set {
        previewResource_ = value;
      }
    }

    /// <summary>Field number for the "isTemporary" field.</summary>
    public const int IsTemporaryFieldNumber = 4;
    private bool isTemporary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsTemporary {
      get { return isTemporary_; }
      set {
        isTemporary_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostSceneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostSceneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(SceneBlueprint, other.SceneBlueprint)) return false;
      if (!object.Equals(PreviewResource, other.PreviewResource)) return false;
      if (IsTemporary != other.IsTemporary) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (sceneBlueprint_ != null) hash ^= SceneBlueprint.GetHashCode();
      if (previewResource_ != null) hash ^= PreviewResource.GetHashCode();
      if (IsTemporary != false) hash ^= IsTemporary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (sceneBlueprint_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SceneBlueprint);
      }
      if (previewResource_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PreviewResource);
      }
      if (IsTemporary != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsTemporary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (sceneBlueprint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SceneBlueprint);
      }
      if (previewResource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreviewResource);
      }
      if (IsTemporary != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostSceneRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.sceneBlueprint_ != null) {
        if (sceneBlueprint_ == null) {
          SceneBlueprint = new global::Saturn.Backends.Protocols.Common.SceneBlueprint();
        }
        SceneBlueprint.MergeFrom(other.SceneBlueprint);
      }
      if (other.previewResource_ != null) {
        if (previewResource_ == null) {
          PreviewResource = new global::Saturn.Backends.Protocols.Common.PreviewResource();
        }
        PreviewResource.MergeFrom(other.PreviewResource);
      }
      if (other.IsTemporary != false) {
        IsTemporary = other.IsTemporary;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (sceneBlueprint_ == null) {
              SceneBlueprint = new global::Saturn.Backends.Protocols.Common.SceneBlueprint();
            }
            input.ReadMessage(SceneBlueprint);
            break;
          }
          case 26: {
            if (previewResource_ == null) {
              PreviewResource = new global::Saturn.Backends.Protocols.Common.PreviewResource();
            }
            input.ReadMessage(PreviewResource);
            break;
          }
          case 32: {
            IsTemporary = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostSceneResponse : pb::IMessage<PostSceneResponse> {
    private static readonly pb::MessageParser<PostSceneResponse> _parser = new pb::MessageParser<PostSceneResponse>(() => new PostSceneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostSceneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSceneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSceneResponse(PostSceneResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      scene_ = other.scene_ != null ? other.scene_.Clone() : null;
      overwriteScene_ = other.overwriteScene_ != null ? other.overwriteScene_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSceneResponse Clone() {
      return new PostSceneResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "scene" field.</summary>
    public const int SceneFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Scene scene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Scene Scene {
      get { return scene_; }
      set {
        scene_ = value;
      }
    }

    /// <summary>Field number for the "overwriteScene" field.</summary>
    public const int OverwriteSceneFieldNumber = 3;
    private global::Saturn.Backends.Protocols.Common.SceneBase overwriteScene_;
    /// <summary>
    /// if common.CommonStatus == COMMON_STATUS_KIND_FAILED_OVERWRITE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.SceneBase OverwriteScene {
      get { return overwriteScene_; }
      set {
        overwriteScene_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostSceneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostSceneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Scene, other.Scene)) return false;
      if (!object.Equals(OverwriteScene, other.OverwriteScene)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (scene_ != null) hash ^= Scene.GetHashCode();
      if (overwriteScene_ != null) hash ^= OverwriteScene.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (scene_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Scene);
      }
      if (overwriteScene_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OverwriteScene);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (scene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scene);
      }
      if (overwriteScene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OverwriteScene);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostSceneResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.scene_ != null) {
        if (scene_ == null) {
          Scene = new global::Saturn.Backends.Protocols.Common.Scene();
        }
        Scene.MergeFrom(other.Scene);
      }
      if (other.overwriteScene_ != null) {
        if (overwriteScene_ == null) {
          OverwriteScene = new global::Saturn.Backends.Protocols.Common.SceneBase();
        }
        OverwriteScene.MergeFrom(other.OverwriteScene);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (scene_ == null) {
              Scene = new global::Saturn.Backends.Protocols.Common.Scene();
            }
            input.ReadMessage(Scene);
            break;
          }
          case 26: {
            if (overwriteScene_ == null) {
              OverwriteScene = new global::Saturn.Backends.Protocols.Common.SceneBase();
            }
            input.ReadMessage(OverwriteScene);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// METHOD   PUT : scene
  /// REQUEST  : PutSceneRequest
  /// RESPONSE : PutSceneResponse
  /// </summary>
  public sealed partial class PutSceneRequest : pb::IMessage<PutSceneRequest> {
    private static readonly pb::MessageParser<PutSceneRequest> _parser = new pb::MessageParser<PutSceneRequest>(() => new PutSceneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutSceneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutSceneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutSceneRequest(PutSceneRequest other) : this() {
      sceneId_ = other.sceneId_;
      name_ = other.name_;
      sceneBlueprint_ = other.sceneBlueprint_ != null ? other.sceneBlueprint_.Clone() : null;
      previewResource_ = other.previewResource_ != null ? other.previewResource_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutSceneRequest Clone() {
      return new PutSceneRequest(this);
    }

    /// <summary>Field number for the "sceneId" field.</summary>
    public const int SceneIdFieldNumber = 1;
    private long sceneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sceneBlueprint" field.</summary>
    public const int SceneBlueprintFieldNumber = 3;
    private global::Saturn.Backends.Protocols.Common.SceneBlueprint sceneBlueprint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.SceneBlueprint SceneBlueprint {
      get { return sceneBlueprint_; }
      set {
        sceneBlueprint_ = value;
      }
    }

    /// <summary>Field number for the "previewResource" field.</summary>
    public const int PreviewResourceFieldNumber = 4;
    private global::Saturn.Backends.Protocols.Common.PreviewResource previewResource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.PreviewResource PreviewResource {
      get { return previewResource_; }
      set {
        previewResource_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutSceneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutSceneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneId != other.SceneId) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(SceneBlueprint, other.SceneBlueprint)) return false;
      if (!object.Equals(PreviewResource, other.PreviewResource)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneId != 0L) hash ^= SceneId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (sceneBlueprint_ != null) hash ^= SceneBlueprint.GetHashCode();
      if (previewResource_ != null) hash ^= PreviewResource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SceneId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SceneId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (sceneBlueprint_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SceneBlueprint);
      }
      if (previewResource_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PreviewResource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SceneId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SceneId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (sceneBlueprint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SceneBlueprint);
      }
      if (previewResource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PreviewResource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutSceneRequest other) {
      if (other == null) {
        return;
      }
      if (other.SceneId != 0L) {
        SceneId = other.SceneId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.sceneBlueprint_ != null) {
        if (sceneBlueprint_ == null) {
          SceneBlueprint = new global::Saturn.Backends.Protocols.Common.SceneBlueprint();
        }
        SceneBlueprint.MergeFrom(other.SceneBlueprint);
      }
      if (other.previewResource_ != null) {
        if (previewResource_ == null) {
          PreviewResource = new global::Saturn.Backends.Protocols.Common.PreviewResource();
        }
        PreviewResource.MergeFrom(other.PreviewResource);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SceneId = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (sceneBlueprint_ == null) {
              SceneBlueprint = new global::Saturn.Backends.Protocols.Common.SceneBlueprint();
            }
            input.ReadMessage(SceneBlueprint);
            break;
          }
          case 34: {
            if (previewResource_ == null) {
              PreviewResource = new global::Saturn.Backends.Protocols.Common.PreviewResource();
            }
            input.ReadMessage(PreviewResource);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutSceneResponse : pb::IMessage<PutSceneResponse> {
    private static readonly pb::MessageParser<PutSceneResponse> _parser = new pb::MessageParser<PutSceneResponse>(() => new PutSceneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutSceneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutSceneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutSceneResponse(PutSceneResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      scene_ = other.scene_ != null ? other.scene_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutSceneResponse Clone() {
      return new PutSceneResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "scene" field.</summary>
    public const int SceneFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Scene scene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Scene Scene {
      get { return scene_; }
      set {
        scene_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutSceneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutSceneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Scene, other.Scene)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (scene_ != null) hash ^= Scene.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (scene_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Scene);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (scene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scene);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutSceneResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.scene_ != null) {
        if (scene_ == null) {
          Scene = new global::Saturn.Backends.Protocols.Common.Scene();
        }
        Scene.MergeFrom(other.Scene);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (scene_ == null) {
              Scene = new global::Saturn.Backends.Protocols.Common.Scene();
            }
            input.ReadMessage(Scene);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// METHOD   DELETE : scene
  /// REQUEST  : DeleteSceneRequest
  /// RESPONSE : DeleteSceneResponse
  /// </summary>
  public sealed partial class DeleteSceneResponse : pb::IMessage<DeleteSceneResponse> {
    private static readonly pb::MessageParser<DeleteSceneResponse> _parser = new pb::MessageParser<DeleteSceneResponse>(() => new DeleteSceneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteSceneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteSceneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteSceneResponse(DeleteSceneResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteSceneResponse Clone() {
      return new DeleteSceneResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteSceneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteSceneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteSceneResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///////////////////////////////////////////////////////////////////////
  /// ROUTE : department/member
  /// </summary>
  public sealed partial class GetDepartmentMemberResponse : pb::IMessage<GetDepartmentMemberResponse> {
    private static readonly pb::MessageParser<GetDepartmentMemberResponse> _parser = new pb::MessageParser<GetDepartmentMemberResponse>(() => new GetDepartmentMemberResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDepartmentMemberResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentMemberResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentMemberResponse(GetDepartmentMemberResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      department_ = other.department_ != null ? other.department_.Clone() : null;
      memberBases_ = other.memberBases_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentMemberResponse Clone() {
      return new GetDepartmentMemberResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "department" field.</summary>
    public const int DepartmentFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Department department_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Department Department {
      get { return department_; }
      set {
        department_ = value;
      }
    }

    /// <summary>Field number for the "memberBases" field.</summary>
    public const int MemberBasesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.MemberBase> _repeated_memberBases_codec
        = pb::FieldCodec.ForMessage(26, global::Saturn.Backends.Protocols.Common.MemberBase.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberBase> memberBases_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberBase> MemberBases {
      get { return memberBases_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDepartmentMemberResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDepartmentMemberResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Department, other.Department)) return false;
      if(!memberBases_.Equals(other.memberBases_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (department_ != null) hash ^= Department.GetHashCode();
      hash ^= memberBases_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (department_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Department);
      }
      memberBases_.WriteTo(output, _repeated_memberBases_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (department_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Department);
      }
      size += memberBases_.CalculateSize(_repeated_memberBases_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDepartmentMemberResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.department_ != null) {
        if (department_ == null) {
          Department = new global::Saturn.Backends.Protocols.Common.Department();
        }
        Department.MergeFrom(other.Department);
      }
      memberBases_.Add(other.memberBases_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (department_ == null) {
              Department = new global::Saturn.Backends.Protocols.Common.Department();
            }
            input.ReadMessage(Department);
            break;
          }
          case 26: {
            memberBases_.AddEntriesFrom(input, _repeated_memberBases_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// REQUEST  : department/connector/lowers/{DEPARTMENT_ID}
  /// 
  /// RESPONSE : GetDepartmentConnectorLowersResponse
  /// </summary>
  public sealed partial class GetDepartmentConnectorLowersResponse : pb::IMessage<GetDepartmentConnectorLowersResponse> {
    private static readonly pb::MessageParser<GetDepartmentConnectorLowersResponse> _parser = new pb::MessageParser<GetDepartmentConnectorLowersResponse>(() => new GetDepartmentConnectorLowersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDepartmentConnectorLowersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentConnectorLowersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentConnectorLowersResponse(GetDepartmentConnectorLowersResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      connectorDepartmentBases_ = other.connectorDepartmentBases_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentConnectorLowersResponse Clone() {
      return new GetDepartmentConnectorLowersResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "connectorDepartmentBases" field.</summary>
    public const int ConnectorDepartmentBasesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.ConnectorDepartmentBase> _repeated_connectorDepartmentBases_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Common.ConnectorDepartmentBase.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ConnectorDepartmentBase> connectorDepartmentBases_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ConnectorDepartmentBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ConnectorDepartmentBase> ConnectorDepartmentBases {
      get { return connectorDepartmentBases_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDepartmentConnectorLowersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDepartmentConnectorLowersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!connectorDepartmentBases_.Equals(other.connectorDepartmentBases_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= connectorDepartmentBases_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      connectorDepartmentBases_.WriteTo(output, _repeated_connectorDepartmentBases_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += connectorDepartmentBases_.CalculateSize(_repeated_connectorDepartmentBases_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDepartmentConnectorLowersResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      connectorDepartmentBases_.Add(other.connectorDepartmentBases_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            connectorDepartmentBases_.AddEntriesFrom(input, _repeated_connectorDepartmentBases_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostDepartmentMemberRequest : pb::IMessage<PostDepartmentMemberRequest> {
    private static readonly pb::MessageParser<PostDepartmentMemberRequest> _parser = new pb::MessageParser<PostDepartmentMemberRequest>(() => new PostDepartmentMemberRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostDepartmentMemberRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentMemberRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentMemberRequest(PostDepartmentMemberRequest other) : this() {
      departmentId_ = other.departmentId_;
      memberId_ = other.memberId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentMemberRequest Clone() {
      return new PostDepartmentMemberRequest(this);
    }

    /// <summary>Field number for the "departmentId" field.</summary>
    public const int DepartmentIdFieldNumber = 1;
    private long departmentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DepartmentId {
      get { return departmentId_; }
      set {
        departmentId_ = value;
      }
    }

    /// <summary>Field number for the "memberId" field.</summary>
    public const int MemberIdFieldNumber = 2;
    private long memberId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MemberId {
      get { return memberId_; }
      set {
        memberId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostDepartmentMemberRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostDepartmentMemberRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DepartmentId != other.DepartmentId) return false;
      if (MemberId != other.MemberId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DepartmentId != 0L) hash ^= DepartmentId.GetHashCode();
      if (MemberId != 0L) hash ^= MemberId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DepartmentId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(DepartmentId);
      }
      if (MemberId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MemberId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DepartmentId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DepartmentId);
      }
      if (MemberId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MemberId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostDepartmentMemberRequest other) {
      if (other == null) {
        return;
      }
      if (other.DepartmentId != 0L) {
        DepartmentId = other.DepartmentId;
      }
      if (other.MemberId != 0L) {
        MemberId = other.MemberId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DepartmentId = input.ReadInt64();
            break;
          }
          case 16: {
            MemberId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostDepartmentMemberResponse : pb::IMessage<PostDepartmentMemberResponse> {
    private static readonly pb::MessageParser<PostDepartmentMemberResponse> _parser = new pb::MessageParser<PostDepartmentMemberResponse>(() => new PostDepartmentMemberResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostDepartmentMemberResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentMemberResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentMemberResponse(PostDepartmentMemberResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      department_ = other.department_ != null ? other.department_.Clone() : null;
      memberBases_ = other.memberBases_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentMemberResponse Clone() {
      return new PostDepartmentMemberResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "department" field.</summary>
    public const int DepartmentFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Department department_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Department Department {
      get { return department_; }
      set {
        department_ = value;
      }
    }

    /// <summary>Field number for the "memberBases" field.</summary>
    public const int MemberBasesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.MemberBase> _repeated_memberBases_codec
        = pb::FieldCodec.ForMessage(26, global::Saturn.Backends.Protocols.Common.MemberBase.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberBase> memberBases_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberBase> MemberBases {
      get { return memberBases_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostDepartmentMemberResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostDepartmentMemberResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Department, other.Department)) return false;
      if(!memberBases_.Equals(other.memberBases_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (department_ != null) hash ^= Department.GetHashCode();
      hash ^= memberBases_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (department_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Department);
      }
      memberBases_.WriteTo(output, _repeated_memberBases_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (department_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Department);
      }
      size += memberBases_.CalculateSize(_repeated_memberBases_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostDepartmentMemberResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.department_ != null) {
        if (department_ == null) {
          Department = new global::Saturn.Backends.Protocols.Common.Department();
        }
        Department.MergeFrom(other.Department);
      }
      memberBases_.Add(other.memberBases_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (department_ == null) {
              Department = new global::Saturn.Backends.Protocols.Common.Department();
            }
            input.ReadMessage(Department);
            break;
          }
          case 26: {
            memberBases_.AddEntriesFrom(input, _repeated_memberBases_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteDepartmentMemberRequest : pb::IMessage<DeleteDepartmentMemberRequest> {
    private static readonly pb::MessageParser<DeleteDepartmentMemberRequest> _parser = new pb::MessageParser<DeleteDepartmentMemberRequest>(() => new DeleteDepartmentMemberRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDepartmentMemberRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentMemberRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentMemberRequest(DeleteDepartmentMemberRequest other) : this() {
      deparmentId_ = other.deparmentId_;
      memberId_ = other.memberId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentMemberRequest Clone() {
      return new DeleteDepartmentMemberRequest(this);
    }

    /// <summary>Field number for the "deparmentId" field.</summary>
    public const int DeparmentIdFieldNumber = 1;
    private long deparmentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DeparmentId {
      get { return deparmentId_; }
      set {
        deparmentId_ = value;
      }
    }

    /// <summary>Field number for the "memberId" field.</summary>
    public const int MemberIdFieldNumber = 2;
    private long memberId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MemberId {
      get { return memberId_; }
      set {
        memberId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDepartmentMemberRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDepartmentMemberRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeparmentId != other.DeparmentId) return false;
      if (MemberId != other.MemberId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeparmentId != 0L) hash ^= DeparmentId.GetHashCode();
      if (MemberId != 0L) hash ^= MemberId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeparmentId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(DeparmentId);
      }
      if (MemberId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MemberId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeparmentId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DeparmentId);
      }
      if (MemberId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MemberId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDepartmentMemberRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeparmentId != 0L) {
        DeparmentId = other.DeparmentId;
      }
      if (other.MemberId != 0L) {
        MemberId = other.MemberId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeparmentId = input.ReadInt64();
            break;
          }
          case 16: {
            MemberId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteDepartmentMemberResponse : pb::IMessage<DeleteDepartmentMemberResponse> {
    private static readonly pb::MessageParser<DeleteDepartmentMemberResponse> _parser = new pb::MessageParser<DeleteDepartmentMemberResponse>(() => new DeleteDepartmentMemberResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDepartmentMemberResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentMemberResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentMemberResponse(DeleteDepartmentMemberResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      department_ = other.department_ != null ? other.department_.Clone() : null;
      memberBases_ = other.memberBases_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentMemberResponse Clone() {
      return new DeleteDepartmentMemberResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "department" field.</summary>
    public const int DepartmentFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Department department_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Department Department {
      get { return department_; }
      set {
        department_ = value;
      }
    }

    /// <summary>Field number for the "memberBases" field.</summary>
    public const int MemberBasesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.MemberBase> _repeated_memberBases_codec
        = pb::FieldCodec.ForMessage(26, global::Saturn.Backends.Protocols.Common.MemberBase.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberBase> memberBases_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.MemberBase> MemberBases {
      get { return memberBases_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDepartmentMemberResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDepartmentMemberResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Department, other.Department)) return false;
      if(!memberBases_.Equals(other.memberBases_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (department_ != null) hash ^= Department.GetHashCode();
      hash ^= memberBases_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (department_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Department);
      }
      memberBases_.WriteTo(output, _repeated_memberBases_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (department_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Department);
      }
      size += memberBases_.CalculateSize(_repeated_memberBases_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDepartmentMemberResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.department_ != null) {
        if (department_ == null) {
          Department = new global::Saturn.Backends.Protocols.Common.Department();
        }
        Department.MergeFrom(other.Department);
      }
      memberBases_.Add(other.memberBases_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (department_ == null) {
              Department = new global::Saturn.Backends.Protocols.Common.Department();
            }
            input.ReadMessage(Department);
            break;
          }
          case 26: {
            memberBases_.AddEntriesFrom(input, _repeated_memberBases_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// REQUEST GET : department/connector
  /// REQUEST : department/connector/{departmentId}
  /// </summary>
  public sealed partial class GetDepartmentConnectorsResponse : pb::IMessage<GetDepartmentConnectorsResponse> {
    private static readonly pb::MessageParser<GetDepartmentConnectorsResponse> _parser = new pb::MessageParser<GetDepartmentConnectorsResponse>(() => new GetDepartmentConnectorsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDepartmentConnectorsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentConnectorsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentConnectorsResponse(GetDepartmentConnectorsResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      department_ = other.department_ != null ? other.department_.Clone() : null;
      connectorBases_ = other.connectorBases_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentConnectorsResponse Clone() {
      return new GetDepartmentConnectorsResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "department" field.</summary>
    public const int DepartmentFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Department department_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Department Department {
      get { return department_; }
      set {
        department_ = value;
      }
    }

    /// <summary>Field number for the "connectorBases" field.</summary>
    public const int ConnectorBasesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.ConnectorBase> _repeated_connectorBases_codec
        = pb::FieldCodec.ForMessage(26, global::Saturn.Backends.Protocols.Common.ConnectorBase.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ConnectorBase> connectorBases_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ConnectorBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ConnectorBase> ConnectorBases {
      get { return connectorBases_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDepartmentConnectorsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDepartmentConnectorsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Department, other.Department)) return false;
      if(!connectorBases_.Equals(other.connectorBases_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (department_ != null) hash ^= Department.GetHashCode();
      hash ^= connectorBases_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (department_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Department);
      }
      connectorBases_.WriteTo(output, _repeated_connectorBases_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (department_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Department);
      }
      size += connectorBases_.CalculateSize(_repeated_connectorBases_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDepartmentConnectorsResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.department_ != null) {
        if (department_ == null) {
          Department = new global::Saturn.Backends.Protocols.Common.Department();
        }
        Department.MergeFrom(other.Department);
      }
      connectorBases_.Add(other.connectorBases_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (department_ == null) {
              Department = new global::Saturn.Backends.Protocols.Common.Department();
            }
            input.ReadMessage(Department);
            break;
          }
          case 26: {
            connectorBases_.AddEntriesFrom(input, _repeated_connectorBases_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostDepartmentConnectorRequest : pb::IMessage<PostDepartmentConnectorRequest> {
    private static readonly pb::MessageParser<PostDepartmentConnectorRequest> _parser = new pb::MessageParser<PostDepartmentConnectorRequest>(() => new PostDepartmentConnectorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostDepartmentConnectorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentConnectorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentConnectorRequest(PostDepartmentConnectorRequest other) : this() {
      departmentId_ = other.departmentId_;
      connectorId_ = other.connectorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentConnectorRequest Clone() {
      return new PostDepartmentConnectorRequest(this);
    }

    /// <summary>Field number for the "departmentId" field.</summary>
    public const int DepartmentIdFieldNumber = 1;
    private long departmentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DepartmentId {
      get { return departmentId_; }
      set {
        departmentId_ = value;
      }
    }

    /// <summary>Field number for the "connectorId" field.</summary>
    public const int ConnectorIdFieldNumber = 2;
    private long connectorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ConnectorId {
      get { return connectorId_; }
      set {
        connectorId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostDepartmentConnectorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostDepartmentConnectorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DepartmentId != other.DepartmentId) return false;
      if (ConnectorId != other.ConnectorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DepartmentId != 0L) hash ^= DepartmentId.GetHashCode();
      if (ConnectorId != 0L) hash ^= ConnectorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DepartmentId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(DepartmentId);
      }
      if (ConnectorId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ConnectorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DepartmentId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DepartmentId);
      }
      if (ConnectorId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConnectorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostDepartmentConnectorRequest other) {
      if (other == null) {
        return;
      }
      if (other.DepartmentId != 0L) {
        DepartmentId = other.DepartmentId;
      }
      if (other.ConnectorId != 0L) {
        ConnectorId = other.ConnectorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DepartmentId = input.ReadInt64();
            break;
          }
          case 16: {
            ConnectorId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostDepartmentConnectorResponse : pb::IMessage<PostDepartmentConnectorResponse> {
    private static readonly pb::MessageParser<PostDepartmentConnectorResponse> _parser = new pb::MessageParser<PostDepartmentConnectorResponse>(() => new PostDepartmentConnectorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostDepartmentConnectorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentConnectorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentConnectorResponse(PostDepartmentConnectorResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      department_ = other.department_ != null ? other.department_.Clone() : null;
      connectorBases_ = other.connectorBases_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentConnectorResponse Clone() {
      return new PostDepartmentConnectorResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "department" field.</summary>
    public const int DepartmentFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Department department_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Department Department {
      get { return department_; }
      set {
        department_ = value;
      }
    }

    /// <summary>Field number for the "connectorBases" field.</summary>
    public const int ConnectorBasesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.ConnectorBase> _repeated_connectorBases_codec
        = pb::FieldCodec.ForMessage(26, global::Saturn.Backends.Protocols.Common.ConnectorBase.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ConnectorBase> connectorBases_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ConnectorBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ConnectorBase> ConnectorBases {
      get { return connectorBases_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostDepartmentConnectorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostDepartmentConnectorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Department, other.Department)) return false;
      if(!connectorBases_.Equals(other.connectorBases_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (department_ != null) hash ^= Department.GetHashCode();
      hash ^= connectorBases_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (department_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Department);
      }
      connectorBases_.WriteTo(output, _repeated_connectorBases_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (department_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Department);
      }
      size += connectorBases_.CalculateSize(_repeated_connectorBases_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostDepartmentConnectorResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.department_ != null) {
        if (department_ == null) {
          Department = new global::Saturn.Backends.Protocols.Common.Department();
        }
        Department.MergeFrom(other.Department);
      }
      connectorBases_.Add(other.connectorBases_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (department_ == null) {
              Department = new global::Saturn.Backends.Protocols.Common.Department();
            }
            input.ReadMessage(Department);
            break;
          }
          case 26: {
            connectorBases_.AddEntriesFrom(input, _repeated_connectorBases_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteDepartmentConnectorResponse : pb::IMessage<DeleteDepartmentConnectorResponse> {
    private static readonly pb::MessageParser<DeleteDepartmentConnectorResponse> _parser = new pb::MessageParser<DeleteDepartmentConnectorResponse>(() => new DeleteDepartmentConnectorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDepartmentConnectorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentConnectorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentConnectorResponse(DeleteDepartmentConnectorResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      department_ = other.department_ != null ? other.department_.Clone() : null;
      connectorBases_ = other.connectorBases_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentConnectorResponse Clone() {
      return new DeleteDepartmentConnectorResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "department" field.</summary>
    public const int DepartmentFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Department department_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Department Department {
      get { return department_; }
      set {
        department_ = value;
      }
    }

    /// <summary>Field number for the "connectorBases" field.</summary>
    public const int ConnectorBasesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.ConnectorBase> _repeated_connectorBases_codec
        = pb::FieldCodec.ForMessage(26, global::Saturn.Backends.Protocols.Common.ConnectorBase.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ConnectorBase> connectorBases_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ConnectorBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ConnectorBase> ConnectorBases {
      get { return connectorBases_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDepartmentConnectorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDepartmentConnectorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Department, other.Department)) return false;
      if(!connectorBases_.Equals(other.connectorBases_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (department_ != null) hash ^= Department.GetHashCode();
      hash ^= connectorBases_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (department_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Department);
      }
      connectorBases_.WriteTo(output, _repeated_connectorBases_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (department_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Department);
      }
      size += connectorBases_.CalculateSize(_repeated_connectorBases_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDepartmentConnectorResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.department_ != null) {
        if (department_ == null) {
          Department = new global::Saturn.Backends.Protocols.Common.Department();
        }
        Department.MergeFrom(other.Department);
      }
      connectorBases_.Add(other.connectorBases_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (department_ == null) {
              Department = new global::Saturn.Backends.Protocols.Common.Department();
            }
            input.ReadMessage(Department);
            break;
          }
          case 26: {
            connectorBases_.AddEntriesFrom(input, _repeated_connectorBases_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// REQUEST GET : connector 
  /// MESSAGE : GetConnectRequest
  /// </summary>
  public sealed partial class GetConnectorResponse : pb::IMessage<GetConnectorResponse> {
    private static readonly pb::MessageParser<GetConnectorResponse> _parser = new pb::MessageParser<GetConnectorResponse>(() => new GetConnectorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetConnectorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConnectorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConnectorResponse(GetConnectorResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      connector_ = other.connector_ != null ? other.connector_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConnectorResponse Clone() {
      return new GetConnectorResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "connector" field.</summary>
    public const int ConnectorFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Connector connector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Connector Connector {
      get { return connector_; }
      set {
        connector_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetConnectorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetConnectorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Connector, other.Connector)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (connector_ != null) hash ^= Connector.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (connector_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Connector);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (connector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connector);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetConnectorResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.connector_ != null) {
        if (connector_ == null) {
          Connector = new global::Saturn.Backends.Protocols.Common.Connector();
        }
        Connector.MergeFrom(other.Connector);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (connector_ == null) {
              Connector = new global::Saturn.Backends.Protocols.Common.Connector();
            }
            input.ReadMessage(Connector);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetConnectorsResponse : pb::IMessage<GetConnectorsResponse> {
    private static readonly pb::MessageParser<GetConnectorsResponse> _parser = new pb::MessageParser<GetConnectorsResponse>(() => new GetConnectorsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetConnectorsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConnectorsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConnectorsResponse(GetConnectorsResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      connectorBases_ = other.connectorBases_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConnectorsResponse Clone() {
      return new GetConnectorsResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "connectorBases" field.</summary>
    public const int ConnectorBasesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.ConnectorBase> _repeated_connectorBases_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Common.ConnectorBase.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ConnectorBase> connectorBases_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ConnectorBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ConnectorBase> ConnectorBases {
      get { return connectorBases_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetConnectorsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetConnectorsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!connectorBases_.Equals(other.connectorBases_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= connectorBases_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      connectorBases_.WriteTo(output, _repeated_connectorBases_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += connectorBases_.CalculateSize(_repeated_connectorBases_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetConnectorsResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      connectorBases_.Add(other.connectorBases_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            connectorBases_.AddEntriesFrom(input, _repeated_connectorBases_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostConnectorByIdResponse : pb::IMessage<PostConnectorByIdResponse> {
    private static readonly pb::MessageParser<PostConnectorByIdResponse> _parser = new pb::MessageParser<PostConnectorByIdResponse>(() => new PostConnectorByIdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostConnectorByIdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConnectorByIdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConnectorByIdResponse(PostConnectorByIdResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      connector_ = other.connector_ != null ? other.connector_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConnectorByIdResponse Clone() {
      return new PostConnectorByIdResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "connector" field.</summary>
    public const int ConnectorFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Connector connector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Connector Connector {
      get { return connector_; }
      set {
        connector_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostConnectorByIdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostConnectorByIdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Connector, other.Connector)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (connector_ != null) hash ^= Connector.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (connector_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Connector);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (connector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connector);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostConnectorByIdResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.connector_ != null) {
        if (connector_ == null) {
          Connector = new global::Saturn.Backends.Protocols.Common.Connector();
        }
        Connector.MergeFrom(other.Connector);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (connector_ == null) {
              Connector = new global::Saturn.Backends.Protocols.Common.Connector();
            }
            input.ReadMessage(Connector);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostConnectorRequest : pb::IMessage<PostConnectorRequest> {
    private static readonly pb::MessageParser<PostConnectorRequest> _parser = new pb::MessageParser<PostConnectorRequest>(() => new PostConnectorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostConnectorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConnectorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConnectorRequest(PostConnectorRequest other) : this() {
      name_ = other.name_;
      deviceId_ = other.deviceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConnectorRequest Clone() {
      return new PostConnectorRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 2;
    private string deviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostConnectorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostConnectorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (DeviceId != other.DeviceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DeviceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostConnectorRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            DeviceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostConnectorResponse : pb::IMessage<PostConnectorResponse> {
    private static readonly pb::MessageParser<PostConnectorResponse> _parser = new pb::MessageParser<PostConnectorResponse>(() => new PostConnectorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostConnectorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConnectorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConnectorResponse(PostConnectorResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      kind_ = other.kind_;
      connector_ = other.connector_ != null ? other.connector_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConnectorResponse Clone() {
      return new PostConnectorResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Prometheus.PostConnectorResponse.Types.POST_KIND kind_ = global::Saturn.Backends.Protocols.Prometheus.PostConnectorResponse.Types.POST_KIND.Default;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Prometheus.PostConnectorResponse.Types.POST_KIND Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "connector" field.</summary>
    public const int ConnectorFieldNumber = 3;
    private global::Saturn.Backends.Protocols.Common.Connector connector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Connector Connector {
      get { return connector_; }
      set {
        connector_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostConnectorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostConnectorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (Kind != other.Kind) return false;
      if (!object.Equals(Connector, other.Connector)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (Kind != global::Saturn.Backends.Protocols.Prometheus.PostConnectorResponse.Types.POST_KIND.Default) hash ^= Kind.GetHashCode();
      if (connector_ != null) hash ^= Connector.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (Kind != global::Saturn.Backends.Protocols.Prometheus.PostConnectorResponse.Types.POST_KIND.Default) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Kind);
      }
      if (connector_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Connector);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (Kind != global::Saturn.Backends.Protocols.Prometheus.PostConnectorResponse.Types.POST_KIND.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
      }
      if (connector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connector);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostConnectorResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.Kind != global::Saturn.Backends.Protocols.Prometheus.PostConnectorResponse.Types.POST_KIND.Default) {
        Kind = other.Kind;
      }
      if (other.connector_ != null) {
        if (connector_ == null) {
          Connector = new global::Saturn.Backends.Protocols.Common.Connector();
        }
        Connector.MergeFrom(other.Connector);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 16: {
            Kind = (global::Saturn.Backends.Protocols.Prometheus.PostConnectorResponse.Types.POST_KIND) input.ReadEnum();
            break;
          }
          case 26: {
            if (connector_ == null) {
              Connector = new global::Saturn.Backends.Protocols.Common.Connector();
            }
            input.ReadMessage(Connector);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PostConnectorResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum POST_KIND {
        [pbr::OriginalName("POST_KIND_DEFAULT")] Default = 0,
        [pbr::OriginalName("POST_KIND_CREATED")] Created = 1,
        [pbr::OriginalName("POST_KIND_DUPLICATED_NAME")] DuplicatedName = 2,
        [pbr::OriginalName("POST_KIND_DUPLICATED_DEVICE")] DuplicatedDevice = 3,
      }

    }
    #endregion

  }

  public sealed partial class PutConnectorNameRequest : pb::IMessage<PutConnectorNameRequest> {
    private static readonly pb::MessageParser<PutConnectorNameRequest> _parser = new pb::MessageParser<PutConnectorNameRequest>(() => new PutConnectorNameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutConnectorNameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorNameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorNameRequest(PutConnectorNameRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorNameRequest Clone() {
      return new PutConnectorNameRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutConnectorNameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutConnectorNameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutConnectorNameRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutConnectorNameResponse : pb::IMessage<PutConnectorNameResponse> {
    private static readonly pb::MessageParser<PutConnectorNameResponse> _parser = new pb::MessageParser<PutConnectorNameResponse>(() => new PutConnectorNameResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutConnectorNameResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorNameResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorNameResponse(PutConnectorNameResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      connector_ = other.connector_ != null ? other.connector_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorNameResponse Clone() {
      return new PutConnectorNameResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "connector" field.</summary>
    public const int ConnectorFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Connector connector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Connector Connector {
      get { return connector_; }
      set {
        connector_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutConnectorNameResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutConnectorNameResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Connector, other.Connector)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (connector_ != null) hash ^= Connector.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (connector_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Connector);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (connector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connector);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutConnectorNameResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.connector_ != null) {
        if (connector_ == null) {
          Connector = new global::Saturn.Backends.Protocols.Common.Connector();
        }
        Connector.MergeFrom(other.Connector);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (connector_ == null) {
              Connector = new global::Saturn.Backends.Protocols.Common.Connector();
            }
            input.ReadMessage(Connector);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutConnectorRequest : pb::IMessage<PutConnectorRequest> {
    private static readonly pb::MessageParser<PutConnectorRequest> _parser = new pb::MessageParser<PutConnectorRequest>(() => new PutConnectorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutConnectorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorRequest(PutConnectorRequest other) : this() {
      kind_ = other.kind_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorRequest Clone() {
      return new PutConnectorRequest(this);
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CONNECTOR_REGISTER_KIND kind_ = global::Saturn.Backends.Protocols.Common.CONNECTOR_REGISTER_KIND.Default;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CONNECTOR_REGISTER_KIND Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutConnectorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutConnectorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Kind != other.Kind) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Kind != global::Saturn.Backends.Protocols.Common.CONNECTOR_REGISTER_KIND.Default) hash ^= Kind.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Kind != global::Saturn.Backends.Protocols.Common.CONNECTOR_REGISTER_KIND.Default) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Kind);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Kind != global::Saturn.Backends.Protocols.Common.CONNECTOR_REGISTER_KIND.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutConnectorRequest other) {
      if (other == null) {
        return;
      }
      if (other.Kind != global::Saturn.Backends.Protocols.Common.CONNECTOR_REGISTER_KIND.Default) {
        Kind = other.Kind;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Kind = (global::Saturn.Backends.Protocols.Common.CONNECTOR_REGISTER_KIND) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutConnectorResponse : pb::IMessage<PutConnectorResponse> {
    private static readonly pb::MessageParser<PutConnectorResponse> _parser = new pb::MessageParser<PutConnectorResponse>(() => new PutConnectorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutConnectorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorResponse(PutConnectorResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      connector_ = other.connector_ != null ? other.connector_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorResponse Clone() {
      return new PutConnectorResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "connector" field.</summary>
    public const int ConnectorFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Connector connector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Connector Connector {
      get { return connector_; }
      set {
        connector_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutConnectorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutConnectorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Connector, other.Connector)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (connector_ != null) hash ^= Connector.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (connector_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Connector);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (connector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connector);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutConnectorResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.connector_ != null) {
        if (connector_ == null) {
          Connector = new global::Saturn.Backends.Protocols.Common.Connector();
        }
        Connector.MergeFrom(other.Connector);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (connector_ == null) {
              Connector = new global::Saturn.Backends.Protocols.Common.Connector();
            }
            input.ReadMessage(Connector);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteConnectorResponse : pb::IMessage<DeleteConnectorResponse> {
    private static readonly pb::MessageParser<DeleteConnectorResponse> _parser = new pb::MessageParser<DeleteConnectorResponse>(() => new DeleteConnectorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteConnectorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectorResponse(DeleteConnectorResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectorResponse Clone() {
      return new DeleteConnectorResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteConnectorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteConnectorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteConnectorResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// REQUEST : PUT connector/{CONNECTOR_ID}/scene/{SCENE_ID}
  /// </summary>
  public sealed partial class PutConnectorSceneResponse : pb::IMessage<PutConnectorSceneResponse> {
    private static readonly pb::MessageParser<PutConnectorSceneResponse> _parser = new pb::MessageParser<PutConnectorSceneResponse>(() => new PutConnectorSceneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutConnectorSceneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorSceneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorSceneResponse(PutConnectorSceneResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      scene_ = other.scene_ != null ? other.scene_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorSceneResponse Clone() {
      return new PutConnectorSceneResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "scene" field.</summary>
    public const int SceneFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Scene scene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Scene Scene {
      get { return scene_; }
      set {
        scene_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutConnectorSceneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutConnectorSceneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Scene, other.Scene)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (scene_ != null) hash ^= Scene.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (scene_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Scene);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (scene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scene);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutConnectorSceneResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.scene_ != null) {
        if (scene_ == null) {
          Scene = new global::Saturn.Backends.Protocols.Common.Scene();
        }
        Scene.MergeFrom(other.Scene);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (scene_ == null) {
              Scene = new global::Saturn.Backends.Protocols.Common.Scene();
            }
            input.ReadMessage(Scene);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteConnectorSceneResponse : pb::IMessage<DeleteConnectorSceneResponse> {
    private static readonly pb::MessageParser<DeleteConnectorSceneResponse> _parser = new pb::MessageParser<DeleteConnectorSceneResponse>(() => new DeleteConnectorSceneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteConnectorSceneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectorSceneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectorSceneResponse(DeleteConnectorSceneResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectorSceneResponse Clone() {
      return new DeleteConnectorSceneResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteConnectorSceneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteConnectorSceneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteConnectorSceneResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// REQUEST : PUT connector/{CONNECTOR_ID}/scene/{SCENE_ID}/emergency
  /// 
  /// RESPONSE : PutConnectorSceneEmergencyResponse
  /// </summary>
  public sealed partial class PutConnectorSceneEmergencyResponse : pb::IMessage<PutConnectorSceneEmergencyResponse> {
    private static readonly pb::MessageParser<PutConnectorSceneEmergencyResponse> _parser = new pb::MessageParser<PutConnectorSceneEmergencyResponse>(() => new PutConnectorSceneEmergencyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutConnectorSceneEmergencyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorSceneEmergencyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorSceneEmergencyResponse(PutConnectorSceneEmergencyResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      scene_ = other.scene_ != null ? other.scene_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorSceneEmergencyResponse Clone() {
      return new PutConnectorSceneEmergencyResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "scene" field.</summary>
    public const int SceneFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Scene scene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Scene Scene {
      get { return scene_; }
      set {
        scene_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutConnectorSceneEmergencyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutConnectorSceneEmergencyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Scene, other.Scene)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (scene_ != null) hash ^= Scene.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (scene_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Scene);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (scene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scene);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutConnectorSceneEmergencyResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.scene_ != null) {
        if (scene_ == null) {
          Scene = new global::Saturn.Backends.Protocols.Common.Scene();
        }
        Scene.MergeFrom(other.Scene);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (scene_ == null) {
              Scene = new global::Saturn.Backends.Protocols.Common.Scene();
            }
            input.ReadMessage(Scene);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteConnectorSceneEmergencyResponse : pb::IMessage<DeleteConnectorSceneEmergencyResponse> {
    private static readonly pb::MessageParser<DeleteConnectorSceneEmergencyResponse> _parser = new pb::MessageParser<DeleteConnectorSceneEmergencyResponse>(() => new DeleteConnectorSceneEmergencyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteConnectorSceneEmergencyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectorSceneEmergencyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectorSceneEmergencyResponse(DeleteConnectorSceneEmergencyResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectorSceneEmergencyResponse Clone() {
      return new DeleteConnectorSceneEmergencyResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteConnectorSceneEmergencyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteConnectorSceneEmergencyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteConnectorSceneEmergencyResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// REQUEST : PUT connector/{CONNECTOR_ID}/emergency 
  /// </summary>
  public sealed partial class PutConnectorEmergencyRequest : pb::IMessage<PutConnectorEmergencyRequest> {
    private static readonly pb::MessageParser<PutConnectorEmergencyRequest> _parser = new pb::MessageParser<PutConnectorEmergencyRequest>(() => new PutConnectorEmergencyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutConnectorEmergencyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorEmergencyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorEmergencyRequest(PutConnectorEmergencyRequest other) : this() {
      connectorId_ = other.connectorId_;
      isEmergency_ = other.isEmergency_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorEmergencyRequest Clone() {
      return new PutConnectorEmergencyRequest(this);
    }

    /// <summary>Field number for the "connectorId" field.</summary>
    public const int ConnectorIdFieldNumber = 1;
    private long connectorId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ConnectorId {
      get { return connectorId_; }
      set {
        connectorId_ = value;
      }
    }

    /// <summary>Field number for the "isEmergency" field.</summary>
    public const int IsEmergencyFieldNumber = 2;
    private bool isEmergency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsEmergency {
      get { return isEmergency_; }
      set {
        isEmergency_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutConnectorEmergencyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutConnectorEmergencyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ConnectorId != other.ConnectorId) return false;
      if (IsEmergency != other.IsEmergency) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ConnectorId != 0L) hash ^= ConnectorId.GetHashCode();
      if (IsEmergency != false) hash ^= IsEmergency.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ConnectorId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ConnectorId);
      }
      if (IsEmergency != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsEmergency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ConnectorId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConnectorId);
      }
      if (IsEmergency != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutConnectorEmergencyRequest other) {
      if (other == null) {
        return;
      }
      if (other.ConnectorId != 0L) {
        ConnectorId = other.ConnectorId;
      }
      if (other.IsEmergency != false) {
        IsEmergency = other.IsEmergency;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ConnectorId = input.ReadInt64();
            break;
          }
          case 16: {
            IsEmergency = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutConnectorEmergencyResponse : pb::IMessage<PutConnectorEmergencyResponse> {
    private static readonly pb::MessageParser<PutConnectorEmergencyResponse> _parser = new pb::MessageParser<PutConnectorEmergencyResponse>(() => new PutConnectorEmergencyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutConnectorEmergencyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorEmergencyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorEmergencyResponse(PutConnectorEmergencyResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorEmergencyResponse Clone() {
      return new PutConnectorEmergencyResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutConnectorEmergencyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutConnectorEmergencyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutConnectorEmergencyResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// REQUEST : PUT connector/{CONNECTOR_ID}/emergency/{SCENE_ID}
  /// </summary>
  public sealed partial class PutConnectorEmergencySceneRequest : pb::IMessage<PutConnectorEmergencySceneRequest> {
    private static readonly pb::MessageParser<PutConnectorEmergencySceneRequest> _parser = new pb::MessageParser<PutConnectorEmergencySceneRequest>(() => new PutConnectorEmergencySceneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutConnectorEmergencySceneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorEmergencySceneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorEmergencySceneRequest(PutConnectorEmergencySceneRequest other) : this() {
      sceneId_ = other.sceneId_;
      isEmergency_ = other.isEmergency_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorEmergencySceneRequest Clone() {
      return new PutConnectorEmergencySceneRequest(this);
    }

    /// <summary>Field number for the "sceneId" field.</summary>
    public const int SceneIdFieldNumber = 1;
    private long sceneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    /// <summary>Field number for the "isEmergency" field.</summary>
    public const int IsEmergencyFieldNumber = 2;
    private bool isEmergency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsEmergency {
      get { return isEmergency_; }
      set {
        isEmergency_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutConnectorEmergencySceneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutConnectorEmergencySceneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SceneId != other.SceneId) return false;
      if (IsEmergency != other.IsEmergency) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SceneId != 0L) hash ^= SceneId.GetHashCode();
      if (IsEmergency != false) hash ^= IsEmergency.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SceneId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SceneId);
      }
      if (IsEmergency != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsEmergency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SceneId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SceneId);
      }
      if (IsEmergency != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutConnectorEmergencySceneRequest other) {
      if (other == null) {
        return;
      }
      if (other.SceneId != 0L) {
        SceneId = other.SceneId;
      }
      if (other.IsEmergency != false) {
        IsEmergency = other.IsEmergency;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SceneId = input.ReadInt64();
            break;
          }
          case 16: {
            IsEmergency = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutConnectorEmergencySceneResponse : pb::IMessage<PutConnectorEmergencySceneResponse> {
    private static readonly pb::MessageParser<PutConnectorEmergencySceneResponse> _parser = new pb::MessageParser<PutConnectorEmergencySceneResponse>(() => new PutConnectorEmergencySceneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutConnectorEmergencySceneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorEmergencySceneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorEmergencySceneResponse(PutConnectorEmergencySceneResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      connectorBase_ = other.connectorBase_ != null ? other.connectorBase_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorEmergencySceneResponse Clone() {
      return new PutConnectorEmergencySceneResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "connectorBase" field.</summary>
    public const int ConnectorBaseFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.ConnectorBase connectorBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.ConnectorBase ConnectorBase {
      get { return connectorBase_; }
      set {
        connectorBase_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutConnectorEmergencySceneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutConnectorEmergencySceneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(ConnectorBase, other.ConnectorBase)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (connectorBase_ != null) hash ^= ConnectorBase.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (connectorBase_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConnectorBase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (connectorBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConnectorBase);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutConnectorEmergencySceneResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.connectorBase_ != null) {
        if (connectorBase_ == null) {
          ConnectorBase = new global::Saturn.Backends.Protocols.Common.ConnectorBase();
        }
        ConnectorBase.MergeFrom(other.ConnectorBase);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (connectorBase_ == null) {
              ConnectorBase = new global::Saturn.Backends.Protocols.Common.ConnectorBase();
            }
            input.ReadMessage(ConnectorBase);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GET schedule?from={FROM_INDEX}&amp;size={ITEM_COUNTS}
  /// </summary>
  public sealed partial class GetScheduleResponse : pb::IMessage<GetScheduleResponse> {
    private static readonly pb::MessageParser<GetScheduleResponse> _parser = new pb::MessageParser<GetScheduleResponse>(() => new GetScheduleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetScheduleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetScheduleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetScheduleResponse(GetScheduleResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      schedules_ = other.schedules_.Clone();
      paginator_ = other.paginator_ != null ? other.paginator_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetScheduleResponse Clone() {
      return new GetScheduleResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "schedules" field.</summary>
    public const int SchedulesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.Schedule> _repeated_schedules_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Common.Schedule.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.Schedule> schedules_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.Schedule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.Schedule> Schedules {
      get { return schedules_; }
    }

    /// <summary>Field number for the "paginator" field.</summary>
    public const int PaginatorFieldNumber = 3;
    private global::Saturn.Backends.Protocols.Common.Paginator paginator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Paginator Paginator {
      get { return paginator_; }
      set {
        paginator_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetScheduleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetScheduleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!schedules_.Equals(other.schedules_)) return false;
      if (!object.Equals(Paginator, other.Paginator)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= schedules_.GetHashCode();
      if (paginator_ != null) hash ^= Paginator.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      schedules_.WriteTo(output, _repeated_schedules_codec);
      if (paginator_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Paginator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += schedules_.CalculateSize(_repeated_schedules_codec);
      if (paginator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Paginator);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetScheduleResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      schedules_.Add(other.schedules_);
      if (other.paginator_ != null) {
        if (paginator_ == null) {
          Paginator = new global::Saturn.Backends.Protocols.Common.Paginator();
        }
        Paginator.MergeFrom(other.Paginator);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            schedules_.AddEntriesFrom(input, _repeated_schedules_codec);
            break;
          }
          case 26: {
            if (paginator_ == null) {
              Paginator = new global::Saturn.Backends.Protocols.Common.Paginator();
            }
            input.ReadMessage(Paginator);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GET schedule/{Schedule_Id}
  /// </summary>
  public sealed partial class GetScheduleByIdResponse : pb::IMessage<GetScheduleByIdResponse> {
    private static readonly pb::MessageParser<GetScheduleByIdResponse> _parser = new pb::MessageParser<GetScheduleByIdResponse>(() => new GetScheduleByIdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetScheduleByIdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetScheduleByIdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetScheduleByIdResponse(GetScheduleByIdResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetScheduleByIdResponse Clone() {
      return new GetScheduleByIdResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Schedule schedule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Schedule Schedule {
      get { return schedule_; }
      set {
        schedule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetScheduleByIdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetScheduleByIdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Schedule, other.Schedule)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (schedule_ != null) hash ^= Schedule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (schedule_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Schedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (schedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetScheduleByIdResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.schedule_ != null) {
        if (schedule_ == null) {
          Schedule = new global::Saturn.Backends.Protocols.Common.Schedule();
        }
        Schedule.MergeFrom(other.Schedule);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (schedule_ == null) {
              Schedule = new global::Saturn.Backends.Protocols.Common.Schedule();
            }
            input.ReadMessage(Schedule);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// POST schedule
  /// REQUEST  : PostScheduleRequest
  /// RESPONSE : PostScheduleResponse
  /// </summary>
  public sealed partial class PostScheduleRequest : pb::IMessage<PostScheduleRequest> {
    private static readonly pb::MessageParser<PostScheduleRequest> _parser = new pb::MessageParser<PostScheduleRequest>(() => new PostScheduleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostScheduleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostScheduleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostScheduleRequest(PostScheduleRequest other) : this() {
      schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostScheduleRequest Clone() {
      return new PostScheduleRequest(this);
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.Schedule schedule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Schedule Schedule {
      get { return schedule_; }
      set {
        schedule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostScheduleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostScheduleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Schedule, other.Schedule)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (schedule_ != null) hash ^= Schedule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (schedule_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Schedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (schedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostScheduleRequest other) {
      if (other == null) {
        return;
      }
      if (other.schedule_ != null) {
        if (schedule_ == null) {
          Schedule = new global::Saturn.Backends.Protocols.Common.Schedule();
        }
        Schedule.MergeFrom(other.Schedule);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (schedule_ == null) {
              Schedule = new global::Saturn.Backends.Protocols.Common.Schedule();
            }
            input.ReadMessage(Schedule);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostScheduleResponse : pb::IMessage<PostScheduleResponse> {
    private static readonly pb::MessageParser<PostScheduleResponse> _parser = new pb::MessageParser<PostScheduleResponse>(() => new PostScheduleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostScheduleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostScheduleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostScheduleResponse(PostScheduleResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostScheduleResponse Clone() {
      return new PostScheduleResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Schedule schedule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Schedule Schedule {
      get { return schedule_; }
      set {
        schedule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostScheduleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostScheduleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Schedule, other.Schedule)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (schedule_ != null) hash ^= Schedule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (schedule_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Schedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (schedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostScheduleResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.schedule_ != null) {
        if (schedule_ == null) {
          Schedule = new global::Saturn.Backends.Protocols.Common.Schedule();
        }
        Schedule.MergeFrom(other.Schedule);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (schedule_ == null) {
              Schedule = new global::Saturn.Backends.Protocols.Common.Schedule();
            }
            input.ReadMessage(Schedule);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// POST schedule/{scheduleId}/scene
  /// REQUEST  : PostScheduleSceneRequest
  /// RESPONSE : PostScheduleSceneResponse
  /// </summary>
  public sealed partial class PostScheduleSceneRequest : pb::IMessage<PostScheduleSceneRequest> {
    private static readonly pb::MessageParser<PostScheduleSceneRequest> _parser = new pb::MessageParser<PostScheduleSceneRequest>(() => new PostScheduleSceneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostScheduleSceneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostScheduleSceneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostScheduleSceneRequest(PostScheduleSceneRequest other) : this() {
      name_ = other.name_;
      sceneId_ = other.sceneId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostScheduleSceneRequest Clone() {
      return new PostScheduleSceneRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sceneId" field.</summary>
    public const int SceneIdFieldNumber = 2;
    private long sceneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostScheduleSceneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostScheduleSceneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (SceneId != other.SceneId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SceneId != 0L) hash ^= SceneId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (SceneId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SceneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SceneId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SceneId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostScheduleSceneRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SceneId != 0L) {
        SceneId = other.SceneId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            SceneId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostScheduleSceneResponse : pb::IMessage<PostScheduleSceneResponse> {
    private static readonly pb::MessageParser<PostScheduleSceneResponse> _parser = new pb::MessageParser<PostScheduleSceneResponse>(() => new PostScheduleSceneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostScheduleSceneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostScheduleSceneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostScheduleSceneResponse(PostScheduleSceneResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      scheduleScene_ = other.scheduleScene_ != null ? other.scheduleScene_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostScheduleSceneResponse Clone() {
      return new PostScheduleSceneResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "scheduleScene" field.</summary>
    public const int ScheduleSceneFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.ScheduleScene scheduleScene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.ScheduleScene ScheduleScene {
      get { return scheduleScene_; }
      set {
        scheduleScene_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostScheduleSceneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostScheduleSceneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(ScheduleScene, other.ScheduleScene)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (scheduleScene_ != null) hash ^= ScheduleScene.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (scheduleScene_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScheduleScene);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (scheduleScene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduleScene);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostScheduleSceneResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.scheduleScene_ != null) {
        if (scheduleScene_ == null) {
          ScheduleScene = new global::Saturn.Backends.Protocols.Common.ScheduleScene();
        }
        ScheduleScene.MergeFrom(other.ScheduleScene);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (scheduleScene_ == null) {
              ScheduleScene = new global::Saturn.Backends.Protocols.Common.ScheduleScene();
            }
            input.ReadMessage(ScheduleScene);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// PUT schdule/{Schedule_Id}
  /// </summary>
  public sealed partial class PutScheduleRequest : pb::IMessage<PutScheduleRequest> {
    private static readonly pb::MessageParser<PutScheduleRequest> _parser = new pb::MessageParser<PutScheduleRequest>(() => new PutScheduleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutScheduleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutScheduleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutScheduleRequest(PutScheduleRequest other) : this() {
      schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutScheduleRequest Clone() {
      return new PutScheduleRequest(this);
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.Schedule schedule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Schedule Schedule {
      get { return schedule_; }
      set {
        schedule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutScheduleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutScheduleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Schedule, other.Schedule)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (schedule_ != null) hash ^= Schedule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (schedule_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Schedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (schedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutScheduleRequest other) {
      if (other == null) {
        return;
      }
      if (other.schedule_ != null) {
        if (schedule_ == null) {
          Schedule = new global::Saturn.Backends.Protocols.Common.Schedule();
        }
        Schedule.MergeFrom(other.Schedule);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (schedule_ == null) {
              Schedule = new global::Saturn.Backends.Protocols.Common.Schedule();
            }
            input.ReadMessage(Schedule);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutScheduleResponse : pb::IMessage<PutScheduleResponse> {
    private static readonly pb::MessageParser<PutScheduleResponse> _parser = new pb::MessageParser<PutScheduleResponse>(() => new PutScheduleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutScheduleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutScheduleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutScheduleResponse(PutScheduleResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutScheduleResponse Clone() {
      return new PutScheduleResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Schedule schedule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Schedule Schedule {
      get { return schedule_; }
      set {
        schedule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutScheduleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutScheduleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Schedule, other.Schedule)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (schedule_ != null) hash ^= Schedule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (schedule_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Schedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (schedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutScheduleResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.schedule_ != null) {
        if (schedule_ == null) {
          Schedule = new global::Saturn.Backends.Protocols.Common.Schedule();
        }
        Schedule.MergeFrom(other.Schedule);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (schedule_ == null) {
              Schedule = new global::Saturn.Backends.Protocols.Common.Schedule();
            }
            input.ReadMessage(Schedule);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DELETE schedule/{ScheduleId}
  /// </summary>
  public sealed partial class DeleteScheduleResponse : pb::IMessage<DeleteScheduleResponse> {
    private static readonly pb::MessageParser<DeleteScheduleResponse> _parser = new pb::MessageParser<DeleteScheduleResponse>(() => new DeleteScheduleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteScheduleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteScheduleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteScheduleResponse(DeleteScheduleResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteScheduleResponse Clone() {
      return new DeleteScheduleResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteScheduleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteScheduleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteScheduleResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GET schedule/scene?from={FROM_INDEX}&amp;size={ITEM_COUNTS}
  /// </summary>
  public sealed partial class GetScheduleSceneResponse : pb::IMessage<GetScheduleSceneResponse> {
    private static readonly pb::MessageParser<GetScheduleSceneResponse> _parser = new pb::MessageParser<GetScheduleSceneResponse>(() => new GetScheduleSceneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetScheduleSceneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetScheduleSceneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetScheduleSceneResponse(GetScheduleSceneResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      scheduleScenes_ = other.scheduleScenes_.Clone();
      paginator_ = other.paginator_ != null ? other.paginator_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetScheduleSceneResponse Clone() {
      return new GetScheduleSceneResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "scheduleScenes" field.</summary>
    public const int ScheduleScenesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.ScheduleScene> _repeated_scheduleScenes_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Common.ScheduleScene.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ScheduleScene> scheduleScenes_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ScheduleScene>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.ScheduleScene> ScheduleScenes {
      get { return scheduleScenes_; }
    }

    /// <summary>Field number for the "paginator" field.</summary>
    public const int PaginatorFieldNumber = 3;
    private global::Saturn.Backends.Protocols.Common.Paginator paginator_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Paginator Paginator {
      get { return paginator_; }
      set {
        paginator_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetScheduleSceneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetScheduleSceneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!scheduleScenes_.Equals(other.scheduleScenes_)) return false;
      if (!object.Equals(Paginator, other.Paginator)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= scheduleScenes_.GetHashCode();
      if (paginator_ != null) hash ^= Paginator.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      scheduleScenes_.WriteTo(output, _repeated_scheduleScenes_codec);
      if (paginator_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Paginator);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += scheduleScenes_.CalculateSize(_repeated_scheduleScenes_codec);
      if (paginator_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Paginator);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetScheduleSceneResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      scheduleScenes_.Add(other.scheduleScenes_);
      if (other.paginator_ != null) {
        if (paginator_ == null) {
          Paginator = new global::Saturn.Backends.Protocols.Common.Paginator();
        }
        Paginator.MergeFrom(other.Paginator);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            scheduleScenes_.AddEntriesFrom(input, _repeated_scheduleScenes_codec);
            break;
          }
          case 26: {
            if (paginator_ == null) {
              Paginator = new global::Saturn.Backends.Protocols.Common.Paginator();
            }
            input.ReadMessage(Paginator);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GET schedule/scene/{Schedule_Id}
  /// </summary>
  public sealed partial class GetScheduleSceneByIdResponse : pb::IMessage<GetScheduleSceneByIdResponse> {
    private static readonly pb::MessageParser<GetScheduleSceneByIdResponse> _parser = new pb::MessageParser<GetScheduleSceneByIdResponse>(() => new GetScheduleSceneByIdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetScheduleSceneByIdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetScheduleSceneByIdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetScheduleSceneByIdResponse(GetScheduleSceneByIdResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      scheduleScene_ = other.scheduleScene_ != null ? other.scheduleScene_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetScheduleSceneByIdResponse Clone() {
      return new GetScheduleSceneByIdResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "scheduleScene" field.</summary>
    public const int ScheduleSceneFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.ScheduleScene scheduleScene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.ScheduleScene ScheduleScene {
      get { return scheduleScene_; }
      set {
        scheduleScene_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetScheduleSceneByIdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetScheduleSceneByIdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(ScheduleScene, other.ScheduleScene)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (scheduleScene_ != null) hash ^= ScheduleScene.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (scheduleScene_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScheduleScene);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (scheduleScene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduleScene);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetScheduleSceneByIdResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.scheduleScene_ != null) {
        if (scheduleScene_ == null) {
          ScheduleScene = new global::Saturn.Backends.Protocols.Common.ScheduleScene();
        }
        ScheduleScene.MergeFrom(other.ScheduleScene);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (scheduleScene_ == null) {
              ScheduleScene = new global::Saturn.Backends.Protocols.Common.ScheduleScene();
            }
            input.ReadMessage(ScheduleScene);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// PUT schdule/scene/{ScheduleSceneId}
  /// </summary>
  public sealed partial class PutScheduleSceneRequest : pb::IMessage<PutScheduleSceneRequest> {
    private static readonly pb::MessageParser<PutScheduleSceneRequest> _parser = new pb::MessageParser<PutScheduleSceneRequest>(() => new PutScheduleSceneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutScheduleSceneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutScheduleSceneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutScheduleSceneRequest(PutScheduleSceneRequest other) : this() {
      name_ = other.name_;
      scheduleId_ = other.scheduleId_;
      sceneId_ = other.sceneId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutScheduleSceneRequest Clone() {
      return new PutScheduleSceneRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scheduleId" field.</summary>
    public const int ScheduleIdFieldNumber = 2;
    private long scheduleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ScheduleId {
      get { return scheduleId_; }
      set {
        scheduleId_ = value;
      }
    }

    /// <summary>Field number for the "sceneId" field.</summary>
    public const int SceneIdFieldNumber = 3;
    private long sceneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SceneId {
      get { return sceneId_; }
      set {
        sceneId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutScheduleSceneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutScheduleSceneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ScheduleId != other.ScheduleId) return false;
      if (SceneId != other.SceneId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ScheduleId != 0L) hash ^= ScheduleId.GetHashCode();
      if (SceneId != 0L) hash ^= SceneId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ScheduleId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ScheduleId);
      }
      if (SceneId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(SceneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ScheduleId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ScheduleId);
      }
      if (SceneId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SceneId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutScheduleSceneRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ScheduleId != 0L) {
        ScheduleId = other.ScheduleId;
      }
      if (other.SceneId != 0L) {
        SceneId = other.SceneId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            ScheduleId = input.ReadInt64();
            break;
          }
          case 24: {
            SceneId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutScheduleSceneResponse : pb::IMessage<PutScheduleSceneResponse> {
    private static readonly pb::MessageParser<PutScheduleSceneResponse> _parser = new pb::MessageParser<PutScheduleSceneResponse>(() => new PutScheduleSceneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutScheduleSceneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutScheduleSceneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutScheduleSceneResponse(PutScheduleSceneResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      scheduleScene_ = other.scheduleScene_ != null ? other.scheduleScene_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutScheduleSceneResponse Clone() {
      return new PutScheduleSceneResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "scheduleScene" field.</summary>
    public const int ScheduleSceneFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.ScheduleScene scheduleScene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.ScheduleScene ScheduleScene {
      get { return scheduleScene_; }
      set {
        scheduleScene_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutScheduleSceneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutScheduleSceneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(ScheduleScene, other.ScheduleScene)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (scheduleScene_ != null) hash ^= ScheduleScene.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (scheduleScene_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScheduleScene);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (scheduleScene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScheduleScene);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutScheduleSceneResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.scheduleScene_ != null) {
        if (scheduleScene_ == null) {
          ScheduleScene = new global::Saturn.Backends.Protocols.Common.ScheduleScene();
        }
        ScheduleScene.MergeFrom(other.ScheduleScene);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (scheduleScene_ == null) {
              ScheduleScene = new global::Saturn.Backends.Protocols.Common.ScheduleScene();
            }
            input.ReadMessage(ScheduleScene);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DELETE schedule/scene/{ScheduleSceneId}
  /// </summary>
  public sealed partial class DeleteScheduleSceneResponse : pb::IMessage<DeleteScheduleSceneResponse> {
    private static readonly pb::MessageParser<DeleteScheduleSceneResponse> _parser = new pb::MessageParser<DeleteScheduleSceneResponse>(() => new DeleteScheduleSceneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteScheduleSceneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteScheduleSceneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteScheduleSceneResponse(DeleteScheduleSceneResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteScheduleSceneResponse Clone() {
      return new DeleteScheduleSceneResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteScheduleSceneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteScheduleSceneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteScheduleSceneResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// POST connector/{Connector_Id}/schedule
  /// request  PostConnectorScheduleRequest
  /// response PostConnectorScheduleResponse
  /// </summary>
  public sealed partial class PostConnectorScheduleRequest : pb::IMessage<PostConnectorScheduleRequest> {
    private static readonly pb::MessageParser<PostConnectorScheduleRequest> _parser = new pb::MessageParser<PostConnectorScheduleRequest>(() => new PostConnectorScheduleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostConnectorScheduleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConnectorScheduleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConnectorScheduleRequest(PostConnectorScheduleRequest other) : this() {
      scheduleSceneId_ = other.scheduleSceneId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConnectorScheduleRequest Clone() {
      return new PostConnectorScheduleRequest(this);
    }

    /// <summary>Field number for the "scheduleSceneId" field.</summary>
    public const int ScheduleSceneIdFieldNumber = 1;
    private long scheduleSceneId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ScheduleSceneId {
      get { return scheduleSceneId_; }
      set {
        scheduleSceneId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostConnectorScheduleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostConnectorScheduleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ScheduleSceneId != other.ScheduleSceneId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ScheduleSceneId != 0L) hash ^= ScheduleSceneId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ScheduleSceneId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ScheduleSceneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ScheduleSceneId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ScheduleSceneId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostConnectorScheduleRequest other) {
      if (other == null) {
        return;
      }
      if (other.ScheduleSceneId != 0L) {
        ScheduleSceneId = other.ScheduleSceneId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ScheduleSceneId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostConnectorScheduleResponse : pb::IMessage<PostConnectorScheduleResponse> {
    private static readonly pb::MessageParser<PostConnectorScheduleResponse> _parser = new pb::MessageParser<PostConnectorScheduleResponse>(() => new PostConnectorScheduleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostConnectorScheduleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConnectorScheduleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConnectorScheduleResponse(PostConnectorScheduleResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      connectorScheduleScene_ = other.connectorScheduleScene_ != null ? other.connectorScheduleScene_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConnectorScheduleResponse Clone() {
      return new PostConnectorScheduleResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "connectorScheduleScene" field.</summary>
    public const int ConnectorScheduleSceneFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.ConnectorScheduleScene connectorScheduleScene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.ConnectorScheduleScene ConnectorScheduleScene {
      get { return connectorScheduleScene_; }
      set {
        connectorScheduleScene_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostConnectorScheduleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostConnectorScheduleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(ConnectorScheduleScene, other.ConnectorScheduleScene)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (connectorScheduleScene_ != null) hash ^= ConnectorScheduleScene.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (connectorScheduleScene_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConnectorScheduleScene);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (connectorScheduleScene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConnectorScheduleScene);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostConnectorScheduleResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.connectorScheduleScene_ != null) {
        if (connectorScheduleScene_ == null) {
          ConnectorScheduleScene = new global::Saturn.Backends.Protocols.Common.ConnectorScheduleScene();
        }
        ConnectorScheduleScene.MergeFrom(other.ConnectorScheduleScene);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (connectorScheduleScene_ == null) {
              ConnectorScheduleScene = new global::Saturn.Backends.Protocols.Common.ConnectorScheduleScene();
            }
            input.ReadMessage(ConnectorScheduleScene);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// PUT connector/{Connector_Id}/schedule/{Connector_Scene_Schedule_Id}
  /// request  PutConnectorScheduleRequest
  /// response PutConnectorScheduleResponse
  /// </summary>
  public sealed partial class PutConnectorScheduleRequest : pb::IMessage<PutConnectorScheduleRequest> {
    private static readonly pb::MessageParser<PutConnectorScheduleRequest> _parser = new pb::MessageParser<PutConnectorScheduleRequest>(() => new PutConnectorScheduleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutConnectorScheduleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorScheduleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorScheduleRequest(PutConnectorScheduleRequest other) : this() {
      sceneBase_ = other.sceneBase_ != null ? other.sceneBase_.Clone() : null;
      schedule_ = other.schedule_ != null ? other.schedule_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorScheduleRequest Clone() {
      return new PutConnectorScheduleRequest(this);
    }

    /// <summary>Field number for the "sceneBase" field.</summary>
    public const int SceneBaseFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.SceneBase sceneBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.SceneBase SceneBase {
      get { return sceneBase_; }
      set {
        sceneBase_ = value;
      }
    }

    /// <summary>Field number for the "schedule" field.</summary>
    public const int ScheduleFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Schedule schedule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Schedule Schedule {
      get { return schedule_; }
      set {
        schedule_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutConnectorScheduleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutConnectorScheduleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SceneBase, other.SceneBase)) return false;
      if (!object.Equals(Schedule, other.Schedule)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sceneBase_ != null) hash ^= SceneBase.GetHashCode();
      if (schedule_ != null) hash ^= Schedule.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sceneBase_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SceneBase);
      }
      if (schedule_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Schedule);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sceneBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SceneBase);
      }
      if (schedule_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Schedule);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutConnectorScheduleRequest other) {
      if (other == null) {
        return;
      }
      if (other.sceneBase_ != null) {
        if (sceneBase_ == null) {
          SceneBase = new global::Saturn.Backends.Protocols.Common.SceneBase();
        }
        SceneBase.MergeFrom(other.SceneBase);
      }
      if (other.schedule_ != null) {
        if (schedule_ == null) {
          Schedule = new global::Saturn.Backends.Protocols.Common.Schedule();
        }
        Schedule.MergeFrom(other.Schedule);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sceneBase_ == null) {
              SceneBase = new global::Saturn.Backends.Protocols.Common.SceneBase();
            }
            input.ReadMessage(SceneBase);
            break;
          }
          case 18: {
            if (schedule_ == null) {
              Schedule = new global::Saturn.Backends.Protocols.Common.Schedule();
            }
            input.ReadMessage(Schedule);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutConnectorScheduleResponse : pb::IMessage<PutConnectorScheduleResponse> {
    private static readonly pb::MessageParser<PutConnectorScheduleResponse> _parser = new pb::MessageParser<PutConnectorScheduleResponse>(() => new PutConnectorScheduleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutConnectorScheduleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorScheduleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorScheduleResponse(PutConnectorScheduleResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      connectorScheduleScene_ = other.connectorScheduleScene_ != null ? other.connectorScheduleScene_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutConnectorScheduleResponse Clone() {
      return new PutConnectorScheduleResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "connectorScheduleScene" field.</summary>
    public const int ConnectorScheduleSceneFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.ConnectorScheduleScene connectorScheduleScene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.ConnectorScheduleScene ConnectorScheduleScene {
      get { return connectorScheduleScene_; }
      set {
        connectorScheduleScene_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutConnectorScheduleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutConnectorScheduleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(ConnectorScheduleScene, other.ConnectorScheduleScene)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (connectorScheduleScene_ != null) hash ^= ConnectorScheduleScene.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (connectorScheduleScene_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConnectorScheduleScene);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (connectorScheduleScene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConnectorScheduleScene);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutConnectorScheduleResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.connectorScheduleScene_ != null) {
        if (connectorScheduleScene_ == null) {
          ConnectorScheduleScene = new global::Saturn.Backends.Protocols.Common.ConnectorScheduleScene();
        }
        ConnectorScheduleScene.MergeFrom(other.ConnectorScheduleScene);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (connectorScheduleScene_ == null) {
              ConnectorScheduleScene = new global::Saturn.Backends.Protocols.Common.ConnectorScheduleScene();
            }
            input.ReadMessage(ConnectorScheduleScene);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DELETE connector/{Connector_Id}/schedule/{Connector_Scene_Schedule_Id}
  /// </summary>
  public sealed partial class DeleteConnectorScheduleResponse : pb::IMessage<DeleteConnectorScheduleResponse> {
    private static readonly pb::MessageParser<DeleteConnectorScheduleResponse> _parser = new pb::MessageParser<DeleteConnectorScheduleResponse>(() => new DeleteConnectorScheduleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteConnectorScheduleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectorScheduleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectorScheduleResponse(DeleteConnectorScheduleResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConnectorScheduleResponse Clone() {
      return new DeleteConnectorScheduleResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteConnectorScheduleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteConnectorScheduleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteConnectorScheduleResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// weather?nx={NX}&amp;ny={NY}
  /// </summary>
  public sealed partial class GetWeatherResponse : pb::IMessage<GetWeatherResponse> {
    private static readonly pb::MessageParser<GetWeatherResponse> _parser = new pb::MessageParser<GetWeatherResponse>(() => new GetWeatherResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWeatherResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWeatherResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWeatherResponse(GetWeatherResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      weather_ = other.weather_ != null ? other.weather_.Clone() : null;
      dateTimeSeconds_ = other.dateTimeSeconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWeatherResponse Clone() {
      return new GetWeatherResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "weather" field.</summary>
    public const int WeatherFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Weather weather_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Weather Weather {
      get { return weather_; }
      set {
        weather_ = value;
      }
    }

    /// <summary>Field number for the "dateTimeSeconds" field.</summary>
    public const int DateTimeSecondsFieldNumber = 3;
    private long dateTimeSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DateTimeSeconds {
      get { return dateTimeSeconds_; }
      set {
        dateTimeSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWeatherResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWeatherResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Weather, other.Weather)) return false;
      if (DateTimeSeconds != other.DateTimeSeconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (weather_ != null) hash ^= Weather.GetHashCode();
      if (DateTimeSeconds != 0L) hash ^= DateTimeSeconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (weather_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Weather);
      }
      if (DateTimeSeconds != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(DateTimeSeconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (weather_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weather);
      }
      if (DateTimeSeconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DateTimeSeconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWeatherResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.weather_ != null) {
        if (weather_ == null) {
          Weather = new global::Saturn.Backends.Protocols.Common.Weather();
        }
        Weather.MergeFrom(other.Weather);
      }
      if (other.DateTimeSeconds != 0L) {
        DateTimeSeconds = other.DateTimeSeconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (weather_ == null) {
              Weather = new global::Saturn.Backends.Protocols.Common.Weather();
            }
            input.ReadMessage(Weather);
            break;
          }
          case 24: {
            DateTimeSeconds = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //////////////////////////////////////////////////////////////////////////////
  /// GET department/{DEPARTMENT_ID}/rf
  /// </summary>
  public sealed partial class GetDepartmentResourceFolderResponse : pb::IMessage<GetDepartmentResourceFolderResponse> {
    private static readonly pb::MessageParser<GetDepartmentResourceFolderResponse> _parser = new pb::MessageParser<GetDepartmentResourceFolderResponse>(() => new GetDepartmentResourceFolderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDepartmentResourceFolderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentResourceFolderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentResourceFolderResponse(GetDepartmentResourceFolderResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentResourceFolderResponse Clone() {
      return new GetDepartmentResourceFolderResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Prometheus.GetDepartmentResourceFolderResponse.Types.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Prometheus.GetDepartmentResourceFolderResponse.Types.Item.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Prometheus.GetDepartmentResourceFolderResponse.Types.Item> items_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Prometheus.GetDepartmentResourceFolderResponse.Types.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Prometheus.GetDepartmentResourceFolderResponse.Types.Item> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDepartmentResourceFolderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDepartmentResourceFolderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDepartmentResourceFolderResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetDepartmentResourceFolderResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Item : pb::IMessage<Item> {
        private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Item> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Saturn.Backends.Protocols.Prometheus.GetDepartmentResourceFolderResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item(Item other) : this() {
          departmentNodeBase_ = other.departmentNodeBase_ != null ? other.departmentNodeBase_.Clone() : null;
          departmentBase_ = other.departmentBase_ != null ? other.departmentBase_.Clone() : null;
          resourceFolders_ = other.resourceFolders_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item Clone() {
          return new Item(this);
        }

        /// <summary>Field number for the "departmentNodeBase" field.</summary>
        public const int DepartmentNodeBaseFieldNumber = 1;
        private global::Saturn.Backends.Protocols.Common.DepartmentNodeBase departmentNodeBase_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Saturn.Backends.Protocols.Common.DepartmentNodeBase DepartmentNodeBase {
          get { return departmentNodeBase_; }
          set {
            departmentNodeBase_ = value;
          }
        }

        /// <summary>Field number for the "departmentBase" field.</summary>
        public const int DepartmentBaseFieldNumber = 2;
        private global::Saturn.Backends.Protocols.Common.DepartmentBase departmentBase_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Saturn.Backends.Protocols.Common.DepartmentBase DepartmentBase {
          get { return departmentBase_; }
          set {
            departmentBase_ = value;
          }
        }

        /// <summary>Field number for the "resourceFolders" field.</summary>
        public const int ResourceFoldersFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.DepartmentResourceFolder> _repeated_resourceFolders_codec
            = pb::FieldCodec.ForMessage(26, global::Saturn.Backends.Protocols.Common.DepartmentResourceFolder.Parser);
        private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.DepartmentResourceFolder> resourceFolders_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.DepartmentResourceFolder>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.DepartmentResourceFolder> ResourceFolders {
          get { return resourceFolders_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Item);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Item other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(DepartmentNodeBase, other.DepartmentNodeBase)) return false;
          if (!object.Equals(DepartmentBase, other.DepartmentBase)) return false;
          if(!resourceFolders_.Equals(other.resourceFolders_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (departmentNodeBase_ != null) hash ^= DepartmentNodeBase.GetHashCode();
          if (departmentBase_ != null) hash ^= DepartmentBase.GetHashCode();
          hash ^= resourceFolders_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (departmentNodeBase_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(DepartmentNodeBase);
          }
          if (departmentBase_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(DepartmentBase);
          }
          resourceFolders_.WriteTo(output, _repeated_resourceFolders_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (departmentNodeBase_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepartmentNodeBase);
          }
          if (departmentBase_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepartmentBase);
          }
          size += resourceFolders_.CalculateSize(_repeated_resourceFolders_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Item other) {
          if (other == null) {
            return;
          }
          if (other.departmentNodeBase_ != null) {
            if (departmentNodeBase_ == null) {
              DepartmentNodeBase = new global::Saturn.Backends.Protocols.Common.DepartmentNodeBase();
            }
            DepartmentNodeBase.MergeFrom(other.DepartmentNodeBase);
          }
          if (other.departmentBase_ != null) {
            if (departmentBase_ == null) {
              DepartmentBase = new global::Saturn.Backends.Protocols.Common.DepartmentBase();
            }
            DepartmentBase.MergeFrom(other.DepartmentBase);
          }
          resourceFolders_.Add(other.resourceFolders_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (departmentNodeBase_ == null) {
                  DepartmentNodeBase = new global::Saturn.Backends.Protocols.Common.DepartmentNodeBase();
                }
                input.ReadMessage(DepartmentNodeBase);
                break;
              }
              case 18: {
                if (departmentBase_ == null) {
                  DepartmentBase = new global::Saturn.Backends.Protocols.Common.DepartmentBase();
                }
                input.ReadMessage(DepartmentBase);
                break;
              }
              case 26: {
                resourceFolders_.AddEntriesFrom(input, _repeated_resourceFolders_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// POST department/{DEPARTMENT_ID}/rf
  /// </summary>
  public sealed partial class PostDepartmentResourceFolderRequest : pb::IMessage<PostDepartmentResourceFolderRequest> {
    private static readonly pb::MessageParser<PostDepartmentResourceFolderRequest> _parser = new pb::MessageParser<PostDepartmentResourceFolderRequest>(() => new PostDepartmentResourceFolderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostDepartmentResourceFolderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentResourceFolderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentResourceFolderRequest(PostDepartmentResourceFolderRequest other) : this() {
      name_ = other.name_;
      parentDepartmentResourceFolderId_ = other.parentDepartmentResourceFolderId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentResourceFolderRequest Clone() {
      return new PostDepartmentResourceFolderRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parentDepartmentResourceFolderId" field.</summary>
    public const int ParentDepartmentResourceFolderIdFieldNumber = 2;
    private long parentDepartmentResourceFolderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ParentDepartmentResourceFolderId {
      get { return parentDepartmentResourceFolderId_; }
      set {
        parentDepartmentResourceFolderId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostDepartmentResourceFolderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostDepartmentResourceFolderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ParentDepartmentResourceFolderId != other.ParentDepartmentResourceFolderId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ParentDepartmentResourceFolderId != 0L) hash ^= ParentDepartmentResourceFolderId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ParentDepartmentResourceFolderId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ParentDepartmentResourceFolderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ParentDepartmentResourceFolderId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ParentDepartmentResourceFolderId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostDepartmentResourceFolderRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ParentDepartmentResourceFolderId != 0L) {
        ParentDepartmentResourceFolderId = other.ParentDepartmentResourceFolderId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            ParentDepartmentResourceFolderId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostDepartmentResourceFolderResponse : pb::IMessage<PostDepartmentResourceFolderResponse> {
    private static readonly pb::MessageParser<PostDepartmentResourceFolderResponse> _parser = new pb::MessageParser<PostDepartmentResourceFolderResponse>(() => new PostDepartmentResourceFolderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostDepartmentResourceFolderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentResourceFolderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentResourceFolderResponse(PostDepartmentResourceFolderResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      departmentResourceFolder_ = other.departmentResourceFolder_ != null ? other.departmentResourceFolder_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentResourceFolderResponse Clone() {
      return new PostDepartmentResourceFolderResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "departmentResourceFolder" field.</summary>
    public const int DepartmentResourceFolderFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.DepartmentResourceFolder departmentResourceFolder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.DepartmentResourceFolder DepartmentResourceFolder {
      get { return departmentResourceFolder_; }
      set {
        departmentResourceFolder_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostDepartmentResourceFolderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostDepartmentResourceFolderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(DepartmentResourceFolder, other.DepartmentResourceFolder)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (departmentResourceFolder_ != null) hash ^= DepartmentResourceFolder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (departmentResourceFolder_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DepartmentResourceFolder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (departmentResourceFolder_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepartmentResourceFolder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostDepartmentResourceFolderResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.departmentResourceFolder_ != null) {
        if (departmentResourceFolder_ == null) {
          DepartmentResourceFolder = new global::Saturn.Backends.Protocols.Common.DepartmentResourceFolder();
        }
        DepartmentResourceFolder.MergeFrom(other.DepartmentResourceFolder);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (departmentResourceFolder_ == null) {
              DepartmentResourceFolder = new global::Saturn.Backends.Protocols.Common.DepartmentResourceFolder();
            }
            input.ReadMessage(DepartmentResourceFolder);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// PUT department/{DEPARTMENT_ID}/rf/{DEPARTMENT_RESOURCE_FOLDER_ID}
  /// </summary>
  public sealed partial class PutDepartmentResourceFolderRequest : pb::IMessage<PutDepartmentResourceFolderRequest> {
    private static readonly pb::MessageParser<PutDepartmentResourceFolderRequest> _parser = new pb::MessageParser<PutDepartmentResourceFolderRequest>(() => new PutDepartmentResourceFolderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutDepartmentResourceFolderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentResourceFolderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentResourceFolderRequest(PutDepartmentResourceFolderRequest other) : this() {
      resourceIds_ = other.resourceIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentResourceFolderRequest Clone() {
      return new PutDepartmentResourceFolderRequest(this);
    }

    /// <summary>Field number for the "resourceIds" field.</summary>
    public const int ResourceIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_resourceIds_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> resourceIds_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> ResourceIds {
      get { return resourceIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutDepartmentResourceFolderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutDepartmentResourceFolderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!resourceIds_.Equals(other.resourceIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= resourceIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      resourceIds_.WriteTo(output, _repeated_resourceIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += resourceIds_.CalculateSize(_repeated_resourceIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutDepartmentResourceFolderRequest other) {
      if (other == null) {
        return;
      }
      resourceIds_.Add(other.resourceIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            resourceIds_.AddEntriesFrom(input, _repeated_resourceIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutDepartmentResourceFolderResponse : pb::IMessage<PutDepartmentResourceFolderResponse> {
    private static readonly pb::MessageParser<PutDepartmentResourceFolderResponse> _parser = new pb::MessageParser<PutDepartmentResourceFolderResponse>(() => new PutDepartmentResourceFolderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutDepartmentResourceFolderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentResourceFolderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentResourceFolderResponse(PutDepartmentResourceFolderResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      resourceIds_ = other.resourceIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentResourceFolderResponse Clone() {
      return new PutDepartmentResourceFolderResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "resourceIds" field.</summary>
    public const int ResourceIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_resourceIds_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> resourceIds_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> ResourceIds {
      get { return resourceIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutDepartmentResourceFolderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutDepartmentResourceFolderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!resourceIds_.Equals(other.resourceIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= resourceIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      resourceIds_.WriteTo(output, _repeated_resourceIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += resourceIds_.CalculateSize(_repeated_resourceIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutDepartmentResourceFolderResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      resourceIds_.Add(other.resourceIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18:
          case 16: {
            resourceIds_.AddEntriesFrom(input, _repeated_resourceIds_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// PATCH department/{DEPARTMENT_ID}/rf/{DEPARTMENT_RESOURCE_FOLDER_ID}
  /// </summary>
  public sealed partial class PatchDepartmentResourceFolderRequest : pb::IMessage<PatchDepartmentResourceFolderRequest> {
    private static readonly pb::MessageParser<PatchDepartmentResourceFolderRequest> _parser = new pb::MessageParser<PatchDepartmentResourceFolderRequest>(() => new PatchDepartmentResourceFolderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchDepartmentResourceFolderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchDepartmentResourceFolderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchDepartmentResourceFolderRequest(PatchDepartmentResourceFolderRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchDepartmentResourceFolderRequest Clone() {
      return new PatchDepartmentResourceFolderRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchDepartmentResourceFolderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchDepartmentResourceFolderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchDepartmentResourceFolderRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchDepartmentResourceFolderResponse : pb::IMessage<PatchDepartmentResourceFolderResponse> {
    private static readonly pb::MessageParser<PatchDepartmentResourceFolderResponse> _parser = new pb::MessageParser<PatchDepartmentResourceFolderResponse>(() => new PatchDepartmentResourceFolderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchDepartmentResourceFolderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchDepartmentResourceFolderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchDepartmentResourceFolderResponse(PatchDepartmentResourceFolderResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      departmentResourceFolder_ = other.departmentResourceFolder_ != null ? other.departmentResourceFolder_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchDepartmentResourceFolderResponse Clone() {
      return new PatchDepartmentResourceFolderResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "departmentResourceFolder" field.</summary>
    public const int DepartmentResourceFolderFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.DepartmentResourceFolder departmentResourceFolder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.DepartmentResourceFolder DepartmentResourceFolder {
      get { return departmentResourceFolder_; }
      set {
        departmentResourceFolder_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchDepartmentResourceFolderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchDepartmentResourceFolderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(DepartmentResourceFolder, other.DepartmentResourceFolder)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (departmentResourceFolder_ != null) hash ^= DepartmentResourceFolder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (departmentResourceFolder_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DepartmentResourceFolder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (departmentResourceFolder_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepartmentResourceFolder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchDepartmentResourceFolderResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.departmentResourceFolder_ != null) {
        if (departmentResourceFolder_ == null) {
          DepartmentResourceFolder = new global::Saturn.Backends.Protocols.Common.DepartmentResourceFolder();
        }
        DepartmentResourceFolder.MergeFrom(other.DepartmentResourceFolder);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (departmentResourceFolder_ == null) {
              DepartmentResourceFolder = new global::Saturn.Backends.Protocols.Common.DepartmentResourceFolder();
            }
            input.ReadMessage(DepartmentResourceFolder);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DELETE department/{DEPARTMENT_ID}/rf/{DEPARTMENT_RESOURCE_FOLDER_ID}
  /// </summary>
  public sealed partial class DeleteDepartmentResourceFolderResponse : pb::IMessage<DeleteDepartmentResourceFolderResponse> {
    private static readonly pb::MessageParser<DeleteDepartmentResourceFolderResponse> _parser = new pb::MessageParser<DeleteDepartmentResourceFolderResponse>(() => new DeleteDepartmentResourceFolderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDepartmentResourceFolderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentResourceFolderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentResourceFolderResponse(DeleteDepartmentResourceFolderResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentResourceFolderResponse Clone() {
      return new DeleteDepartmentResourceFolderResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDepartmentResourceFolderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDepartmentResourceFolderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDepartmentResourceFolderResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DELETE department/{DEPARTMENT_ID}/rf/{DEPARTMENT_RESOURCE_FOLDER_ID}/resource/{RESOURCE_ID}
  /// </summary>
  public sealed partial class DeleteDepartmentResourceFolderResourceResponse : pb::IMessage<DeleteDepartmentResourceFolderResourceResponse> {
    private static readonly pb::MessageParser<DeleteDepartmentResourceFolderResourceResponse> _parser = new pb::MessageParser<DeleteDepartmentResourceFolderResourceResponse>(() => new DeleteDepartmentResourceFolderResourceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDepartmentResourceFolderResourceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentResourceFolderResourceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentResourceFolderResourceResponse(DeleteDepartmentResourceFolderResourceResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentResourceFolderResourceResponse Clone() {
      return new DeleteDepartmentResourceFolderResourceResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDepartmentResourceFolderResourceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDepartmentResourceFolderResourceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDepartmentResourceFolderResourceResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  //////////////////////////////////////////////////////////////////////////////
  /// GET department/{DEPARTMENT_ID}/sf
  /// </summary>
  public sealed partial class GetDepartmentSceneFolderResponse : pb::IMessage<GetDepartmentSceneFolderResponse> {
    private static readonly pb::MessageParser<GetDepartmentSceneFolderResponse> _parser = new pb::MessageParser<GetDepartmentSceneFolderResponse>(() => new GetDepartmentSceneFolderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDepartmentSceneFolderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentSceneFolderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentSceneFolderResponse(GetDepartmentSceneFolderResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDepartmentSceneFolderResponse Clone() {
      return new GetDepartmentSceneFolderResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Prometheus.GetDepartmentSceneFolderResponse.Types.Item> _repeated_items_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Prometheus.GetDepartmentSceneFolderResponse.Types.Item.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Prometheus.GetDepartmentSceneFolderResponse.Types.Item> items_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Prometheus.GetDepartmentSceneFolderResponse.Types.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Prometheus.GetDepartmentSceneFolderResponse.Types.Item> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDepartmentSceneFolderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDepartmentSceneFolderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDepartmentSceneFolderResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetDepartmentSceneFolderResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Item : pb::IMessage<Item> {
        private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Item> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Saturn.Backends.Protocols.Prometheus.GetDepartmentSceneFolderResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item(Item other) : this() {
          departmentNodeBase_ = other.departmentNodeBase_ != null ? other.departmentNodeBase_.Clone() : null;
          departmentBase_ = other.departmentBase_ != null ? other.departmentBase_.Clone() : null;
          sceneFolders_ = other.sceneFolders_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Item Clone() {
          return new Item(this);
        }

        /// <summary>Field number for the "departmentNodeBase" field.</summary>
        public const int DepartmentNodeBaseFieldNumber = 1;
        private global::Saturn.Backends.Protocols.Common.DepartmentNodeBase departmentNodeBase_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Saturn.Backends.Protocols.Common.DepartmentNodeBase DepartmentNodeBase {
          get { return departmentNodeBase_; }
          set {
            departmentNodeBase_ = value;
          }
        }

        /// <summary>Field number for the "departmentBase" field.</summary>
        public const int DepartmentBaseFieldNumber = 2;
        private global::Saturn.Backends.Protocols.Common.DepartmentBase departmentBase_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Saturn.Backends.Protocols.Common.DepartmentBase DepartmentBase {
          get { return departmentBase_; }
          set {
            departmentBase_ = value;
          }
        }

        /// <summary>Field number for the "sceneFolders" field.</summary>
        public const int SceneFoldersFieldNumber = 3;
        private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.DepartmentSceneFolder> _repeated_sceneFolders_codec
            = pb::FieldCodec.ForMessage(26, global::Saturn.Backends.Protocols.Common.DepartmentSceneFolder.Parser);
        private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.DepartmentSceneFolder> sceneFolders_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.DepartmentSceneFolder>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.DepartmentSceneFolder> SceneFolders {
          get { return sceneFolders_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Item);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Item other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(DepartmentNodeBase, other.DepartmentNodeBase)) return false;
          if (!object.Equals(DepartmentBase, other.DepartmentBase)) return false;
          if(!sceneFolders_.Equals(other.sceneFolders_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (departmentNodeBase_ != null) hash ^= DepartmentNodeBase.GetHashCode();
          if (departmentBase_ != null) hash ^= DepartmentBase.GetHashCode();
          hash ^= sceneFolders_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (departmentNodeBase_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(DepartmentNodeBase);
          }
          if (departmentBase_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(DepartmentBase);
          }
          sceneFolders_.WriteTo(output, _repeated_sceneFolders_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (departmentNodeBase_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepartmentNodeBase);
          }
          if (departmentBase_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepartmentBase);
          }
          size += sceneFolders_.CalculateSize(_repeated_sceneFolders_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Item other) {
          if (other == null) {
            return;
          }
          if (other.departmentNodeBase_ != null) {
            if (departmentNodeBase_ == null) {
              DepartmentNodeBase = new global::Saturn.Backends.Protocols.Common.DepartmentNodeBase();
            }
            DepartmentNodeBase.MergeFrom(other.DepartmentNodeBase);
          }
          if (other.departmentBase_ != null) {
            if (departmentBase_ == null) {
              DepartmentBase = new global::Saturn.Backends.Protocols.Common.DepartmentBase();
            }
            DepartmentBase.MergeFrom(other.DepartmentBase);
          }
          sceneFolders_.Add(other.sceneFolders_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (departmentNodeBase_ == null) {
                  DepartmentNodeBase = new global::Saturn.Backends.Protocols.Common.DepartmentNodeBase();
                }
                input.ReadMessage(DepartmentNodeBase);
                break;
              }
              case 18: {
                if (departmentBase_ == null) {
                  DepartmentBase = new global::Saturn.Backends.Protocols.Common.DepartmentBase();
                }
                input.ReadMessage(DepartmentBase);
                break;
              }
              case 26: {
                sceneFolders_.AddEntriesFrom(input, _repeated_sceneFolders_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// POST department/{DEPARTMENT_ID}/sf
  /// </summary>
  public sealed partial class PostDepartmentSceneFolderRequest : pb::IMessage<PostDepartmentSceneFolderRequest> {
    private static readonly pb::MessageParser<PostDepartmentSceneFolderRequest> _parser = new pb::MessageParser<PostDepartmentSceneFolderRequest>(() => new PostDepartmentSceneFolderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostDepartmentSceneFolderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentSceneFolderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentSceneFolderRequest(PostDepartmentSceneFolderRequest other) : this() {
      name_ = other.name_;
      parentDepartmentSceneFolderId_ = other.parentDepartmentSceneFolderId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentSceneFolderRequest Clone() {
      return new PostDepartmentSceneFolderRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parentDepartmentSceneFolderId" field.</summary>
    public const int ParentDepartmentSceneFolderIdFieldNumber = 2;
    private long parentDepartmentSceneFolderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ParentDepartmentSceneFolderId {
      get { return parentDepartmentSceneFolderId_; }
      set {
        parentDepartmentSceneFolderId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostDepartmentSceneFolderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostDepartmentSceneFolderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ParentDepartmentSceneFolderId != other.ParentDepartmentSceneFolderId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ParentDepartmentSceneFolderId != 0L) hash ^= ParentDepartmentSceneFolderId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ParentDepartmentSceneFolderId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(ParentDepartmentSceneFolderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ParentDepartmentSceneFolderId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ParentDepartmentSceneFolderId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostDepartmentSceneFolderRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ParentDepartmentSceneFolderId != 0L) {
        ParentDepartmentSceneFolderId = other.ParentDepartmentSceneFolderId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            ParentDepartmentSceneFolderId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostDepartmentSceneFolderResponse : pb::IMessage<PostDepartmentSceneFolderResponse> {
    private static readonly pb::MessageParser<PostDepartmentSceneFolderResponse> _parser = new pb::MessageParser<PostDepartmentSceneFolderResponse>(() => new PostDepartmentSceneFolderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostDepartmentSceneFolderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentSceneFolderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentSceneFolderResponse(PostDepartmentSceneFolderResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      departmentSceneFolder_ = other.departmentSceneFolder_ != null ? other.departmentSceneFolder_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostDepartmentSceneFolderResponse Clone() {
      return new PostDepartmentSceneFolderResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "departmentSceneFolder" field.</summary>
    public const int DepartmentSceneFolderFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.DepartmentSceneFolder departmentSceneFolder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.DepartmentSceneFolder DepartmentSceneFolder {
      get { return departmentSceneFolder_; }
      set {
        departmentSceneFolder_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostDepartmentSceneFolderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostDepartmentSceneFolderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(DepartmentSceneFolder, other.DepartmentSceneFolder)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (departmentSceneFolder_ != null) hash ^= DepartmentSceneFolder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (departmentSceneFolder_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DepartmentSceneFolder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (departmentSceneFolder_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepartmentSceneFolder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostDepartmentSceneFolderResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.departmentSceneFolder_ != null) {
        if (departmentSceneFolder_ == null) {
          DepartmentSceneFolder = new global::Saturn.Backends.Protocols.Common.DepartmentSceneFolder();
        }
        DepartmentSceneFolder.MergeFrom(other.DepartmentSceneFolder);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (departmentSceneFolder_ == null) {
              DepartmentSceneFolder = new global::Saturn.Backends.Protocols.Common.DepartmentSceneFolder();
            }
            input.ReadMessage(DepartmentSceneFolder);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// PUT department/{DEPARTMENT_ID}/sf/{DEPARTMENT_SCENE_FOLDER_ID}
  /// </summary>
  public sealed partial class PutDepartmentSceneFolderRequest : pb::IMessage<PutDepartmentSceneFolderRequest> {
    private static readonly pb::MessageParser<PutDepartmentSceneFolderRequest> _parser = new pb::MessageParser<PutDepartmentSceneFolderRequest>(() => new PutDepartmentSceneFolderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutDepartmentSceneFolderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentSceneFolderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentSceneFolderRequest(PutDepartmentSceneFolderRequest other) : this() {
      sceneIds_ = other.sceneIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentSceneFolderRequest Clone() {
      return new PutDepartmentSceneFolderRequest(this);
    }

    /// <summary>Field number for the "sceneIds" field.</summary>
    public const int SceneIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_sceneIds_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> sceneIds_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> SceneIds {
      get { return sceneIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutDepartmentSceneFolderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutDepartmentSceneFolderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sceneIds_.Equals(other.sceneIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sceneIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      sceneIds_.WriteTo(output, _repeated_sceneIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += sceneIds_.CalculateSize(_repeated_sceneIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutDepartmentSceneFolderRequest other) {
      if (other == null) {
        return;
      }
      sceneIds_.Add(other.sceneIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            sceneIds_.AddEntriesFrom(input, _repeated_sceneIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PutDepartmentSceneFolderResponse : pb::IMessage<PutDepartmentSceneFolderResponse> {
    private static readonly pb::MessageParser<PutDepartmentSceneFolderResponse> _parser = new pb::MessageParser<PutDepartmentSceneFolderResponse>(() => new PutDepartmentSceneFolderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutDepartmentSceneFolderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentSceneFolderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentSceneFolderResponse(PutDepartmentSceneFolderResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      sceneIds_ = other.sceneIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutDepartmentSceneFolderResponse Clone() {
      return new PutDepartmentSceneFolderResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "sceneIds" field.</summary>
    public const int SceneIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_sceneIds_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> sceneIds_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> SceneIds {
      get { return sceneIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutDepartmentSceneFolderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutDepartmentSceneFolderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!sceneIds_.Equals(other.sceneIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= sceneIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      sceneIds_.WriteTo(output, _repeated_sceneIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += sceneIds_.CalculateSize(_repeated_sceneIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutDepartmentSceneFolderResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      sceneIds_.Add(other.sceneIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18:
          case 16: {
            sceneIds_.AddEntriesFrom(input, _repeated_sceneIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchDepartmentSceneFolderRequest : pb::IMessage<PatchDepartmentSceneFolderRequest> {
    private static readonly pb::MessageParser<PatchDepartmentSceneFolderRequest> _parser = new pb::MessageParser<PatchDepartmentSceneFolderRequest>(() => new PatchDepartmentSceneFolderRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchDepartmentSceneFolderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchDepartmentSceneFolderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchDepartmentSceneFolderRequest(PatchDepartmentSceneFolderRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchDepartmentSceneFolderRequest Clone() {
      return new PatchDepartmentSceneFolderRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchDepartmentSceneFolderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchDepartmentSceneFolderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchDepartmentSceneFolderRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchDepartmentSceneFolderResponse : pb::IMessage<PatchDepartmentSceneFolderResponse> {
    private static readonly pb::MessageParser<PatchDepartmentSceneFolderResponse> _parser = new pb::MessageParser<PatchDepartmentSceneFolderResponse>(() => new PatchDepartmentSceneFolderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchDepartmentSceneFolderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchDepartmentSceneFolderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchDepartmentSceneFolderResponse(PatchDepartmentSceneFolderResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      departmentSceneFolder_ = other.departmentSceneFolder_ != null ? other.departmentSceneFolder_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchDepartmentSceneFolderResponse Clone() {
      return new PatchDepartmentSceneFolderResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "departmentSceneFolder" field.</summary>
    public const int DepartmentSceneFolderFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.DepartmentSceneFolder departmentSceneFolder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.DepartmentSceneFolder DepartmentSceneFolder {
      get { return departmentSceneFolder_; }
      set {
        departmentSceneFolder_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchDepartmentSceneFolderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchDepartmentSceneFolderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(DepartmentSceneFolder, other.DepartmentSceneFolder)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (departmentSceneFolder_ != null) hash ^= DepartmentSceneFolder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (departmentSceneFolder_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DepartmentSceneFolder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (departmentSceneFolder_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DepartmentSceneFolder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchDepartmentSceneFolderResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.departmentSceneFolder_ != null) {
        if (departmentSceneFolder_ == null) {
          DepartmentSceneFolder = new global::Saturn.Backends.Protocols.Common.DepartmentSceneFolder();
        }
        DepartmentSceneFolder.MergeFrom(other.DepartmentSceneFolder);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (departmentSceneFolder_ == null) {
              DepartmentSceneFolder = new global::Saturn.Backends.Protocols.Common.DepartmentSceneFolder();
            }
            input.ReadMessage(DepartmentSceneFolder);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DELETE department/{DEPARTMENT_ID}/rf/{DEPARTMENT_SCENE_FOLDER_ID}
  /// </summary>
  public sealed partial class DeleteDepartmentSceneFolderResponse : pb::IMessage<DeleteDepartmentSceneFolderResponse> {
    private static readonly pb::MessageParser<DeleteDepartmentSceneFolderResponse> _parser = new pb::MessageParser<DeleteDepartmentSceneFolderResponse>(() => new DeleteDepartmentSceneFolderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDepartmentSceneFolderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentSceneFolderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentSceneFolderResponse(DeleteDepartmentSceneFolderResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDepartmentSceneFolderResponse Clone() {
      return new DeleteDepartmentSceneFolderResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDepartmentSceneFolderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDepartmentSceneFolderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDepartmentSceneFolderResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////
  /// REQUEST  : GET scene/folder/{DEPARTMENT_SCENE_FOLDER_ID}/scenes
  /// QUERY    : ?from=0&amp;size=10
  /// RESPONSE : GetSceneFolderScenesResponse
  /// </summary>
  public sealed partial class GetSceneFolderScenesResponse : pb::IMessage<GetSceneFolderScenesResponse> {
    private static readonly pb::MessageParser<GetSceneFolderScenesResponse> _parser = new pb::MessageParser<GetSceneFolderScenesResponse>(() => new GetSceneFolderScenesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSceneFolderScenesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneFolderScenesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneFolderScenesResponse(GetSceneFolderScenesResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      sceneBases_ = other.sceneBases_.Clone();
      itemsCount_ = other.itemsCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneFolderScenesResponse Clone() {
      return new GetSceneFolderScenesResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "sceneBases" field.</summary>
    public const int SceneBasesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.SceneBase> _repeated_sceneBases_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Common.SceneBase.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase> sceneBases_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase> SceneBases {
      get { return sceneBases_; }
    }

    /// <summary>Field number for the "itemsCount" field.</summary>
    public const int ItemsCountFieldNumber = 3;
    private int itemsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemsCount {
      get { return itemsCount_; }
      set {
        itemsCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSceneFolderScenesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSceneFolderScenesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!sceneBases_.Equals(other.sceneBases_)) return false;
      if (ItemsCount != other.ItemsCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= sceneBases_.GetHashCode();
      if (ItemsCount != 0) hash ^= ItemsCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      sceneBases_.WriteTo(output, _repeated_sceneBases_codec);
      if (ItemsCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemsCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += sceneBases_.CalculateSize(_repeated_sceneBases_codec);
      if (ItemsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemsCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSceneFolderScenesResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      sceneBases_.Add(other.sceneBases_);
      if (other.ItemsCount != 0) {
        ItemsCount = other.ItemsCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            sceneBases_.AddEntriesFrom(input, _repeated_sceneBases_codec);
            break;
          }
          case 24: {
            ItemsCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class GetResourceFolderResourcesResponse : pb::IMessage<GetResourceFolderResourcesResponse> {
    private static readonly pb::MessageParser<GetResourceFolderResourcesResponse> _parser = new pb::MessageParser<GetResourceFolderResourcesResponse>(() => new GetResourceFolderResourcesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetResourceFolderResourcesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResourceFolderResourcesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResourceFolderResourcesResponse(GetResourceFolderResourcesResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      resources_ = other.resources_.Clone();
      itemCount_ = other.itemCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResourceFolderResourcesResponse Clone() {
      return new GetResourceFolderResourcesResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.Resource> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Common.Resource.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.Resource> resources_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.Resource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.Resource> Resources {
      get { return resources_; }
    }

    /// <summary>Field number for the "itemCount" field.</summary>
    public const int ItemCountFieldNumber = 3;
    private int itemCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemCount {
      get { return itemCount_; }
      set {
        itemCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetResourceFolderResourcesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetResourceFolderResourcesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!resources_.Equals(other.resources_)) return false;
      if (ItemCount != other.ItemCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= resources_.GetHashCode();
      if (ItemCount != 0) hash ^= ItemCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      resources_.WriteTo(output, _repeated_resources_codec);
      if (ItemCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (ItemCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetResourceFolderResourcesResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      resources_.Add(other.resources_);
      if (other.ItemCount != 0) {
        ItemCount = other.ItemCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
          case 24: {
            ItemCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetSubtitleRssResponse : pb::IMessage<GetSubtitleRssResponse> {
    private static readonly pb::MessageParser<GetSubtitleRssResponse> _parser = new pb::MessageParser<GetSubtitleRssResponse>(() => new GetSubtitleRssResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSubtitleRssResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSubtitleRssResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSubtitleRssResponse(GetSubtitleRssResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      feed_ = other.feed_ != null ? other.feed_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSubtitleRssResponse Clone() {
      return new GetSubtitleRssResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "feed" field.</summary>
    public const int FeedFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Feed feed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Feed Feed {
      get { return feed_; }
      set {
        feed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSubtitleRssResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSubtitleRssResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Feed, other.Feed)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (feed_ != null) hash ^= Feed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (feed_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Feed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (feed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Feed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSubtitleRssResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.feed_ != null) {
        if (feed_ == null) {
          Feed = new global::Saturn.Backends.Protocols.Common.Feed();
        }
        Feed.MergeFrom(other.Feed);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (feed_ == null) {
              Feed = new global::Saturn.Backends.Protocols.Common.Feed();
            }
            input.ReadMessage(Feed);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// REQUEST GET scene/{connectedSceneId}/navigation
  /// </summary>
  public sealed partial class GetSceneNavigationResponse : pb::IMessage<GetSceneNavigationResponse> {
    private static readonly pb::MessageParser<GetSceneNavigationResponse> _parser = new pb::MessageParser<GetSceneNavigationResponse>(() => new GetSceneNavigationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSceneNavigationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneNavigationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneNavigationResponse(GetSceneNavigationResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      scene_ = other.scene_ != null ? other.scene_.Clone() : null;
      sourceSceneBases_ = other.sourceSceneBases_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneNavigationResponse Clone() {
      return new GetSceneNavigationResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "scene" field.</summary>
    public const int SceneFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Scene scene_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Scene Scene {
      get { return scene_; }
      set {
        scene_ = value;
      }
    }

    /// <summary>Field number for the "sourceSceneBases" field.</summary>
    public const int SourceSceneBasesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.SceneBase> _repeated_sourceSceneBases_codec
        = pb::FieldCodec.ForMessage(26, global::Saturn.Backends.Protocols.Common.SceneBase.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase> sourceSceneBases_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase> SourceSceneBases {
      get { return sourceSceneBases_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSceneNavigationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSceneNavigationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Scene, other.Scene)) return false;
      if(!sourceSceneBases_.Equals(other.sourceSceneBases_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (scene_ != null) hash ^= Scene.GetHashCode();
      hash ^= sourceSceneBases_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (scene_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Scene);
      }
      sourceSceneBases_.WriteTo(output, _repeated_sourceSceneBases_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (scene_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scene);
      }
      size += sourceSceneBases_.CalculateSize(_repeated_sourceSceneBases_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSceneNavigationResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.scene_ != null) {
        if (scene_ == null) {
          Scene = new global::Saturn.Backends.Protocols.Common.Scene();
        }
        Scene.MergeFrom(other.Scene);
      }
      sourceSceneBases_.Add(other.sourceSceneBases_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (scene_ == null) {
              Scene = new global::Saturn.Backends.Protocols.Common.Scene();
            }
            input.ReadMessage(Scene);
            break;
          }
          case 26: {
            sourceSceneBases_.AddEntriesFrom(input, _repeated_sourceSceneBases_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CONTROLLER : ValidateController
  /// REQUEST : GET validate/scene?from=0&amp;size=10
  /// </summary>
  public sealed partial class GetValidateSceneResponse : pb::IMessage<GetValidateSceneResponse> {
    private static readonly pb::MessageParser<GetValidateSceneResponse> _parser = new pb::MessageParser<GetValidateSceneResponse>(() => new GetValidateSceneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetValidateSceneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetValidateSceneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetValidateSceneResponse(GetValidateSceneResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      sceneBases_ = other.sceneBases_.Clone();
      itemsCount_ = other.itemsCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetValidateSceneResponse Clone() {
      return new GetValidateSceneResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "sceneBases" field.</summary>
    public const int SceneBasesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.SceneBase> _repeated_sceneBases_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Common.SceneBase.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase> sceneBases_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase> SceneBases {
      get { return sceneBases_; }
    }

    /// <summary>Field number for the "itemsCount" field.</summary>
    public const int ItemsCountFieldNumber = 3;
    private int itemsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemsCount {
      get { return itemsCount_; }
      set {
        itemsCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetValidateSceneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetValidateSceneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!sceneBases_.Equals(other.sceneBases_)) return false;
      if (ItemsCount != other.ItemsCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= sceneBases_.GetHashCode();
      if (ItemsCount != 0) hash ^= ItemsCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      sceneBases_.WriteTo(output, _repeated_sceneBases_codec);
      if (ItemsCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemsCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += sceneBases_.CalculateSize(_repeated_sceneBases_codec);
      if (ItemsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemsCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetValidateSceneResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      sceneBases_.Add(other.sceneBases_);
      if (other.ItemsCount != 0) {
        ItemsCount = other.ItemsCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            sceneBases_.AddEntriesFrom(input, _repeated_sceneBases_codec);
            break;
          }
          case 24: {
            ItemsCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CONTROLLER : ValidateController
  /// REQUEST : validate/resource?from=0&amp;size=10
  /// </summary>
  public sealed partial class GetValidateResourceResponse : pb::IMessage<GetValidateResourceResponse> {
    private static readonly pb::MessageParser<GetValidateResourceResponse> _parser = new pb::MessageParser<GetValidateResourceResponse>(() => new GetValidateResourceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetValidateResourceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetValidateResourceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetValidateResourceResponse(GetValidateResourceResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      resources_ = other.resources_.Clone();
      itemsCount_ = other.itemsCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetValidateResourceResponse Clone() {
      return new GetValidateResourceResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.Resource> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Common.Resource.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.Resource> resources_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.Resource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.Resource> Resources {
      get { return resources_; }
    }

    /// <summary>Field number for the "itemsCount" field.</summary>
    public const int ItemsCountFieldNumber = 3;
    private int itemsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemsCount {
      get { return itemsCount_; }
      set {
        itemsCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetValidateResourceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetValidateResourceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!resources_.Equals(other.resources_)) return false;
      if (ItemsCount != other.ItemsCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= resources_.GetHashCode();
      if (ItemsCount != 0) hash ^= ItemsCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      resources_.WriteTo(output, _repeated_resources_codec);
      if (ItemsCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ItemsCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (ItemsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemsCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetValidateResourceResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      resources_.Add(other.resources_);
      if (other.ItemsCount != 0) {
        ItemsCount = other.ItemsCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
          case 24: {
            ItemsCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CONTROLLER : ValidateController.GetResourceById
  /// URI        : validate/resource/{RESOURCE_ID}
  /// REQUEST    : 
  /// RESPONSE   : GetValidateResourceByResourceIdResponse
  /// </summary>
  public sealed partial class GetValidateResourceByResourceIdResponse : pb::IMessage<GetValidateResourceByResourceIdResponse> {
    private static readonly pb::MessageParser<GetValidateResourceByResourceIdResponse> _parser = new pb::MessageParser<GetValidateResourceByResourceIdResponse>(() => new GetValidateResourceByResourceIdResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetValidateResourceByResourceIdResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetValidateResourceByResourceIdResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetValidateResourceByResourceIdResponse(GetValidateResourceByResourceIdResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      sceneBases_ = other.sceneBases_.Clone();
      itemCount_ = other.itemCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetValidateResourceByResourceIdResponse Clone() {
      return new GetValidateResourceByResourceIdResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Resource resource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Resource Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "sceneBases" field.</summary>
    public const int SceneBasesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.SceneBase> _repeated_sceneBases_codec
        = pb::FieldCodec.ForMessage(26, global::Saturn.Backends.Protocols.Common.SceneBase.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase> sceneBases_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase> SceneBases {
      get { return sceneBases_; }
    }

    /// <summary>Field number for the "itemCount" field.</summary>
    public const int ItemCountFieldNumber = 4;
    private int itemCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemCount {
      get { return itemCount_; }
      set {
        itemCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetValidateResourceByResourceIdResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetValidateResourceByResourceIdResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Resource, other.Resource)) return false;
      if(!sceneBases_.Equals(other.sceneBases_)) return false;
      if (ItemCount != other.ItemCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (resource_ != null) hash ^= Resource.GetHashCode();
      hash ^= sceneBases_.GetHashCode();
      if (ItemCount != 0) hash ^= ItemCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (resource_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Resource);
      }
      sceneBases_.WriteTo(output, _repeated_sceneBases_codec);
      if (ItemCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ItemCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      size += sceneBases_.CalculateSize(_repeated_sceneBases_codec);
      if (ItemCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetValidateResourceByResourceIdResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          Resource = new global::Saturn.Backends.Protocols.Common.Resource();
        }
        Resource.MergeFrom(other.Resource);
      }
      sceneBases_.Add(other.sceneBases_);
      if (other.ItemCount != 0) {
        ItemCount = other.ItemCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (resource_ == null) {
              Resource = new global::Saturn.Backends.Protocols.Common.Resource();
            }
            input.ReadMessage(Resource);
            break;
          }
          case 26: {
            sceneBases_.AddEntriesFrom(input, _repeated_sceneBases_codec);
            break;
          }
          case 32: {
            ItemCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CONTROLLER : ResourceController.UpdateResource
  /// </summary>
  public sealed partial class PutResourceResponse : pb::IMessage<PutResourceResponse> {
    private static readonly pb::MessageParser<PutResourceResponse> _parser = new pb::MessageParser<PutResourceResponse>(() => new PutResourceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PutResourceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutResourceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutResourceResponse(PutResourceResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PutResourceResponse Clone() {
      return new PutResourceResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Resource resource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Resource Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PutResourceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PutResourceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Resource, other.Resource)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (resource_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Resource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PutResourceResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          Resource = new global::Saturn.Backends.Protocols.Common.Resource();
        }
        Resource.MergeFrom(other.Resource);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (resource_ == null) {
              Resource = new global::Saturn.Backends.Protocols.Common.Resource();
            }
            input.ReadMessage(Resource);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CONTROLLER : ResourceController.GetItemByResourceId 
  /// URI        : GET resource/{DEPARTMENT_ID}/{DEPARTMENT_RESOURCE_FOLDER_ID}/{RESOURCE_ID}
  /// </summary>
  public sealed partial class GetResourceResponse : pb::IMessage<GetResourceResponse> {
    private static readonly pb::MessageParser<GetResourceResponse> _parser = new pb::MessageParser<GetResourceResponse>(() => new GetResourceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetResourceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResourceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResourceResponse(GetResourceResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      resource_ = other.resource_ != null ? other.resource_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResourceResponse Clone() {
      return new GetResourceResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.Resource resource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.Resource Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetResourceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetResourceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Resource, other.Resource)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (resource_ != null) hash ^= Resource.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (resource_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Resource);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (resource_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resource);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetResourceResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.resource_ != null) {
        if (resource_ == null) {
          Resource = new global::Saturn.Backends.Protocols.Common.Resource();
        }
        Resource.MergeFrom(other.Resource);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (resource_ == null) {
              Resource = new global::Saturn.Backends.Protocols.Common.Resource();
            }
            input.ReadMessage(Resource);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CONTROLLER : ResourceController.GetItems
  /// URI        : GET resource/folder/{DEPARTMENT_RESOURCE_FOLDER_ID}/resource?from={FROM_INDEX}&amp;size={SIZE}&amp;kind={SCENE_RESOURCE_KIND}
  /// request    : 
  /// response   : GetResourcesResponse
  /// </summary>
  public sealed partial class GetResourcesResponse : pb::IMessage<GetResourcesResponse> {
    private static readonly pb::MessageParser<GetResourcesResponse> _parser = new pb::MessageParser<GetResourcesResponse>(() => new GetResourcesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetResourcesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResourcesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResourcesResponse(GetResourcesResponse other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      resources_ = other.resources_.Clone();
      pagesCount_ = other.pagesCount_;
      itemsCount_ = other.itemsCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResourcesResponse Clone() {
      return new GetResourcesResponse(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.Resource> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(18, global::Saturn.Backends.Protocols.Common.Resource.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.Resource> resources_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.Resource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.Resource> Resources {
      get { return resources_; }
    }

    /// <summary>Field number for the "pagesCount" field.</summary>
    public const int PagesCountFieldNumber = 3;
    private int pagesCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PagesCount {
      get { return pagesCount_; }
      set {
        pagesCount_ = value;
      }
    }

    /// <summary>Field number for the "itemsCount" field.</summary>
    public const int ItemsCountFieldNumber = 4;
    private int itemsCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemsCount {
      get { return itemsCount_; }
      set {
        itemsCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetResourcesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetResourcesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!resources_.Equals(other.resources_)) return false;
      if (PagesCount != other.PagesCount) return false;
      if (ItemsCount != other.ItemsCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= resources_.GetHashCode();
      if (PagesCount != 0) hash ^= PagesCount.GetHashCode();
      if (ItemsCount != 0) hash ^= ItemsCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      resources_.WriteTo(output, _repeated_resources_codec);
      if (PagesCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PagesCount);
      }
      if (ItemsCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ItemsCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (PagesCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PagesCount);
      }
      if (ItemsCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemsCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetResourcesResponse other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      resources_.Add(other.resources_);
      if (other.PagesCount != 0) {
        PagesCount = other.PagesCount;
      }
      if (other.ItemsCount != 0) {
        ItemsCount = other.ItemsCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
          case 24: {
            PagesCount = input.ReadInt32();
            break;
          }
          case 32: {
            ItemsCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// CONTROLLER : SceneV2Controller.GetSceneBlueprint
  /// URI        : GET scene/v2/{SCENE_ID}/blueprint
  /// </summary>
  public sealed partial class GetSceneByIdBlueprintV2Response : pb::IMessage<GetSceneByIdBlueprintV2Response> {
    private static readonly pb::MessageParser<GetSceneByIdBlueprintV2Response> _parser = new pb::MessageParser<GetSceneByIdBlueprintV2Response>(() => new GetSceneByIdBlueprintV2Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSceneByIdBlueprintV2Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Saturn.Backends.Protocols.Prometheus.PrometheusReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneByIdBlueprintV2Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneByIdBlueprintV2Response(GetSceneByIdBlueprintV2Response other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      blueprint_ = other.blueprint_ != null ? other.blueprint_.Clone() : null;
      sceneBase_ = other.sceneBase_ != null ? other.sceneBase_.Clone() : null;
      sceneBases_ = other.sceneBases_.Clone();
      resources_ = other.resources_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSceneByIdBlueprintV2Response Clone() {
      return new GetSceneByIdBlueprintV2Response(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Saturn.Backends.Protocols.Common.CommonStatus common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.CommonStatus Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "blueprint" field.</summary>
    public const int BlueprintFieldNumber = 2;
    private global::Saturn.Backends.Protocols.Common.SceneBlueprint blueprint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.SceneBlueprint Blueprint {
      get { return blueprint_; }
      set {
        blueprint_ = value;
      }
    }

    /// <summary>Field number for the "sceneBase" field.</summary>
    public const int SceneBaseFieldNumber = 3;
    private global::Saturn.Backends.Protocols.Common.SceneBase sceneBase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Saturn.Backends.Protocols.Common.SceneBase SceneBase {
      get { return sceneBase_; }
      set {
        sceneBase_ = value;
      }
    }

    /// <summary>Field number for the "sceneBases" field.</summary>
    public const int SceneBasesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.SceneBase> _repeated_sceneBases_codec
        = pb::FieldCodec.ForMessage(34, global::Saturn.Backends.Protocols.Common.SceneBase.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase> sceneBases_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.SceneBase> SceneBases {
      get { return sceneBases_; }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Saturn.Backends.Protocols.Common.Resource> _repeated_resources_codec
        = pb::FieldCodec.ForMessage(42, global::Saturn.Backends.Protocols.Common.Resource.Parser);
    private readonly pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.Resource> resources_ = new pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.Resource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Saturn.Backends.Protocols.Common.Resource> Resources {
      get { return resources_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSceneByIdBlueprintV2Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSceneByIdBlueprintV2Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Blueprint, other.Blueprint)) return false;
      if (!object.Equals(SceneBase, other.SceneBase)) return false;
      if(!sceneBases_.Equals(other.sceneBases_)) return false;
      if(!resources_.Equals(other.resources_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (blueprint_ != null) hash ^= Blueprint.GetHashCode();
      if (sceneBase_ != null) hash ^= SceneBase.GetHashCode();
      hash ^= sceneBases_.GetHashCode();
      hash ^= resources_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (blueprint_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Blueprint);
      }
      if (sceneBase_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SceneBase);
      }
      sceneBases_.WriteTo(output, _repeated_sceneBases_codec);
      resources_.WriteTo(output, _repeated_resources_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (blueprint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blueprint);
      }
      if (sceneBase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SceneBase);
      }
      size += sceneBases_.CalculateSize(_repeated_sceneBases_codec);
      size += resources_.CalculateSize(_repeated_resources_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSceneByIdBlueprintV2Response other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.blueprint_ != null) {
        if (blueprint_ == null) {
          Blueprint = new global::Saturn.Backends.Protocols.Common.SceneBlueprint();
        }
        Blueprint.MergeFrom(other.Blueprint);
      }
      if (other.sceneBase_ != null) {
        if (sceneBase_ == null) {
          SceneBase = new global::Saturn.Backends.Protocols.Common.SceneBase();
        }
        SceneBase.MergeFrom(other.SceneBase);
      }
      sceneBases_.Add(other.sceneBases_);
      resources_.Add(other.resources_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Saturn.Backends.Protocols.Common.CommonStatus();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (blueprint_ == null) {
              Blueprint = new global::Saturn.Backends.Protocols.Common.SceneBlueprint();
            }
            input.ReadMessage(Blueprint);
            break;
          }
          case 26: {
            if (sceneBase_ == null) {
              SceneBase = new global::Saturn.Backends.Protocols.Common.SceneBase();
            }
            input.ReadMessage(SceneBase);
            break;
          }
          case 34: {
            sceneBases_.AddEntriesFrom(input, _repeated_sceneBases_codec);
            break;
          }
          case 42: {
            resources_.AddEntriesFrom(input, _repeated_resources_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
