<Window
    x:Class="Saturn.Viewer.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Saturn.Viewer"
    xmlns:map="clr-namespace:MapControl;assembly=MapControl.WPF"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:service="clr-namespace:Saturn.Viewer.Services"
    x:Name="AppWindow"
    Title="Saturn.Viewer"
    Width="500"
    Height="800"
    MinWidth="{Binding WindowMinimumWidth}"
    MinHeight="{Binding WindowMinimumHeight}"
    AllowsTransparency="False"
    Background="{DynamicResource MaterialDesignBackground}"
    FontFamily="{DynamicResource MaterialDesignFont}"
    Icon="Images/Logo/logo.png"
    ResizeMode="CanResize"
    TextElement.FontSize="13"
    TextElement.FontWeight="Regular"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    TextOptions.TextFormattingMode="Ideal"
    TextOptions.TextRenderingMode="Auto"
    WindowStartupLocation="CenterScreen"
    WindowStyle="None"
    mc:Ignorable="d">

    <Window.Resources>
        <local:LocationToVisibilityConverter x:Key="LocationToVisibilityConverter" />

        <DataTemplate x:Key="PolylineItemTemplate">
            <map:MapPolyline
                Locations="{Binding Locations}"
                Stroke="Red"
                StrokeThickness="3" />
        </DataTemplate>


        <!--
        <Style x:Key="PolylineItemStyle" TargetType="map:MapItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="map:MapItem">
                        <map:MapPolyline
                            Locations="{Binding Locations}"
                            Stroke="Red"
                            StrokeThickness="3" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PointItemStyle" TargetType="map:MapItem">
            <EventSetter Event="TouchDown" Handler="MapItemTouchDown" />
            <Setter Property="map:MapPanel.Location" Value="Location" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="map:MapItem">
                        <Canvas>
                            <Path
                                x:Name="selectedPath"
                                Fill="White"
                                Opacity="0">
                                <Path.Data>
                                    <EllipseGeometry RadiusX="15" RadiusY="15" />
                                </Path.Data>
                            </Path>
                            <Path Fill="Transparent" StrokeThickness="2">
                                <Path.Stroke>
                                    <SolidColorBrush Color="Gray" />
                                </Path.Stroke>
                                <Path.Data>
                                    <EllipseGeometry RadiusX="8" RadiusY="8" />
                                </Path.Data>
                            </Path>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="labelBackground"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0.7"
                                                Duration="0:0:0.1" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="selectedPath"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0.7"
                                                Duration="0:0:0.1" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Panel.ZIndex" Value="1" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PushpinItemStyle" TargetType="map:MapItem">
            <EventSetter Event="TouchDown" Handler="{Binding MapItemTouchDown}" />
            <Setter Property="map:MapPanel.Location" Value="{Binding Location}" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Visibility">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource LocationToVisibilityConverter}">
                        <Binding Path="(map:MapPanel.ParentMap)" RelativeSource="{RelativeSource Self}" />
                        <Binding Path="(map:MapPanel.ViewPosition)" RelativeSource="{RelativeSource Self}" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="map:MapItem">
                        <map:Pushpin Content="{Binding Name}" Foreground="{TemplateBinding Foreground}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Panel.ZIndex" Value="1" />
                    <Setter Property="Foreground" Value="OrangeRed" />
                </Trigger>
            </Style.Triggers>
        </Style>-->
        <map:WebMercatorProjection x:Key="WebMercatorProjection" />
        <map:WorldMercatorProjection x:Key="WorldMercatorProjection" />
        <map:EquirectangularProjection x:Key="EquirectangularProjection" />
        <map:OrthographicProjection x:Key="OrthographicProjection" />
        <map:GnomonicProjection x:Key="GnomonicProjection" />
        <map:StereographicProjection x:Key="StereographicProjection" />
    </Window.Resources>

    <Grid Background="{StaticResource ForegroundLightBrush}">
        <Frame x:Name="MainFrame" Content="{Binding CurrentKind, Converter={local:ApplicationPageValueConverter}, Source={x:Static service:PageService.Instance}}" />
    </Grid>

</Window>
